/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/bin/java -Dfile.encoding=UTF-8 -classpath /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/tools.jar:/Users/huangh/Documents/src/ImportExcel/target/classes:/Users/huangh/Documents/src/ImportExcel/lib/ojdbc7-12.1.0.2.jar:/Users/huangh/.m2/repository/org/apache/poi/poi/4.0.0/poi-4.0.0.jar:/Users/huangh/.m2/repository/commons-codec/commons-codec/1.10/commons-codec-1.10.jar:/Users/huangh/.m2/repository/org/apache/commons/commons-collections4/4.2/commons-collections4-4.2.jar:/Users/huangh/.m2/repository/org/apache/poi/poi-ooxml/4.0.0/poi-ooxml-4.0.0.jar:/Users/huangh/.m2/repository/org/apache/poi/poi-ooxml-schemas/4.0.0/poi-ooxml-schemas-4.0.0.jar:/Users/huangh/.m2/repository/org/apache/xmlbeans/xmlbeans/3.0.1/xmlbeans-3.0.1.jar:/Users/huangh/.m2/repository/org/apache/commons/commons-compress/1.18/commons-compress-1.18.jar:/Users/huangh/.m2/repository/com/github/virtuald/curvesapi/1.04/curvesapi-1.04.jar:/Users/huangh/.m2/repository/org/apache/poi/poi-scratchpad/4.0.0/poi-scratchpad-4.0.0.jar:/Users/huangh/.m2/repository/org/dom4j/dom4j/2.0.0/dom4j-2.0.0.jar:/Users/huangh/.m2/repository/jaxen/jaxen/1.1.6/jaxen-1.1.6.jar:/Users/huangh/.m2/repository/com/monitorjbl/xlsx-streamer/2.1.0/xlsx-streamer-2.1.0.jar:/Users/huangh/.m2/repository/com/rackspace/apache/xerces2-xsd11/2.11.1/xerces2-xsd11-2.11.1.jar:/Users/huangh/.m2/repository/com/rackspace/eclipse/webtools/sourceediting/org.eclipse.wst.xml.xpath2.processor/2.1.100/org.eclipse.wst.xml.xpath2.processor-2.1.100.jar:/Users/huangh/.m2/repository/edu/princeton/cup/java-cup/10k/java-cup-10k.jar:/Users/huangh/.m2/repository/com/ibm/icu/icu4j/4.6/icu4j-4.6.jar:/Users/huangh/.m2/repository/xml-resolver/xml-resolver/1.2/xml-resolver-1.2.jar:/Users/huangh/.m2/repository/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01.jar:/Users/huangh/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/huangh/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/huangh/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/huangh/.m2/repository/net/logstash/logback/logstash-logback-encoder/5.2/logstash-logback-encoder-5.2.jar:/Users/huangh/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.6/jackson-databind-2.9.6.jar:/Users/huangh/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/huangh/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.6/jackson-core-2.9.6.jar:/Users/huangh/.m2/repository/oracle/oracle-jdbc/12.1.0.2/oracle-jdbc-12.1.0.2.jar:/Users/huangh/.m2/repository/org/apache/commons/commons-lang3/3.7/commons-lang3-3.7.jar:/Users/huangh/.m2/repository/com/alibaba/easyexcel/2.2.6/easyexcel-2.2.6.jar:/Users/huangh/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar:/Users/huangh/.m2/repository/org/ow2/asm/asm/4.2/asm-4.2.jar:/Users/huangh/.m2/repository/org/ehcache/ehcache/3.4.0/ehcache-3.4.0.jar:/Users/huangh/.m2/repository/com/anaptecs/jeaf/owalibs/org.eclipse.jdt.core/4.3.1/org.eclipse.jdt.core-4.3.1.jar MbtNewRuleCreator2
delete from gp_qc_rule where DATA_CRT_USER = 'auto_generator';
delete from gp_qc_rule_map where DATA_CRT_USER = 'auto_generator';

insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_210_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_210_B_00','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000101_210_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_210_B_01','20210415','TESTCORP','72','002','账户类型不能为空','账户类型不能为空','非空校验','人民银行','B_ACCT_TYPE','账户类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_210_B_01','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000101_210_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_210_B_02','20210415','TESTCORP','72','002','账户标识码不能为空','账户标识码不能为空','非空校验','人民银行','B_ACCT_CODE','账户标识码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_210_B_02','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000101_210_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_210_B_03','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_210_B_03','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000101_210_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_210_B_04','20210415','TESTCORP','72','002','报告时点说明代码不能为空','报告时点说明代码不能为空','非空校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_210_B_04','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000101_210_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_B_05','20210415','TESTCORP','72','002','借款人姓名不能为空','借款人姓名不能为空','非空校验','人民银行','B_NAME','借款人姓名','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_B_05','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000101_21X_B_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_B_05','20210415','TESTCORP','72','002','MBT_PM_212_B','I0000101_21X_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_B_06','20210415','TESTCORP','72','002','借款人证件类型不能为空','借款人证件类型不能为空','非空校验','人民银行','B_ID_TYPE','借款人证件类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_B_06','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000101_21X_B_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_B_06','20210415','TESTCORP','72','002','MBT_PM_212_B','I0000101_21X_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_B_07','20210415','TESTCORP','72','002','借款人证件号码不能为空','借款人证件号码不能为空','非空校验','人民银行','B_ID_NUM','借款人证件号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_B_07','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000101_21X_B_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_B_07','20210415','TESTCORP','72','002','MBT_PM_212_B','I0000101_21X_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_B_08','20210415','TESTCORP','72','002','业务管理机构代码不能为空','业务管理机构代码不能为空','非空校验','人民银行','B_MNGMT_ORG_CODE','业务管理机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_B_08','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000101_21X_B_08','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_B_08','20210415','TESTCORP','72','002','MBT_PM_212_B','I0000101_21X_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_01','20210415','TESTCORP','72','002','借贷业务大类不能为空','借贷业务大类不能为空','非空校验','人民银行','C_BUSI_LINES','借贷业务大类','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_01','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_01','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_02','20210415','TESTCORP','72','002','借贷业务种类细分不能为空','借贷业务种类细分不能为空','非空校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_02','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_02','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_03','20210415','TESTCORP','72','002','开户日期不能为空','开户日期不能为空','非空校验','人民银行','C_OPEN_DATE','开户日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_03','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_03','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_04','20210415','TESTCORP','72','002','币种不能为空','币种不能为空','非空校验','人民银行','C_CY','币种','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_04','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_04','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_05','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R2‘,‘R3‘)时，信用额度不能为空','当账户类型 in (‘R1‘,‘R2‘,‘R3‘)时，信用额度不能为空','非空校验','人民银行','C_ACCT_CRED_LINE_AMT','信用额度','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R2'',''R3'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_05','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_05','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_06','20210415','TESTCORP','72','002','当账户类型 in (‘R4‘,‘D1‘,‘C1‘)时，借款金额不能为空','当账户类型 in (‘R4‘,‘D1‘,‘C1‘)时，借款金额不能为空','非空校验','人民银行','C_LOAN_AMT','借款金额','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R4'',''D1'',''C1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_06','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_06','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_07','20210415','TESTCORP','72','002','当账户类型 =‘D1‘时，分次放款标志不能为空','当账户类型 =‘D1‘时，分次放款标志不能为空','非空校验','人民银行','C_FLAG','分次放款标志','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE ==''D1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_07','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_07','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_08','20210415','TESTCORP','72','002','当账户类型<> ‘C1‘时，到期日期不能为空','当账户类型<> ‘C1‘时，到期日期不能为空','非空校验','人民银行','C_DUE_DATE','到期日期','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_08','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_08','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_08','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_09','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，还款方式不能为空','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，还款方式不能为空','非空校验','人民银行','C_REPAY_MODE','还款方式','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_09','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_09','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_09','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_10','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，还款频率不能为空','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，还款频率不能为空','非空校验','人民银行','C_REPAY_FREQCY','还款频率','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_10','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_10','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_10','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_10','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_11','20210415','TESTCORP','72','002','当账户类型 in (‘R4‘,‘D1‘)时，还款期数不能为空','当账户类型 in (‘R4‘,‘D1‘)时，还款期数不能为空','非空校验','人民银行','C_REPAY_PRD','还款期数','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_11','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_11','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_11','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_12','20210415','TESTCORP','72','002','当账户类型<> ‘C1‘时，担保方式不能为空','当账户类型<> ‘C1‘时，担保方式不能为空','非空校验','人民银行','C_GUAR_MODE','担保方式','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_12','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_12','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_12','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_13','20210415','TESTCORP','72','002','当账户类型<> ‘C1‘时，其他还款保证方式不能为空','当账户类型<> ‘C1‘时，其他还款保证方式不能为空','非空校验','人民银行','C_OTH_REPY_GUAR_WAY','其他还款保证方式','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_13','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_13','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_13','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_14','20210415','TESTCORP','72','002','当账户类型<> ‘C1‘时，资产转让标志不能为空','当账户类型<> ‘C1‘时，资产转让标志不能为空','非空校验','人民银行','C_ASSET_TRAND_FLAG','资产转让标志','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_14','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_14','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_14','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_15','20210415','TESTCORP','72','002','当账户类型<> ‘C1‘时，业务经营类型不能为空','当账户类型<> ‘C1‘时，业务经营类型不能为空','非空校验','人民银行','C_FUND_SOU','业务经营类型','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_15','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_15','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_15','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_16','20210415','TESTCORP','72','002','当账户类型<> ‘C1‘时，贷款发放形式不能为空','当账户类型<> ‘C1‘时，贷款发放形式不能为空','非空校验','人民银行','C_LOAN_FORM','贷款发放形式','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_16','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_16','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_16','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_16','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_17','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R2‘,‘R3‘)时，信用额度（原币）不能为空','当账户类型 in (‘R1‘,‘R2‘,‘R3‘)时，信用额度（原币）不能为空','非空校验','人民银行','C_ACCT_CRED_LINE_AMT_ORG','信用额度（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R2'',''R3'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_17','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_17','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_17','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_17','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_18','20210415','TESTCORP','72','002','当账户类型 in (‘R4‘,‘D1‘,‘C1‘)时，借款金额（原币）不能为空','当账户类型 in (‘R4‘,‘D1‘,‘C1‘)时，借款金额（原币）不能为空','非空校验','人民银行','C_LOAN_AMT_ORG','借款金额（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R4'',''D1'',''C1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_18','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_18','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_18','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_18','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_C_19','20210415','TESTCORP','72','002','当账户类型 in (‘R2‘,‘R3‘)时，卡片标识号不能为空','当账户类型 in (‘R2‘,‘R3‘)时，卡片标识号不能为空','非空校验','人民银行','C_CREDIT_ID','卡片标识号','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R2'',''R3'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_C_19','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000101_21X_C_19','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_C_19','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000101_21X_C_19','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_D_01','20210415','TESTCORP','72','002','身份类别不能为空','身份类别不能为空','非空校验','人民银行','D_ARLP_ID_TYPE','身份类别','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_D_01','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000101_21X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_D_01','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000101_21X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_D_02','20210415','TESTCORP','72','002','责任人名称不能为空','责任人名称不能为空','非空校验','人民银行','D_ARLP_NAME','责任人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_D_02','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000101_21X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_D_02','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000101_21X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_D_03','20210415','TESTCORP','72','002','责任人身份标识类型不能为空','责任人身份标识类型不能为空','非空校验','人民银行','D_ARLP_CERT_TYPE','责任人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_D_03','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000101_21X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_D_03','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000101_21X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_D_04','20210415','TESTCORP','72','002','责任人身份标识号码不能为空','责任人身份标识号码不能为空','非空校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_D_04','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000101_21X_D_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_D_04','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000101_21X_D_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_D_05','20210415','TESTCORP','72','002','还款责任人类型不能为空','还款责任人类型不能为空','非空校验','人民银行','D_ARLP_TYPE','还款责任人类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_D_05','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000101_21X_D_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_D_05','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000101_21X_D_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_E_01','20210415','TESTCORP','72','002','抵（质）押合同标识码不能为空','抵（质）押合同标识码不能为空','非空校验','人民银行','E_CCC','抵（质）押合同标识码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_E_01','20210415','TESTCORP','72','002','MBT_PM_210_E','I0000101_21X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_E_01','20210415','TESTCORP','72','002','MBT_PM_212_E','I0000101_21X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_F_01','20210415','TESTCORP','72','002','授信协议标识码不能为空','授信协议标识码不能为空','非空校验','人民银行','F_MCC','授信协议标识码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_F_01','20210415','TESTCORP','72','002','MBT_PM_210_F','I0000101_21X_F_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_F_01','20210415','TESTCORP','72','002','MBT_PM_212_F','I0000101_21X_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_G_01','20210415','TESTCORP','72','002','初始债权人名称不能为空','初始债权人名称不能为空','非空校验','人民银行','G_INIT_CRED_NAME','初始债权人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_G_01','20210415','TESTCORP','72','002','MBT_PM_210_G','I0000101_21X_G_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_G_01','20210415','TESTCORP','72','002','MBT_PM_212_G','I0000101_21X_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_G_02','20210415','TESTCORP','72','002','原债务种类不能为空','原债务种类不能为空','非空校验','人民银行','G_ORIG_DBT_CATE','原债务种类','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_G_02','20210415','TESTCORP','72','002','MBT_PM_210_G','I0000101_21X_G_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_G_02','20210415','TESTCORP','72','002','MBT_PM_212_G','I0000101_21X_G_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_G_03','20210415','TESTCORP','72','002','债权转移时的还款状态不能为空','债权转移时的还款状态不能为空','非空校验','人民银行','G_INIT_RPY_STS','债权转移时的还款状态','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_G_03','20210415','TESTCORP','72','002','MBT_PM_210_G','I0000101_21X_G_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_G_03','20210415','TESTCORP','72','002','MBT_PM_212_G','I0000101_21X_G_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_01','20210415','TESTCORP','72','002','月份不能为空','月份不能为空','非空校验','人民银行','H_MONTH','月份','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_02','20210415','TESTCORP','72','002','账户状态不能为空','账户状态不能为空','非空校验','人民银行','H_ACCT_STATUS','账户状态','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_02','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_02','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_03','20210415','TESTCORP','72','002','余额不能为空','余额不能为空','非空校验','人民银行','H_ACCT_BAL','余额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_03','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_03','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_04','20210415','TESTCORP','72','002','当账户类型 =‘R2‘时，本期账单余额不能为空','当账户类型 =‘R2‘时，本期账单余额不能为空','非空校验','人民银行','H_PRID_ACCT_BAL','本期账单余额','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE ==''R2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_04','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_04','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_05','20210415','TESTCORP','72','002','当账户类型 =‘R2‘时，已使用额度不能为空','当账户类型 =‘R2‘时，已使用额度不能为空','非空校验','人民银行','H_USED_AMT','已使用额度','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE ==''R2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_05','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_05','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_06','20210415','TESTCORP','72','002','当账户类型 =‘R2‘时，未出单的大额专项分期余额不能为空','当账户类型 =‘R2‘时，未出单的大额专项分期余额不能为空','非空校验','人民银行','H_NOTLSU_BAL','未出单的大额专项分期余额','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE ==''R2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_06','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_06','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_07','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，剩余还款期数不能为空','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，剩余还款期数不能为空','非空校验','人民银行','H_REM_REP_PRD','剩余还款期数','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R2'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_07','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_07','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_08','20210415','TESTCORP','72','002','五级分类不能为空','五级分类不能为空','非空校验','人民银行','H_FIVE_CATE','五级分类','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_08','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_08','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_08','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_09','20210415','TESTCORP','72','002','五级分类认定日期不能为空','五级分类认定日期不能为空','非空校验','人民银行','H_FIVE_CATE_ADJ_DATE','五级分类认定日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_09','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_09','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_09','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_10','20210415','TESTCORP','72','002','当前还款状态不能为空','当前还款状态不能为空','非空校验','人民银行','H_RPY_STATUS','当前还款状态','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_10','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_10','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_10','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_10','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_11','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，当前逾期期数不能为空','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，当前逾期期数不能为空','非空校验','人民银行','H_OVERD_PRD','当前逾期期数','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R2'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_11','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_11','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_11','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_12','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，当前逾期总额不能为空','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，当前逾期总额不能为空','非空校验','人民银行','H_TOT_OVERD','当前逾期总额','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R2'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_12','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_12','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_12','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_13','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，当前逾期本金不能为空','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，当前逾期本金不能为空','非空校验','人民银行','H_OVAER_PRINC','当前逾期本金','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_13','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_13','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_13','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_14','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 31-60 天未归还本金不能为空','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 31-60 天未归还本金不能为空','非空校验','人民银行','H_OVERD31_60PRINC','逾期31-60天未归还本金','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_14','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_14','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_14','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_15','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 61-90 天未归还本金不能为空','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 61-90 天未归还本金不能为空','非空校验','人民银行','H_OVERD61_90PRINC','逾期61-90天未归还本金','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_15','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_15','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_15','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_16','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 91-180 天未归还本金不能为空','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 91-180 天未归还本金不能为空','非空校验','人民银行','H_OVERD91_180PRINC','逾期91-180天未归还本金','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_16','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_16','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_16','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_16','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_17','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 180 天以上未归还本金不能为空','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 180 天以上未归还本金不能为空','非空校验','人民银行','H_OVERD_PRINC180','逾期180天以上未归还本金','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_17','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_17','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_17','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_17','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_18','20210415','TESTCORP','72','002','当账户类型 =‘R3‘时，透支 180 天以上未还余额不能为空','当账户类型 =‘R3‘时，透支 180 天以上未还余额不能为空','非空校验','人民银行','H_OVERD_RAW_BA_OVE180','透支180天以上未还余额','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE ==''R3'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_18','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_18','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_18','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_18','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_19','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，本月应还款金额不能为空','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，本月应还款金额不能为空','非空校验','人民银行','H_CUR_RPY_AMT','本月应还款金额','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R2'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_19','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_19','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_19','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_19','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_20','20210415','TESTCORP','72','002','本月实际还款金额不能为空','本月实际还款金额不能为空','非空校验','人民银行','H_ACT_RPY_AMT','本月实际还款金额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_20','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_20','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_20','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_20','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_21','20210415','TESTCORP','72','002','最近一次实际还款日期不能为空','最近一次实际还款日期不能为空','非空校验','人民银行','H_LAT_RPY_DATE','最近一次实际还款日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_21','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_21','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_21','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_22','20210415','TESTCORP','72','002','余额（原币）不能为空','余额（原币）不能为空','非空校验','人民银行','H_ACCT_BAL_ORG','余额（原币）','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_22','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_22','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_22','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_22','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_23','20210415','TESTCORP','72','002','当账户类型 =‘R2‘时，本期账单余额（原币）不能为空','当账户类型 =‘R2‘时，本期账单余额（原币）不能为空','非空校验','人民银行','H_PRID_ACCT_BAL_ORG','本期账单余额（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE ==''R2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_23','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_23','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_23','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_23','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_24','20210415','TESTCORP','72','002','当账户类型 =‘R2‘时，已使用额度（原币）不能为空','当账户类型 =‘R2‘时，已使用额度（原币）不能为空','非空校验','人民银行','H_USED_AMT_ORG','已使用额度（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE ==''R2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_24','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_24','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_24','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_24','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_25','20210415','TESTCORP','72','002','当账户类型 =‘R2‘时，未出单的大额专项分期余额（原币）不能为空','当账户类型 =‘R2‘时，未出单的大额专项分期余额（原币）不能为空','非空校验','人民银行','H_NOTLSU_BAL_ORG','未出单的大额专项分期余额（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE ==''R2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_25','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_25','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_25','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_25','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_26','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，当前逾期总额（原币）不能为空','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，当前逾期总额（原币）不能为空','非空校验','人民银行','H_TOT_OVERD_ORG','当前逾期总额（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R2'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_26','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_26','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_26','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_26','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_27','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，当前逾期本金（原币）不能为空','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，当前逾期本金（原币）不能为空','非空校验','人民银行','H_OVAER_PRINC_ORG','当前逾期本金（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_27','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_27','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_27','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_27','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_28','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 31-60 天未归还本金（原币）不能为空','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 31-60 天未归还本金（原币）不能为空','非空校验','人民银行','H_OVERD31_60PRINC_ORG','逾期31-60天未归还本金（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_28','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_28','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_28','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_28','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_29','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 61-90 天未归还本金（原币）不能为空','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 61-90 天未归还本金（原币）不能为空','非空校验','人民银行','H_OVERD61_90PRINC_ORG','逾期61-90天未归还本金（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_29','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_29','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_29','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_29','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_30','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 91-180 天未归还本金（原币）不能为空','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 91-180 天未归还本金（原币）不能为空','非空校验','人民银行','H_OVERD91_180PRINC_ORG','逾期91-180天未归还本金（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_30','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_30','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_31','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 180 天以上未归还本金（原币）不能为空','当账户类型 in (‘R1‘,‘R4‘,‘D1‘)时，逾期 180 天以上未归还本金（原币）不能为空','非空校验','人民银行','H_OVERD_PRINC180_ORG','逾期180天以上未归还本金（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_31','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_31','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_32','20210415','TESTCORP','72','002','当账户类型 =‘R3‘时，透支 180 天以上未还余额（原币）不能为空','当账户类型 =‘R3‘时，透支 180 天以上未还余额（原币）不能为空','非空校验','人民银行','H_OVERD_RAW_BA_OVE180_ORG','透支180天以上未还余额（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE ==''R3'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_32','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_32','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_32','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_33','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，本月应还款金额（原币）不能为空','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，本月应还款金额（原币）不能为空','非空校验','人民银行','H_CUR_RPY_AMT_ORG','本月应还款金额（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R2'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_33','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_33','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_33','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_H_34','20210415','TESTCORP','72','002','本月实际还款金额（原币）不能为空','本月实际还款金额（原币）不能为空','非空校验','人民银行','H_ACT_RPY_AMT_ORG','本月实际还款金额（原币）','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_H_34','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000101_21X_H_34','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_H_34','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000101_21X_H_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_I_01','20210415','TESTCORP','72','002','大额专项分期额度不能为空','大额专项分期额度不能为空','非空校验','人民银行','I_SPEC_LINE','大额专项分期额度','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_I_01','20210415','TESTCORP','72','002','MBT_PM_210_I','I0000101_21X_I_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_I_01','20210415','TESTCORP','72','002','MBT_PM_212_I','I0000101_21X_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_I_02','20210415','TESTCORP','72','002','分期额度生效日期不能为空','分期额度生效日期不能为空','非空校验','人民银行','I_SPEC_EFCT_DATE','分期额度生效日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_I_02','20210415','TESTCORP','72','002','MBT_PM_210_I','I0000101_21X_I_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_I_02','20210415','TESTCORP','72','002','MBT_PM_212_I','I0000101_21X_I_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_I_03','20210415','TESTCORP','72','002','分期额度到期日期不能为空','分期额度到期日期不能为空','非空校验','人民银行','I_SPEC_END_DATE','分期额度到期日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_I_03','20210415','TESTCORP','72','002','MBT_PM_210_I','I0000101_21X_I_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_I_03','20210415','TESTCORP','72','002','MBT_PM_212_I','I0000101_21X_I_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_I_04','20210415','TESTCORP','72','002','已用分期金额不能为空','已用分期金额不能为空','非空校验','人民银行','I_USED_INST_AMT','已用分期金额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_I_04','20210415','TESTCORP','72','002','MBT_PM_210_I','I0000101_21X_I_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_I_04','20210415','TESTCORP','72','002','MBT_PM_212_I','I0000101_21X_I_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_I_05','20210415','TESTCORP','72','002','大额专项分期额度（原币）不能为空','大额专项分期额度（原币）不能为空','非空校验','人民银行','I_SPEC_LINE_ORG','大额专项分期额度（原币）','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_I_05','20210415','TESTCORP','72','002','MBT_PM_210_I','I0000101_21X_I_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_I_05','20210415','TESTCORP','72','002','MBT_PM_212_I','I0000101_21X_I_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_I_06','20210415','TESTCORP','72','002','已用分期金额（原币）不能为空','已用分期金额（原币）不能为空','非空校验','人民银行','I_USED_INST_AMT_ORG','已用分期金额（原币）','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_I_06','20210415','TESTCORP','72','002','MBT_PM_210_I','I0000101_21X_I_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_I_06','20210415','TESTCORP','72','002','MBT_PM_212_I','I0000101_21X_I_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_J_01','20210415','TESTCORP','72','002','账户状态不能为空','账户状态不能为空','非空校验','人民银行','J_ACCT_STATUS','账户状态','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_J_01','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000101_21X_J_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_J_01','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000101_21X_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_J_02','20210415','TESTCORP','72','002','余额不能为空','余额不能为空','非空校验','人民银行','J_ACCT_BAL','余额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_J_02','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000101_21X_J_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_J_02','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000101_21X_J_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_J_03','20210415','TESTCORP','72','002','当账户类型<> ‘C1‘时，五级分类不能为空','当账户类型<> ‘C1‘时，五级分类不能为空','非空校验','人民银行','J_FIVE_CATE','五级分类','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_J_03','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000101_21X_J_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_J_03','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000101_21X_J_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_J_04','20210415','TESTCORP','72','002','当账户类型<> ‘C1‘时，五级分类认定日期不能为空','当账户类型<> ‘C1‘时，五级分类认定日期不能为空','非空校验','人民银行','J_FIVE_CATE_ADJ_DATE','五级分类认定日期','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_J_04','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000101_21X_J_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_J_04','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000101_21X_J_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_J_05','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，剩余还款期数不能为空','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，剩余还款期数不能为空','非空校验','人民银行','J_REM_REP_PRD','剩余还款期数','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R2'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_J_05','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000101_21X_J_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_J_05','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000101_21X_J_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_J_06','20210415','TESTCORP','72','002','当账户类型<> ‘C1‘时，当前还款状态不能为空','当账户类型<> ‘C1‘时，当前还款状态不能为空','非空校验','人民银行','J_RPY_STATUS','当前还款状态','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_J_06','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000101_21X_J_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_J_06','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000101_21X_J_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_J_07','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，当前逾期期数不能为空','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，当前逾期期数不能为空','非空校验','人民银行','J_OVERD_PRD','当前逾期期数','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R2'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_J_07','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000101_21X_J_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_J_07','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000101_21X_J_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_J_08','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，当前逾期总额不能为空','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，当前逾期总额不能为空','非空校验','人民银行','J_TOT_OVERD','当前逾期总额','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R2'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_J_08','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000101_21X_J_08','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_J_08','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000101_21X_J_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_J_09','20210415','TESTCORP','72','002','最近一次实际还款金额不能为空','最近一次实际还款金额不能为空','非空校验','人民银行','J_LAT_RPY_AMT','最近一次实际还款金额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_J_09','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000101_21X_J_09','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_J_09','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000101_21X_J_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_J_10','20210415','TESTCORP','72','002','最近一次实际还款日期不能为空','最近一次实际还款日期不能为空','非空校验','人民银行','J_LAT_RPY_DATE','最近一次实际还款日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_J_10','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000101_21X_J_10','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_J_10','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000101_21X_J_10','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_J_11','20210415','TESTCORP','72','002','余额（原币）不能为空','余额（原币）不能为空','非空校验','人民银行','J_ACCT_BAL_ORG','余额（原币）','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_J_11','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000101_21X_J_11','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_J_11','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000101_21X_J_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_J_12','20210415','TESTCORP','72','002','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，当前逾期总额（原币）不能为空','当账户类型 in (‘R1‘,‘R2‘,‘R4‘,‘D1‘)时，当前逾期总额（原币）不能为空','非空校验','人民银行','J_TOT_OVERD_ORG','当前逾期总额（原币）','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R1'',''R2'',''R4'',''D1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_J_12','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000101_21X_J_12','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_J_12','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000101_21X_J_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_J_13','20210415','TESTCORP','72','002','最近一次实际还款金额（原币）不能为空','最近一次实际还款金额（原币）不能为空','非空校验','人民银行','J_LAT_RPY_AMT_ORG','最近一次实际还款金额（原币）','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_J_13','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000101_21X_J_13','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_J_13','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000101_21X_J_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_K_01','20210415','TESTCORP','72','002','交易类型不能为空','交易类型不能为空','非空校验','人民银行','K_CHAN_TRAN_TYPE','交易类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_K_01','20210415','TESTCORP','72','002','MBT_PM_210_K','I0000101_21X_K_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_K_01','20210415','TESTCORP','72','002','MBT_PM_212_K','I0000101_21X_K_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_K_02','20210415','TESTCORP','72','002','交易日期不能为空','交易日期不能为空','非空校验','人民银行','K_TRAN_DATE','交易日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_K_02','20210415','TESTCORP','72','002','MBT_PM_210_K','I0000101_21X_K_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_K_02','20210415','TESTCORP','72','002','MBT_PM_212_K','I0000101_21X_K_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_K_03','20210415','TESTCORP','72','002','交易金额不能为空','交易金额不能为空','非空校验','人民银行','K_TRAN_AMT','交易金额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_K_03','20210415','TESTCORP','72','002','MBT_PM_210_K','I0000101_21X_K_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_K_03','20210415','TESTCORP','72','002','MBT_PM_212_K','I0000101_21X_K_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_K_04','20210415','TESTCORP','72','002','到期日期变更月数不能为空','到期日期变更月数不能为空','非空校验','人民银行','K_DUE_TRAN_MON','到期日期变更月数','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_K_04','20210415','TESTCORP','72','002','MBT_PM_210_K','I0000101_21X_K_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_K_04','20210415','TESTCORP','72','002','MBT_PM_212_K','I0000101_21X_K_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_K_05','20210415','TESTCORP','72','002','交易金额（原币）不能为空','交易金额（原币）不能为空','非空校验','人民银行','K_TRAN_AMT_ORG','交易金额（原币）','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_K_05','20210415','TESTCORP','72','002','MBT_PM_210_K','I0000101_21X_K_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_K_05','20210415','TESTCORP','72','002','MBT_PM_212_K','I0000101_21X_K_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_21X_K_06','20210415','TESTCORP','72','002','币种不能为空','币种不能为空','非空校验','人民银行','C_CY','币种','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_21X_K_06','20210415','TESTCORP','72','002','MBT_PM_210_K','I0000101_21X_K_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_212_K_06','20210415','TESTCORP','72','002','MBT_PM_212_K','I0000101_21X_K_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I2100C07_21X_C_01','20210415','TESTCORP','72','002','当且仅当“借贷业务种类细分”为“11-个人住房商业贷款”时，“贷款合同编号”不能为空。','当且仅当“借贷业务种类细分”为“11-个人住房商业贷款”时，“贷款合同编号”不能为空。','非空校验','人民银行','C_LOAN_CON_CODE','贷款合同编号','R','Y','if (!isEmpty(C_BUSI_DTL_LINES) && C_BUSI_DTL_LINES==''11'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C07_21X_C_01','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100C07_21X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C07_212_C_01','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100C07_21X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I2100C07_21X_C_02','20210415','TESTCORP','72','002','当且仅当“借贷业务种类细分”为“11-个人住房商业贷款”时，“是否为首套住房贷款”不能为空。','当且仅当“借贷业务种类细分”为“11-个人住房商业贷款”时，“是否为首套住房贷款”不能为空。','非空校验','人民银行','C_FIRST_HOU_LOAN_FLAG','是否为首套住房贷款','R','Y','if (!isEmpty(C_BUSI_DTL_LINES) && C_BUSI_DTL_LINES==''11'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C07_21X_C_02','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100C07_21X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C07_212_C_02','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100C07_21X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I2100D01_21X_D_01','20210415','TESTCORP','72','002','若“还款责任人类型”为“2-保证人”，则“还款责任金额”不能为空值。','若“还款责任人类型”为“2-保证人”，则“还款责任金额”不能为空值。','非空校验','人民银行','D_ARLP_AMT','还款责任金额','R','Y','if (!isEmpty(D_ARLP_TYPE) && D_ARLP_TYPE==''2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D01_21X_D_01','20210415','TESTCORP','72','002','MBT_PM_210_D','I2100D01_21X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D01_212_D_01','20210415','TESTCORP','72','002','MBT_PM_212_D','I2100D01_21X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I2100D01_21X_D_02','20210415','TESTCORP','72','002','若“还款责任人类型”为“2-保证人”，则“还款责任金额（原币）”不能为空值。','若“还款责任人类型”为“2-保证人”，则“还款责任金额（原币）”不能为空值。','非空校验','人民银行','D_ARLP_AMT_ORG','还款责任金额（原币）','R','Y','if (!isEmpty(D_ARLP_TYPE) && D_ARLP_TYPE==''2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D01_21X_D_02','20210415','TESTCORP','72','002','MBT_PM_210_D','I2100D01_21X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D01_212_D_02','20210415','TESTCORP','72','002','MBT_PM_212_D','I2100D01_21X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I2100D01_21X_D_03','20210415','TESTCORP','72','002','若“还款责任人类型”为“2-保证人”，则“币种”不能为空值。','若“还款责任人类型”为“2-保证人”，则“币种”不能为空值。','非空校验','人民银行','C_CY','币种','R','Y','if (!isEmpty(D_ARLP_TYPE) && D_ARLP_TYPE==''2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D01_21X_D_03','20210415','TESTCORP','72','002','MBT_PM_210_D','I2100D01_21X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D01_212_D_03','20210415','TESTCORP','72','002','MBT_PM_212_D','I2100D01_21X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I2100D04_21X_D_01','20210415','TESTCORP','72','002','当“还款责任人类型”为“2-保证人”时，“联保标志”不应为空。','当“还款责任人类型”为“2-保证人”时，“联保标志”不应为空。','非空校验','人民银行','D_WARTY_SIGN','联保标志','R','Y','if (!isEmpty(D_ARLP_TYPE) && D_ARLP_TYPE==''2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D04_21X_D_01','20210415','TESTCORP','72','002','MBT_PM_210_D','I2100D04_21X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D04_212_D_01','20210415','TESTCORP','72','002','MBT_PM_212_D','I2100D04_21X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I2100D04_21X_D_02','20210415','TESTCORP','72','002','当“还款责任人类型”为“2-保证人”时，“保证合同编号”不应为空。','当“还款责任人类型”为“2-保证人”时，“保证合同编号”不应为空。','非空校验','人民银行','D_MAX_GUAR_MCC','保证合同编号','R','Y','if (!isEmpty(D_ARLP_TYPE) && D_ARLP_TYPE==''2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D04_21X_D_02','20210415','TESTCORP','72','002','MBT_PM_210_D','I2100D04_21X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D04_212_D_02','20210415','TESTCORP','72','002','MBT_PM_212_D','I2100D04_21X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I2100H14_21X_H_01','20210415','TESTCORP','72','002','若“账户状态”为“3-关闭”/“4-销户”，“账户关闭日期”不能为空值。','若“账户状态”为“3-关闭”/“4-销户”，“账户关闭日期”不能为空值。','非空校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','if (!isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS in [''3'',''4'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H14_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H14_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H14_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H14_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I2100J04_21X_J_01','20210415','TESTCORP','72','002','若“账户状态”为“2-结束”，则“账户关闭日期”不能为空值。','若“账户状态”为“2-结束”，则“账户关闭日期”不能为空值。','非空校验','人民银行','J_CLOSE_DATE','账户关闭日期','R','Y','if (!isEmpty(J_ACCT_STATUS) && !isEmpty(B_ACCT_TYPE) && J_ACCT_STATUS ==''2''  &&  B_ACCT_TYPE==''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J04_21X_J_01','20210415','TESTCORP','72','002','MBT_PM_210_J','I2100J04_21X_J_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J04_212_J_01','20210415','TESTCORP','72','002','MBT_PM_212_J','I2100J04_21X_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_B_00','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000101_510_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_B_01','20210415','TESTCORP','72','002','抵（质）押合同标识码不能为空','抵（质）押合同标识码不能为空','非空校验','人民银行','B_CC_CODE','抵（质）押合同标识码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_B_01','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000101_510_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_B_02','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_B_02','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000101_510_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_B_03','20210415','TESTCORP','72','002','报告时点说明代码不能为空','报告时点说明代码不能为空','非空校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_B_03','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000101_510_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_B_04','20210415','TESTCORP','72','002','债务人身份类别不能为空','债务人身份类别不能为空','非空校验','人民银行','B_INFO_ID_TYPE','债务人身份类别','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_B_04','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000101_510_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_B_05','20210415','TESTCORP','72','002','债务人名称不能为空','债务人名称不能为空','非空校验','人民银行','B_NAME','债务人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_B_05','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000101_510_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_B_06','20210415','TESTCORP','72','002','债务人身份标识类型不能为空','债务人身份标识类型不能为空','非空校验','人民银行','B_CERT_TYPE','债务人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_B_06','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000101_510_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_B_07','20210415','TESTCORP','72','002','债务人身份标识号码不能为空','债务人身份标识号码不能为空','非空校验','人民银行','B_CERT_NUM','债务人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_B_07','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000101_510_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_B_08','20210415','TESTCORP','72','002','业务管理机构代码不能为空','业务管理机构代码不能为空','非空校验','人民银行','B_MNGMT_ORG_CODE','业务管理机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_B_08','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000101_510_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_C_01','20210415','TESTCORP','72','002','合同类型不能为空','合同类型不能为空','非空校验','人民银行','C_GUAR_TYPE','合同类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_C_01','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000101_510_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_C_02','20210415','TESTCORP','72','002','担保金额不能为空','担保金额不能为空','非空校验','人民银行','C_CC_AMT','担保金额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_C_02','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000101_510_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_C_03','20210415','TESTCORP','72','002','币种不能为空','币种不能为空','非空校验','人民银行','C_CY','币种','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_C_03','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000101_510_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_C_04','20210415','TESTCORP','72','002','抵（质）押合同生效日期不能为空','抵（质）押合同生效日期不能为空','非空校验','人民银行','C_CC_VAL_DATE','抵（质）押合同生效日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_C_04','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000101_510_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_C_05','20210415','TESTCORP','72','002','抵（质）押合同到期日期不能为空','抵（质）押合同到期日期不能为空','非空校验','人民银行','C_CC_EXP_DATE','抵（质）押合同到期日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_C_05','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000101_510_C_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_C_06','20210415','TESTCORP','72','002','最高额担保标志不能为空','最高额担保标志不能为空','非空校验','人民银行','C_MAX_GUAR','最高额担保标志','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_C_06','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000101_510_C_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_C_07','20210415','TESTCORP','72','002','抵（质）押合同状态不能为空','抵（质）押合同状态不能为空','非空校验','人民银行','C_CC_STATUS','抵（质）押合同状态','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_C_07','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000101_510_C_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_D_01','20210415','TESTCORP','72','002','身份类别不能为空','身份类别不能为空','非空校验','人民银行','D_INFO_ID_TYPE','身份类别','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_D_01','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000101_510_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_D_02','20210415','TESTCORP','72','002','其他债务人名称不能为空','其他债务人名称不能为空','非空校验','人民银行','D_GUAR_NAME','其他债务人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_D_02','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000101_510_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_D_03','20210415','TESTCORP','72','002','其他债务人身份标识类型不能为空','其他债务人身份标识类型不能为空','非空校验','人民银行','D_GUAR_CERT_TYPE','其他债务人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_D_03','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000101_510_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_D_04','20210415','TESTCORP','72','002','其他债务人身份标识号码不能为空','其他债务人身份标识号码不能为空','非空校验','人民银行','D_GUAR_CERT_NUM','其他债务人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_D_04','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000101_510_D_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_E_01','20210415','TESTCORP','72','002','抵押物种类不能为空','抵押物种类不能为空','非空校验','人民银行','E_PLE_TYPE','抵押物种类','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_E_01','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000101_510_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_E_02','20210415','TESTCORP','72','002','抵押人身份类别不能为空','抵押人身份类别不能为空','非空校验','人民银行','E_PLEDGOR_TYPE','抵押人身份类别','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_E_02','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000101_510_E_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_E_03','20210415','TESTCORP','72','002','抵押人名称不能为空','抵押人名称不能为空','非空校验','人民银行','E_PLEDGOR_NAME','抵押人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_E_03','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000101_510_E_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_E_04','20210415','TESTCORP','72','002','抵押人身份标识类型不能为空','抵押人身份标识类型不能为空','非空校验','人民银行','E_PLEOR_CERT_TYPE','抵押人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_E_04','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000101_510_E_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_E_05','20210415','TESTCORP','72','002','抵押人身份标识号码不能为空','抵押人身份标识号码不能为空','非空校验','人民银行','E_PLEOR_CERT_NUM','抵押人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_E_05','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000101_510_E_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_F_01','20210415','TESTCORP','72','002','质物种类不能为空','质物种类不能为空','非空校验','人民银行','F_IMP_TYPE','质物种类','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_F_01','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000101_510_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_F_02','20210415','TESTCORP','72','002','质物价值不能为空','质物价值不能为空','非空校验','人民银行','F_IMP_VAL','质物价值','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_F_02','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000101_510_F_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_F_03','20210415','TESTCORP','72','002','币种不能为空','币种不能为空','非空校验','人民银行','F_IMP_CY','币种','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_F_03','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000101_510_F_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_F_04','20210415','TESTCORP','72','002','出质人身份类别不能为空','出质人身份类别不能为空','非空校验','人民银行','F_IPPC','出质人身份类别','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_F_04','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000101_510_F_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_F_05','20210415','TESTCORP','72','002','出质人名称不能为空','出质人名称不能为空','非空校验','人民银行','F_PAWN_NAME','出质人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_F_05','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000101_510_F_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_F_06','20210415','TESTCORP','72','002','出质人身份标识类型不能为空','出质人身份标识类型不能为空','非空校验','人民银行','F_PAWN_CERT_TYPE','出质人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_F_06','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000101_510_F_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_510_F_07','20210415','TESTCORP','72','002','出质人身份标识号码不能为空','出质人身份标识号码不能为空','非空校验','人民银行','F_PAWN_CERT_NUM','出质人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_510_F_07','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000101_510_F_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_215_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_215_B_00','20210415','TESTCORP','72','002','MBT_PM_215_B','I0000101_215_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_215_B_01','20210415','TESTCORP','72','002','账户标识码不能为空','账户标识码不能为空','非空校验','人民银行','ACCT_CODE','账户标识码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_215_B_01','20210415','TESTCORP','72','002','MBT_PM_215_B','I0000101_215_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_215_B_02','20210415','TESTCORP','72','002','事件类型不能为空','事件类型不能为空','非空校验','人民银行','OPETN_TYPE','事件类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_215_B_02','20210415','TESTCORP','72','002','MBT_PM_215_B','I0000101_215_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_215_B_03','20210415','TESTCORP','72','002','发生月份不能为空','发生月份不能为空','非空校验','人民银行','MONTH','发生月份','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_215_B_03','20210415','TESTCORP','72','002','MBT_PM_215_B','I0000101_215_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_215_B_04','20210415','TESTCORP','72','002','生效标志不能为空','生效标志不能为空','非空校验','人民银行','FLAG','生效标志','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_215_B_04','20210415','TESTCORP','72','002','MBT_PM_215_B','I0000101_215_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_215_B_05','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_215_B_05','20210415','TESTCORP','72','002','MBT_PM_215_B','I0000101_215_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_220_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_220_B_00','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000101_220_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_220_B_01','20210415','TESTCORP','72','002','授信协议标识码不能为空','授信协议标识码不能为空','非空校验','人民银行','B_CONTRACT_CODE','授信协议标识码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_220_B_01','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000101_220_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_220_B_02','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_220_B_02','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000101_220_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_220_B_03','20210415','TESTCORP','72','002','报告时点说明代码不能为空','报告时点说明代码不能为空','非空校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_220_B_03','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000101_220_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_B_04','20210415','TESTCORP','72','002','受信人姓名不能为空','受信人姓名不能为空','非空校验','人民银行','B_NAME','受信人姓名','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_B_04','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000101_22X_B_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_B_04','20210415','TESTCORP','72','002','MBT_PM_222_B','I0000101_22X_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_B_05','20210415','TESTCORP','72','002','受信人证件类型不能为空','受信人证件类型不能为空','非空校验','人民银行','B_ID_TYPE','受信人证件类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_B_05','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000101_22X_B_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_B_05','20210415','TESTCORP','72','002','MBT_PM_222_B','I0000101_22X_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_B_06','20210415','TESTCORP','72','002','受信人证件号码不能为空','受信人证件号码不能为空','非空校验','人民银行','B_ID_NUM','受信人证件号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_B_06','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000101_22X_B_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_B_06','20210415','TESTCORP','72','002','MBT_PM_222_B','I0000101_22X_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_B_07','20210415','TESTCORP','72','002','业务管理机构代码不能为空','业务管理机构代码不能为空','非空校验','人民银行','B_MNGMT_ORG_CODE','业务管理机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_B_07','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000101_22X_B_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_B_07','20210415','TESTCORP','72','002','MBT_PM_222_B','I0000101_22X_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_C_01','20210415','TESTCORP','72','002','共同受信人身份类别不能为空','共同受信人身份类别不能为空','非空校验','人民银行','C_BRER_TYPE','共同受信人身份类别','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_C_01','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000101_22X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_C_01','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000101_22X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_C_02','20210415','TESTCORP','72','002','共同受信人名称不能为空','共同受信人名称不能为空','非空校验','人民银行','C_CERT_REL_NAME','共同受信人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_C_02','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000101_22X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_C_02','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000101_22X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_C_03','20210415','TESTCORP','72','002','共同受信人身份标识类型不能为空','共同受信人身份标识类型不能为空','非空校验','人民银行','C_CERT_REL_ID_TYPE','共同受信人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_C_03','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000101_22X_C_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_C_03','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000101_22X_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_C_04','20210415','TESTCORP','72','002','共同受信人身份标识号码不能为空','共同受信人身份标识号码不能为空','非空校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_C_04','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000101_22X_C_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_C_04','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000101_22X_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_D_01','20210415','TESTCORP','72','002','授信额度类型不能为空','授信额度类型不能为空','非空校验','人民银行','D_CREDIT_LIM_TYPE','授信额度类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_D_01','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000101_22X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_D_01','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000101_22X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_D_02','20210415','TESTCORP','72','002','额度循环标志不能为空','额度循环标志不能为空','非空校验','人民银行','D_LIM_LOOP_FLG','额度循环标志','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_D_02','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000101_22X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_D_02','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000101_22X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_D_03','20210415','TESTCORP','72','002','授信额度（原币）不能为空','授信额度（原币）不能为空','非空校验','人民银行','D_CREDIT_LIM_ORG','授信额度（原币）','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_D_03','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000101_22X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_D_03','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000101_22X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_D_04','20210415','TESTCORP','72','002','授信额度不能为空','授信额度不能为空','非空校验','人民银行','D_CREDIT_LIM','授信额度','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_D_04','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000101_22X_D_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_D_04','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000101_22X_D_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_D_05','20210415','TESTCORP','72','002','币种不能为空','币种不能为空','非空校验','人民银行','D_CY','币种','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_D_05','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000101_22X_D_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_D_05','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000101_22X_D_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_D_06','20210415','TESTCORP','72','002','额度生效日期不能为空','额度生效日期不能为空','非空校验','人民银行','D_CON_EFF_DATE','额度生效日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_D_06','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000101_22X_D_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_D_06','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000101_22X_D_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_D_07','20210415','TESTCORP','72','002','额度到期日期不能为空','额度到期日期不能为空','非空校验','人民银行','D_CON_EXP_DATE','额度到期日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_D_07','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000101_22X_D_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_D_07','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000101_22X_D_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_22X_D_08','20210415','TESTCORP','72','002','额度状态不能为空','额度状态不能为空','非空校验','人民银行','D_CON_STATUS','额度状态','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_22X_D_08','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000101_22X_D_08','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_222_D_08','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000101_22X_D_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_120_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_120_B_00','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000101_120_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_120_B_01','20210415','TESTCORP','72','002','A姓名不能为空','A姓名不能为空','非空校验','人民银行','NAME','A姓名','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_120_B_01','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000101_120_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_120_B_02','20210415','TESTCORP','72','002','A证件类型不能为空','A证件类型不能为空','非空校验','人民银行','ID_TYPE','A证件类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_120_B_02','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000101_120_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_120_B_03','20210415','TESTCORP','72','002','A证件号码不能为空','A证件号码不能为空','非空校验','人民银行','ID_NUM','A证件号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_120_B_03','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000101_120_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_120_B_04','20210415','TESTCORP','72','002','B姓名不能为空','B姓名不能为空','非空校验','人民银行','FAM_MEM_NAME','B姓名','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_120_B_04','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000101_120_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_120_B_05','20210415','TESTCORP','72','002','B证件类型不能为空','B证件类型不能为空','非空校验','人民银行','FAM_MEM_CET_TYPE','B证件类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_120_B_05','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000101_120_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_120_B_06','20210415','TESTCORP','72','002','B证件号码不能为空','B证件号码不能为空','非空校验','人民银行','FAM_MEM_CERT_NUM','B证件号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_120_B_06','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000101_120_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_120_B_07','20210415','TESTCORP','72','002','家族关系不能为空','家族关系不能为空','非空校验','人民银行','FAM_REL','家族关系','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_120_B_07','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000101_120_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_120_B_08','20210415','TESTCORP','72','002','家族关系有效标志不能为空','家族关系有效标志不能为空','非空校验','人民银行','FAM_RELA_ASS_FLAG','家族关系有效标志','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_120_B_08','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000101_120_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_120_B_09','20210415','TESTCORP','72','002','信息来源编码不能为空','信息来源编码不能为空','非空校验','人民银行','INF_SURC_CODE','信息来源编码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_120_B_09','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000101_120_B_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_120_B_10','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_120_B_10','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000101_120_B_10','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_130_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_130_B_00','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000101_130_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_130_B_01','20210415','TESTCORP','72','002','姓名不能为空','姓名不能为空','非空校验','人民银行','NAME','姓名','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_130_B_01','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000101_130_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_130_B_02','20210415','TESTCORP','72','002','证件类型不能为空','证件类型不能为空','非空校验','人民银行','ID_TYPE','证件类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_130_B_02','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000101_130_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_130_B_03','20210415','TESTCORP','72','002','证件号码不能为空','证件号码不能为空','非空校验','人民银行','ID_NUM','证件号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_130_B_03','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000101_130_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_130_B_04','20210415','TESTCORP','72','002','信息来源编码不能为空','信息来源编码不能为空','非空校验','人民银行','INF_SURC_CODE','信息来源编码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_130_B_04','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000101_130_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_130_B_05','20210415','TESTCORP','72','002','证件有效期起始日期不能为空','证件有效期起始日期不能为空','非空校验','人民银行','ID_EFCT_DATE','证件有效期起始日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_130_B_05','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000101_130_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_130_B_06','20210415','TESTCORP','72','002','证件有效期终止日期不能为空','证件有效期终止日期不能为空','非空校验','人民银行','ID_DUE_DATE','证件有效期终止日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_130_B_06','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000101_130_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_130_B_07','20210415','TESTCORP','72','002','客户资料维护机构代码不能为空','客户资料维护机构代码不能为空','非空校验','人民银行','CIMOC','客户资料维护机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_130_B_07','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000101_130_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_130_B_08','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_130_B_08','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000101_130_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_B_00','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000101_110_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_B_01','20210415','TESTCORP','72','002','姓名不能为空','姓名不能为空','非空校验','人民银行','B_NAME','姓名','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_B_01','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000101_110_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_B_02','20210415','TESTCORP','72','002','证件类型不能为空','证件类型不能为空','非空校验','人民银行','B_ID_TYPE','证件类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_B_02','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000101_110_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_B_03','20210415','TESTCORP','72','002','证件号码不能为空','证件号码不能为空','非空校验','人民银行','B_ID_NUM','证件号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_B_03','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000101_110_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_B_04','20210415','TESTCORP','72','002','信息来源编码不能为空','信息来源编码不能为空','非空校验','人民银行','B_INF_SURC_CODE','信息来源编码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_B_04','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000101_110_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_B_05','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_B_05','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000101_110_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_B_06','20210415','TESTCORP','72','002','报告时点说明代码不能为空','报告时点说明代码不能为空','非空校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_B_06','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000101_110_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_B_07','20210415','TESTCORP','72','002','客户资料维护机构代码不能为空','客户资料维护机构代码不能为空','非空校验','人民银行','B_CIMOC','客户资料维护机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_B_07','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000101_110_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_B_08','20210415','TESTCORP','72','002','客户资料类型不能为空','客户资料类型不能为空','非空校验','人民银行','B_CUSTOMER_TYPE','客户资料类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_B_08','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000101_110_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_C_02','20210415','TESTCORP','72','002','姓名不能为空','姓名不能为空','非空校验','人民银行','ALIAS','姓名','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_C_02','20210415','TESTCORP','72','002','MBT_PM_110_C','I0000101_110_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_C_03','20210415','TESTCORP','72','002','证件类型（其他）不能为空','证件类型（其他）不能为空','非空校验','人民银行','OTH_ID_TYPE','证件类型（其他）','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_C_03','20210415','TESTCORP','72','002','MBT_PM_110_C','I0000101_110_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_C_04','20210415','TESTCORP','72','002','证件号码（其他）不能为空','证件号码（其他）不能为空','非空校验','人民银行','OTH_ID_NUM','证件号码（其他）','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_C_04','20210415','TESTCORP','72','002','MBT_PM_110_C','I0000101_110_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_C_05','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','ID_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_C_05','20210415','TESTCORP','72','002','MBT_PM_110_C','I0000101_110_C_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_D_01','20210415','TESTCORP','72','002','性别不能为空','性别不能为空','非空校验','人民银行','D_SEX','性别','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_D_01','20210415','TESTCORP','72','002','MBT_PM_110_D','I0000101_110_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_D_02','20210415','TESTCORP','72','002','国籍不能为空','国籍不能为空','非空校验','人民银行','D_NATION','国籍','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_D_02','20210415','TESTCORP','72','002','MBT_PM_110_D','I0000101_110_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_D_03','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','D_FCS_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_D_03','20210415','TESTCORP','72','002','MBT_PM_110_D','I0000101_110_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_E_01','20210415','TESTCORP','72','002','婚姻状况不能为空','婚姻状况不能为空','非空校验','人民银行','E_MARI_STATUS','婚姻状况','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_E_01','20210415','TESTCORP','72','002','MBT_PM_110_E','I0000101_110_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_E_02','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','E_SPS_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_E_02','20210415','TESTCORP','72','002','MBT_PM_110_E','I0000101_110_E_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_F_01','20210415','TESTCORP','72','002','学历不能为空','学历不能为空','非空校验','人民银行','F_EDU_LEVEL','学历','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_F_01','20210415','TESTCORP','72','002','MBT_PM_110_F','I0000101_110_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_F_02','20210415','TESTCORP','72','002','学位不能为空','学位不能为空','非空校验','人民银行','F_ACA_DEGREE','学位','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_F_02','20210415','TESTCORP','72','002','MBT_PM_110_F','I0000101_110_F_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_F_03','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','F_EDU_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_F_03','20210415','TESTCORP','72','002','MBT_PM_110_F','I0000101_110_F_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_G_01','20210415','TESTCORP','72','002','就业状况不能为空','就业状况不能为空','非空校验','人民银行','G_EMP_STATUS','就业状况','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_G_01','20210415','TESTCORP','72','002','MBT_PM_110_G','I0000101_110_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_G_02','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','G_OCTPN_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_G_02','20210415','TESTCORP','72','002','MBT_PM_110_G','I0000101_110_G_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_H_01','20210415','TESTCORP','72','002','居住状况不能为空','居住状况不能为空','非空校验','人民银行','H_RESI_STATUS','居住状况','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_H_01','20210415','TESTCORP','72','002','MBT_PM_110_H','I0000101_110_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_H_02','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','H_RESI_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_H_02','20210415','TESTCORP','72','002','MBT_PM_110_H','I0000101_110_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_I_01','20210415','TESTCORP','72','002','通讯地址不能为空','通讯地址不能为空','非空校验','人民银行','I_MAIL_ADDR','通讯地址','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_I_01','20210415','TESTCORP','72','002','MBT_PM_110_I','I0000101_110_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_I_02','20210415','TESTCORP','72','002','通讯地邮编不能为空','通讯地邮编不能为空','非空校验','人民银行','I_MAIL_PC','通讯地邮编','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_I_02','20210415','TESTCORP','72','002','MBT_PM_110_I','I0000101_110_I_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_I_03','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','I_MLG_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_I_03','20210415','TESTCORP','72','002','MBT_PM_110_I','I0000101_110_I_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_J_01','20210415','TESTCORP','72','002','自报年收入不能为空','自报年收入不能为空','非空校验','人民银行','J_ANNL_INC','自报年收入','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_J_01','20210415','TESTCORP','72','002','MBT_PM_110_J','I0000101_110_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_J_02','20210415','TESTCORP','72','002','纳税年收入不能为空','纳税年收入不能为空','非空校验','人民银行','J_TAX_INCOME','纳税年收入','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_J_02','20210415','TESTCORP','72','002','MBT_PM_110_J','I0000101_110_J_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_110_J_03','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','J_INC_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_110_J_03','20210415','TESTCORP','72','002','MBT_PM_110_J','I0000101_110_J_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('S1100101_110_G_01','20210415','TESTCORP','72','002','当“就业状况”为“11-国家公务员”、“13-专业技术人员”、“17-职员”、“21-企业管理人员”、“24-工人”或“91-在职”时，“单位名称”必须出现。','当“就业状况”为“11-国家公务员”、“13-专业技术人员”、“17-职员”、“21-企业管理人员”、“24-工人”或“91-在职”时，“单位名称”必须出现。','非空校验','人民银行','G_CPN_NAME','单位名称','R','Y','if (!isEmpty(G_EMP_STATUS) && G_EMP_STATUS in [''11'',''13'',''17'',''21'',''24'',''91'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('S1100101_110_G_01','20210415','TESTCORP','72','002','MBT_PM_110_G','S1100101_110_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('S1100101_110_G_02','20210415','TESTCORP','72','002','当“就业状况”为“11-国家公务员”、“13-专业技术人员”、“17-职员”、“21-企业管理人员”、“24-工人”或“91-在职”时，“单位性质”必须出现。','当“就业状况”为“11-国家公务员”、“13-专业技术人员”、“17-职员”、“21-企业管理人员”、“24-工人”或“91-在职”时，“单位性质”必须出现。','非空校验','人民银行','G_CPN_TYPE','单位性质','R','Y','if (!isEmpty(G_EMP_STATUS) && G_EMP_STATUS in [''11'',''13'',''17'',''21'',''24'',''91'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('S1100101_110_G_02','20210415','TESTCORP','72','002','MBT_PM_110_G','S1100101_110_G_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('S1100101_110_G_03','20210415','TESTCORP','72','002','当“就业状况”为“11-国家公务员”、“13-专业技术人员”、“17-职员”、“21-企业管理人员”、“24-工人”或“91-在职”时，“单位所属行业”必须出现。','当“就业状况”为“11-国家公务员”、“13-专业技术人员”、“17-职员”、“21-企业管理人员”、“24-工人”或“91-在职”时，“单位所属行业”必须出现。','非空校验','人民银行','G_INDUSTRY','单位所属行业','R','Y','if (!isEmpty(G_EMP_STATUS) && G_EMP_STATUS in [''11'',''13'',''17'',''21'',''24'',''91'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('S1100101_110_G_03','20210415','TESTCORP','72','002','MBT_PM_110_G','S1100101_110_G_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('S1100101_110_G_04','20210415','TESTCORP','72','002','当“就业状况”为“11-国家公务员”、“13-专业技术人员”、“17-职员”、“21-企业管理人员”、“24-工人”或“91-在职”时，“职业”必须出现。','当“就业状况”为“11-国家公务员”、“13-专业技术人员”、“17-职员”、“21-企业管理人员”、“24-工人”或“91-在职”时，“职业”必须出现。','非空校验','人民银行','G_OCCUPATION','职业','R','Y','if (!isEmpty(G_EMP_STATUS) && G_EMP_STATUS in [''11'',''13'',''17'',''21'',''24'',''91'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('S1100101_110_G_04','20210415','TESTCORP','72','002','MBT_PM_110_G','S1100101_110_G_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('S1100101_110_G_05','20210415','TESTCORP','72','002','当“就业状况”为“11-国家公务员”、“13-专业技术人员”、“17-职员”、“21-企业管理人员”、“24-工人”或“91-在职”时，“职务”必须出现。','当“就业状况”为“11-国家公务员”、“13-专业技术人员”、“17-职员”、“21-企业管理人员”、“24-工人”或“91-在职”时，“职务”必须出现。','非空校验','人民银行','G_TITLE','职务','R','Y','if (!isEmpty(G_EMP_STATUS) && G_EMP_STATUS in [''11'',''13'',''17'',''21'',''24'',''91'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('S1100101_110_G_05','20210415','TESTCORP','72','002','MBT_PM_110_G','S1100101_110_G_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('S1100101_110_G_06','20210415','TESTCORP','72','002','当“就业状况”为“11-国家公务员”、“13-专业技术人员”、“17-职员”、“21-企业管理人员”、“24-工人”或“91-在职”时，“职称“必须出现。','当“就业状况”为“11-国家公务员”、“13-专业技术人员”、“17-职员”、“21-企业管理人员”、“24-工人”或“91-在职”时，“职称“必须出现。','非空校验','人民银行','G_TECH_TITLE','职称','R','Y','if (!isEmpty(G_EMP_STATUS) && G_EMP_STATUS in [''11'',''13'',''17'',''21'',''24'',''91'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('S1100101_110_G_06','20210415','TESTCORP','72','002','MBT_PM_110_G','S1100101_110_G_06','auto_generator');

insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I1100E01_110_E_01','20210415','TESTCORP','72','002','“配偶证件号码”不为空时，“配偶证件类型”应不为空。','“配偶证件号码”不为空时，“配偶证件类型”应不为空。','非空校验','人民银行','E_SPO_ID_TYPE','配偶证件类型','R','Y','if (!isEmpty(E_SPO_ID_NUM) && !isEmpty(E_SPO_ID_NUM)) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I1100E01_110_E_01','20210415','TESTCORP','72','002','MBT_PM_110_E','I1100E01_110_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I1100E01_110_E_02','20210415','TESTCORP','72','002','“配偶证件类型”不为空时，“配偶证件号码”不为空。','“配偶证件类型”不为空时，“配偶证件号码”不为空。','非空校验','人民银行','E_SPO_ID_NUM','配偶证件号码','R','Y','if (!isEmpty(E_SPO_ID_TYPE) && !isEmpty(E_SPO_ID_TYPE)) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I1100E01_110_E_02','20210415','TESTCORP','72','002','MBT_PM_110_E','I1100E01_110_E_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_B_00','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000101_310_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_B_01','20210415','TESTCORP','72','002','企业名称不能为空','企业名称不能为空','非空校验','人民银行','B_ENT_NAME','企业名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_B_01','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000101_310_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_B_02','20210415','TESTCORP','72','002','企业身份标识类型不能为空','企业身份标识类型不能为空','非空校验','人民银行','B_ENT_CERT','企业身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_B_02','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000101_310_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_B_03','20210415','TESTCORP','72','002','企业身份标识号码不能为空','企业身份标识号码不能为空','非空校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_B_03','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000101_310_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_B_04','20210415','TESTCORP','72','002','信息来源编码不能为空','信息来源编码不能为空','非空校验','人民银行','B_INF_SURC_CODE','信息来源编码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_B_04','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000101_310_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_B_05','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_B_05','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000101_310_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_B_06','20210415','TESTCORP','72','002','报告时点说明代码不能为空','报告时点说明代码不能为空','非空校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_B_06','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000101_310_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_B_07','20210415','TESTCORP','72','002','客户资料维护机构代码不能为空','客户资料维护机构代码不能为空','非空校验','人民银行','B_CIMOC','客户资料维护机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_B_07','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000101_310_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_B_08','20210415','TESTCORP','72','002','客户资料类型不能为空','客户资料类型不能为空','非空校验','人民银行','B_CUSTOMER_TYPE','客户资料类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_B_08','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000101_310_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_B_09','20210415','TESTCORP','72','002','存续状态不能为空','存续状态不能为空','非空校验','人民银行','B_ETP_STS','存续状态','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_B_09','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000101_310_B_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_B_10','20210415','TESTCORP','72','002','组织机构类型不能为空','组织机构类型不能为空','非空校验','人民银行','B_ORG_TYPE','组织机构类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_B_10','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000101_310_B_10','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_C_01','20210415','TESTCORP','72','002','企业身份标识类型（其他）不能为空','企业身份标识类型（其他）不能为空','非空校验','人民银行','OTH_ENT_CERT_TYPE','企业身份标识类型（其他）','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_C_01','20210415','TESTCORP','72','002','MBT_PM_310_C','I0000101_310_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_C_02','20210415','TESTCORP','72','002','企业身份标识号码（其他）不能为空','企业身份标识号码（其他）不能为空','非空校验','人民银行','OTH_ENT_CERT_NUM','企业身份标识号码（其他）','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_C_02','20210415','TESTCORP','72','002','MBT_PM_310_C','I0000101_310_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_C_03','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','ID_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_C_03','20210415','TESTCORP','72','002','MBT_PM_310_C','I0000101_310_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_D_01','20210415','TESTCORP','72','002','国别代码不能为空','国别代码不能为空','非空校验','人民银行','D_NATIONALITY','国别代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_D_01','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000101_310_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_D_02','20210415','TESTCORP','72','002','营业许可证到期日不能为空','营业许可证到期日不能为空','非空校验','人民银行','D_BIZ_END_DATE','营业许可证到期日','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_D_02','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000101_310_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_D_03','20210415','TESTCORP','72','002','行业分类代码不能为空','行业分类代码不能为空','非空校验','人民银行','D_ECO_INDUS_CATE','行业分类代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_D_03','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000101_310_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_D_04','20210415','TESTCORP','72','002','经济类型代码不能为空','经济类型代码不能为空','非空校验','人民银行','D_ECO_TYPE','经济类型代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_D_04','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000101_310_D_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_D_05','20210415','TESTCORP','72','002','企业规模不能为空','企业规模不能为空','非空校验','人民银行','D_ENT_SCALE','企业规模','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_D_05','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000101_310_D_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_D_06','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','D_FCS_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_D_06','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000101_310_D_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_E_01','20210415','TESTCORP','72','002','主要组成人员姓名不能为空','主要组成人员姓名不能为空','非空校验','人民银行','MMB_ALIAS','主要组成人员姓名','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_E_01','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000101_310_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_E_02','20210415','TESTCORP','72','002','主要组成人员证件类型不能为空','主要组成人员证件类型不能为空','非空校验','人民银行','MMB_ID_TYPE','主要组成人员证件类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_E_02','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000101_310_E_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_E_03','20210415','TESTCORP','72','002','主要组成人员证件号码不能为空','主要组成人员证件号码不能为空','非空校验','人民银行','MMB_ID_NUM','主要组成人员证件号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_E_03','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000101_310_E_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_E_04','20210415','TESTCORP','72','002','主要组成人员职位不能为空','主要组成人员职位不能为空','非空校验','人民银行','MMB_PSTN','主要组成人员职位','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_E_04','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000101_310_E_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_E_05','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','MN_MMB_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_E_05','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000101_310_E_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_F_01','20210415','TESTCORP','72','002','注册资本币种不能为空','注册资本币种不能为空','非空校验','人民银行','F_REG_CAP_CURRENCY','注册资本币种','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_F_01','20210415','TESTCORP','72','002','MBT_PM_310_F','I0000101_310_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_F_02','20210415','TESTCORP','72','002','注册资本不能为空','注册资本不能为空','非空校验','人民银行','F_REG_CAP','注册资本','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_F_02','20210415','TESTCORP','72','002','MBT_PM_310_F','I0000101_310_F_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_F_03','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','F_MN_SHA_HOD_INFO_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_F_03','20210415','TESTCORP','72','002','MBT_PM_310_F','I0000101_310_F_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_F_04','20210415','TESTCORP','72','002','出资人类型不能为空','出资人类型不能为空','非空校验','人民银行','SHAR_HOD_TYPE','出资人类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_F_04','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000101_310_F_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_F_05','20210415','TESTCORP','72','002','出资人身份类别不能为空','出资人身份类别不能为空','非空校验','人民银行','SHAR_HOD_CERT_TYPE','出资人身份类别','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_F_05','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000101_310_F_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_F_06','20210415','TESTCORP','72','002','出资人名称不能为空','出资人名称不能为空','非空校验','人民银行','SHAR_HOD_NAME','出资人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_F_06','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000101_310_F_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_F_07','20210415','TESTCORP','72','002','出资人身份标识类型不能为空','出资人身份标识类型不能为空','非空校验','人民银行','SHAR_HOD_ID_TYPE','出资人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_F_07','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000101_310_F_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_F_08','20210415','TESTCORP','72','002','出资人身份标识号码不能为空','出资人身份标识号码不能为空','非空校验','人民银行','SHAR_HOD_ID_NUM','出资人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_F_08','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000101_310_F_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_F_09','20210415','TESTCORP','72','002','出资比例不能为空','出资比例不能为空','非空校验','人民银行','INV_RATIO','出资比例','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_F_09','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000101_310_F_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_G_01','20210415','TESTCORP','72','002','实际控制人身份类别不能为空','实际控制人身份类别不能为空','非空校验','人民银行','ACTU_COTRL_CERT_TYPE','实际控制人身份类别','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_G_01','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000101_310_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_G_02','20210415','TESTCORP','72','002','实际控制人名称不能为空','实际控制人名称不能为空','非空校验','人民银行','ACTU_COTRL_NAME','实际控制人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_G_02','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000101_310_G_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_G_03','20210415','TESTCORP','72','002','实际控制人身份标识类型不能为空','实际控制人身份标识类型不能为空','非空校验','人民银行','ACTU_COTRL_ID_TYPE','实际控制人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_G_03','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000101_310_G_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_G_04','20210415','TESTCORP','72','002','实际控制人身份标识号码不能为空','实际控制人身份标识号码不能为空','非空校验','人民银行','ACTU_COTRL_ID_NUM','实际控制人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_G_04','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000101_310_G_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_G_05','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','ACTU_COTRL_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_G_05','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000101_310_G_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_H_01','20210415','TESTCORP','72','002','上级机构类型不能为空','上级机构类型不能为空','非空校验','人民银行','H_SUP_ORG_TYPE','上级机构类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_H_01','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000101_310_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_H_02','20210415','TESTCORP','72','002','上级机构名称不能为空','上级机构名称不能为空','非空校验','人民银行','H_SUP_ORG_NAME','上级机构名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_H_02','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000101_310_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_H_03','20210415','TESTCORP','72','002','上级机构身份标识类型不能为空','上级机构身份标识类型不能为空','非空校验','人民银行','H_SUP_ORG_CERT_TYPE','上级机构身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_H_03','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000101_310_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_H_04','20210415','TESTCORP','72','002','上级机构身份标识号码不能为空','上级机构身份标识号码不能为空','非空校验','人民银行','H_SUP_ORG_CERT_NUM','上级机构身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_H_04','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000101_310_H_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_H_05','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','H_SUP_ORG_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_H_05','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000101_310_H_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_310_I_01','20210415','TESTCORP','72','002','信息更新日期不能为空','信息更新日期不能为空','非空校验','人民银行','I_COTA_INFO_UP_DATE','信息更新日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_310_I_01','20210415','TESTCORP','72','002','MBT_PM_310_I','I0000101_310_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_350_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_350_B_00','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000101_350_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_350_B_01','20210415','TESTCORP','72','002','A企业名称不能为空','A企业名称不能为空','非空校验','人民银行','B_ENT_NAME','A企业名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_350_B_01','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000101_350_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_350_B_02','20210415','TESTCORP','72','002','A企业身份标识类型不能为空','A企业身份标识类型不能为空','非空校验','人民银行','B_ENT_CERT_TYPE','A企业身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_350_B_02','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000101_350_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_350_B_03','20210415','TESTCORP','72','002','A企业身份标识号码不能为空','A企业身份标识号码不能为空','非空校验','人民银行','B_ENT_CERT_NUM','A企业身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_350_B_03','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000101_350_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_350_B_04','20210415','TESTCORP','72','002','B企业名称不能为空','B企业名称不能为空','非空校验','人民银行','B_ASSO_ENT_NAME','B企业名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_350_B_04','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000101_350_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_350_B_05','20210415','TESTCORP','72','002','B企业身份标识类型不能为空','B企业身份标识类型不能为空','非空校验','人民银行','B_ASSO_ENT_CERT_TYPE','B企业身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_350_B_05','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000101_350_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_350_B_06','20210415','TESTCORP','72','002','B企业身份标识号码不能为空','B企业身份标识号码不能为空','非空校验','人民银行','B_ASSO_ENT_CERT_NUM','B企业身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_350_B_06','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000101_350_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_350_B_07','20210415','TESTCORP','72','002','关联关系类型不能为空','关联关系类型不能为空','非空校验','人民银行','B_ASSO_TYPE','关联关系类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_350_B_07','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000101_350_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_350_B_08','20210415','TESTCORP','72','002','关联关系有效标志不能为空','关联关系有效标志不能为空','非空校验','人民银行','B_ASSO_SIGN','关联关系有效标志','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_350_B_08','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000101_350_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_350_B_09','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_350_B_09','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000101_350_B_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I3100D01_310_D_01','20210415','TESTCORP','72','002','当“国别代码”为“CHN”时，“登记地址”不能为空。','当“国别代码”为“CHN”时，“登记地址”不能为空。','非空校验','人民银行','D_REG_ADD','登记地址','R','Y','if (!isEmpty(D_NATIONALITY) && D_NATIONALITY==''CHN'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I3100D01_310_D_01','20210415','TESTCORP','72','002','MBT_PM_310_D','I3100D01_310_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_410_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_410_B_00','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000101_410_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_410_B_01','20210415','TESTCORP','72','002','账户类型不能为空','账户类型不能为空','非空校验','人民银行','B_ACCT_TYPE','账户类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_410_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000101_410_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_410_B_02','20210415','TESTCORP','72','002','账户标识码不能为空','账户标识码不能为空','非空校验','人民银行','B_ACCT_CODE','账户标识码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_410_B_02','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000101_410_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_410_B_03','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_410_B_03','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000101_410_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_B_04','20210415','TESTCORP','72','002','报告时点说明代码不能为空','报告时点说明代码不能为空','非空校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_B_04','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000101_41X_B_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_B_04','20210415','TESTCORP','72','002','MBT_PM_412_B','I0000101_41X_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_B_05','20210415','TESTCORP','72','002','借款人名称不能为空','借款人名称不能为空','非空校验','人民银行','B_NAME','借款人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_B_05','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000101_41X_B_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_B_05','20210415','TESTCORP','72','002','MBT_PM_412_B','I0000101_41X_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_B_06','20210415','TESTCORP','72','002','借款人身份标识类型不能为空','借款人身份标识类型不能为空','非空校验','人民银行','B_ID_TYPE','借款人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_B_06','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000101_41X_B_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_B_06','20210415','TESTCORP','72','002','MBT_PM_412_B','I0000101_41X_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_B_07','20210415','TESTCORP','72','002','借款人身份标识号码不能为空','借款人身份标识号码不能为空','非空校验','人民银行','B_ID_NUM','借款人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_B_07','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000101_41X_B_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_B_07','20210415','TESTCORP','72','002','MBT_PM_412_B','I0000101_41X_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_B_08','20210415','TESTCORP','72','002','业务管理机构代码不能为空','业务管理机构代码不能为空','非空校验','人民银行','B_MNGMT_ORG_CODE','业务管理机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_B_08','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000101_41X_B_08','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_B_08','20210415','TESTCORP','72','002','MBT_PM_412_B','I0000101_41X_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_01','20210415','TESTCORP','72','002','借贷业务大类不能为空','借贷业务大类不能为空','非空校验','人民银行','C_BUSI_LINES','借贷业务大类','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_01','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_01','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_02','20210415','TESTCORP','72','002','借贷业务种类细分不能为空','借贷业务种类细分不能为空','非空校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_02','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_02','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_03','20210415','TESTCORP','72','002','开户日期不能为空','开户日期不能为空','非空校验','人民银行','C_OPEN_DATE','开户日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_03','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_03','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_04','20210415','TESTCORP','72','002','币种不能为空','币种不能为空','非空校验','人民银行','C_CY','币种','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_04','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_04','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_05','20210415','TESTCORP','72','002','仅适用于R1账户，信用额度不能为空','仅适用于R1账户，信用额度不能为空','非空校验','人民银行','C_ACCT_CRED_LINE_AMT','信用额度','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE== ''R1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_05','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_05','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_06','20210415','TESTCORP','72','002','适用于D1/D2/R4/C1类账户，借款金额不能为空','适用于D1/D2/R4/C1类账户，借款金额不能为空','非空校验','人民银行','C_LOAN_AMT','借款金额','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''D1'',''D2'',''R4'',''C1'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_06','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_06','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_07','20210415','TESTCORP','72','002','仅适用于D1账户，分次放款标志不能为空','仅适用于D1账户，分次放款标志不能为空','非空校验','人民银行','C_FLAG','分次放款标志','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE== ''D1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_07','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_07','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_08','20210415','TESTCORP','72','002','适用于D1/ D2/ R1/R4类账户，到期日期不能为空','适用于D1/ D2/ R1/R4类账户，到期日期不能为空','非空校验','人民银行','C_DUE_DATE','到期日期','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''D1'',''D2'',''R1'',''R4'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_08','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_08','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_08','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_09','20210415','TESTCORP','72','002','适用于D1/R1/R4类账户，还款方式不能为空','适用于D1/R1/R4类账户，还款方式不能为空','非空校验','人民银行','C_REPAY_MODE','还款方式','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''D1'',''R1'',''R4'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_09','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_09','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_09','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_10','20210415','TESTCORP','72','002','适用于D1/R1/R4类账户，还款频率不能为空','适用于D1/R1/R4类账户，还款频率不能为空','非空校验','人民银行','C_REPAY_FREQCY','还款频率','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''D1'',''R1'',''R4'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_10','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_10','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_10','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_10','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_11','20210415','TESTCORP','72','002','适用于除C1以外的其他账户，担保方式不能为空','适用于除C1以外的其他账户，担保方式不能为空','非空校验','人民银行','C_GUAR_MODE','担保方式','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_11','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_11','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_11','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_12','20210415','TESTCORP','72','002','适用于除C1以外的其他账户，其他还款保证方式不能为空','适用于除C1以外的其他账户，其他还款保证方式不能为空','非空校验','人民银行','C_OTH_REPY_GUAR_WAY','其他还款保证方式','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_12','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_12','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_12','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_13','20210415','TESTCORP','72','002','适用于D1/R4类账户，借款期限分类不能为空','适用于D1/R4类账户，借款期限分类不能为空','非空校验','人民银行','C_LOAN_TIME_LIM_CAT','借款期限分类','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''D1'',''R4'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_13','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_13','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_13','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_14','20210415','TESTCORP','72','002','适用于除C1以外的其他账户，贷款发放形式不能为空','适用于除C1以外的其他账户，贷款发放形式不能为空','非空校验','人民银行','C_LOA_FRM','贷款发放形式','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_14','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_14','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_14','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_15','20210415','TESTCORP','72','002','适用于除C1以外的其他账户，业务经营类型不能为空','适用于除C1以外的其他账户，业务经营类型不能为空','非空校验','人民银行','C_FUND_SOU','业务经营类型','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_15','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_15','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_15','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_C_16','20210415','TESTCORP','72','002','适用于D1/R1/R4类账户，资产转让标志不能为空','适用于D1/R1/R4类账户，资产转让标志不能为空','非空校验','人民银行','C_ASSET_TRAND_FLAG','资产转让标志','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''D1'',''R1'',''R4'']) {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_C_16','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000101_41X_C_16','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_C_16','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000101_41X_C_16','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_D_01','20210415','TESTCORP','72','002','身份类别不能为空','身份类别不能为空','非空校验','人民银行','D_ARLP_ID_TYPE','身份类别','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_D_01','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000101_41X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_D_01','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000101_41X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_D_02','20210415','TESTCORP','72','002','责任人名称不能为空','责任人名称不能为空','非空校验','人民银行','D_ARLP_NAME','责任人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_D_02','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000101_41X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_D_02','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000101_41X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_D_03','20210415','TESTCORP','72','002','责任人身份标识类型不能为空','责任人身份标识类型不能为空','非空校验','人民银行','D_ARLP_CERT_TYPE','责任人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_D_03','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000101_41X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_D_03','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000101_41X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_D_04','20210415','TESTCORP','72','002','责任人身份标识号码不能为空','责任人身份标识号码不能为空','非空校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_D_04','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000101_41X_D_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_D_04','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000101_41X_D_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_D_05','20210415','TESTCORP','72','002','还款责任人类型不能为空','还款责任人类型不能为空','非空校验','人民银行','D_ARLP_TYPE','还款责任人类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_D_05','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000101_41X_D_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_D_05','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000101_41X_D_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_E_01','20210415','TESTCORP','72','002','抵（质）押合同标识码不能为空','抵（质）押合同标识码不能为空','非空校验','人民银行','E_CCC','抵（质）押合同标识码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_E_01','20210415','TESTCORP','72','002','MBT_PM_410_E','I0000101_41X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_E_01','20210415','TESTCORP','72','002','MBT_PM_412_E','I0000101_41X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_F_01','20210415','TESTCORP','72','002','授信协议标识码不能为空','授信协议标识码不能为空','非空校验','人民银行','F_MCC','授信协议标识码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_F_01','20210415','TESTCORP','72','002','MBT_PM_410_F','I0000101_41X_F_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_F_01','20210415','TESTCORP','72','002','MBT_PM_412_F','I0000101_41X_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_G_01','20210415','TESTCORP','72','002','初始债权人名称不能为空','初始债权人名称不能为空','非空校验','人民银行','G_INIT_CRED_NAME','初始债权人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_G_01','20210415','TESTCORP','72','002','MBT_PM_410_G','I0000101_41X_G_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_G_01','20210415','TESTCORP','72','002','MBT_PM_412_G','I0000101_41X_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_G_02','20210415','TESTCORP','72','002','原债务种类不能为空','原债务种类不能为空','非空校验','人民银行','G_ORIG_DBT_CATE','原债务种类','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_G_02','20210415','TESTCORP','72','002','MBT_PM_410_G','I0000101_41X_G_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_G_02','20210415','TESTCORP','72','002','MBT_PM_412_G','I0000101_41X_G_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_G_03','20210415','TESTCORP','72','002','债权转移时的还款状态不能为空','债权转移时的还款状态不能为空','非空校验','人民银行','G_INIT_RPY_STS','债权转移时的还款状态','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_G_03','20210415','TESTCORP','72','002','MBT_PM_410_G','I0000101_41X_G_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_G_03','20210415','TESTCORP','72','002','MBT_PM_412_G','I0000101_41X_G_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_01','20210415','TESTCORP','72','002','账户状态不能为空','账户状态不能为空','非空校验','人民银行','H_ACCT_STATUS','账户状态','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_02','20210415','TESTCORP','72','002','余额不能为空','余额不能为空','非空校验','人民银行','H_ACCT_BAL','余额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_02','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_02','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_03','20210415','TESTCORP','72','002','余额变化日期不能为空','余额变化日期不能为空','非空校验','人民银行','H_BAL_CHG_DATE','余额变化日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_03','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_03','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_04','20210415','TESTCORP','72','002','五级分类不能为空','五级分类不能为空','非空校验','人民银行','H_FIVE_CATE','五级分类','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_04','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_04','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_05','20210415','TESTCORP','72','002','五级分类认定日期不能为空','五级分类认定日期不能为空','非空校验','人民银行','H_FIVE_CATE_ADJ_DATE','五级分类认定日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_05','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_05','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_06','20210415','TESTCORP','72','002','仅适用于R1账户，剩余还款月数不能为空','仅适用于R1账户，剩余还款月数不能为空','非空校验','人民银行','H_PYMT_PRD','剩余还款月数','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE== ''R1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_06','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_06','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_07','20210415','TESTCORP','72','002','适用于除C1以外的其他账户，当前逾期总额不能为空','适用于除C1以外的其他账户，当前逾期总额不能为空','非空校验','人民银行','H_TOT_OVERD','当前逾期总额','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_07','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_07','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_08','20210415','TESTCORP','72','002','适用于除C1以外的其他账户，当前逾期本金不能为空','适用于除C1以外的其他账户，当前逾期本金不能为空','非空校验','人民银行','H_OVERD_PRINC','当前逾期本金','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_08','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_08','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_08','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_09','20210415','TESTCORP','72','002','适用于除C1以外的其他账户，当前逾期天数不能为空','适用于除C1以外的其他账户，当前逾期天数不能为空','非空校验','人民银行','H_OVERD_DY','当前逾期天数','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_09','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_09','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_09','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_10','20210415','TESTCORP','72','002','最近一次实际还款日期不能为空','最近一次实际还款日期不能为空','非空校验','人民银行','H_LAT_RPY_DATE','最近一次实际还款日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_10','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_10','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_10','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_10','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_11','20210415','TESTCORP','72','002','最近一次实际还款金额不能为空','最近一次实际还款金额不能为空','非空校验','人民银行','H_LAT_RPY_AMT','最近一次实际还款金额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_11','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_11','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_11','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_12','20210415','TESTCORP','72','002','最近一次实际归还本金不能为空','最近一次实际归还本金不能为空','非空校验','人民银行','H_LAT_RPY_PRINC_AMT','最近一次实际归还本金','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_12','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_12','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_12','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_13','20210415','TESTCORP','72','002','还款形式不能为空','还款形式不能为空','非空校验','人民银行','H_RPMT_TYPE','还款形式','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_13','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_13','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_13','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_14','20210415','TESTCORP','72','002','适用于除C1以外的其他账户，最近一次约定还款日不能为空','适用于除C1以外的其他账户，最近一次约定还款日不能为空','非空校验','人民银行','H_LAT_AGRR_RPY_DATE','最近一次约定还款日','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_14','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_14','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_14','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_H_15','20210415','TESTCORP','72','002','适用于除C1以外的其他账户，最近一次约定还款金额不能为空','适用于除C1以外的其他账户，最近一次约定还款金额不能为空','非空校验','人民银行','H_LAT_AGRR_RPY_AMT','最近一次约定还款金额','R','Y','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!= ''C1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_H_15','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000101_41X_H_15','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_H_15','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000101_41X_H_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_I_02','20210415','TESTCORP','72','002','交易类型不能为空','交易类型不能为空','非空校验','人民银行','I_CHAN_TRAN_TYPE','交易类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_I_02','20210415','TESTCORP','72','002','MBT_PM_410_I','I0000101_41X_I_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_I_02','20210415','TESTCORP','72','002','MBT_PM_412_I','I0000101_41X_I_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_I_03','20210415','TESTCORP','72','002','交易日期不能为空','交易日期不能为空','非空校验','人民银行','I_TRAN_DATE','交易日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_I_03','20210415','TESTCORP','72','002','MBT_PM_410_I','I0000101_41X_I_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_I_03','20210415','TESTCORP','72','002','MBT_PM_412_I','I0000101_41X_I_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_I_04','20210415','TESTCORP','72','002','交易金额不能为空','交易金额不能为空','非空校验','人民银行','I_TRAN_AMT','交易金额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_I_04','20210415','TESTCORP','72','002','MBT_PM_410_I','I0000101_41X_I_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_I_04','20210415','TESTCORP','72','002','MBT_PM_412_I','I0000101_41X_I_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_I_05','20210415','TESTCORP','72','002','到期日期变更月数不能为空','到期日期变更月数不能为空','非空校验','人民银行','I_DUE_TRAN_MON','到期日期变更月数','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_I_05','20210415','TESTCORP','72','002','MBT_PM_410_I','I0000101_41X_I_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_I_05','20210415','TESTCORP','72','002','MBT_PM_412_I','I0000101_41X_I_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_I_06','20210415','TESTCORP','72','002','交易金额（原币）不能为空','交易金额（原币）不能为空','非空校验','人民银行','I_TRAN_AMT_ORG','交易金额（原币）','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_I_06','20210415','TESTCORP','72','002','MBT_PM_410_I','I0000101_41X_I_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_I_06','20210415','TESTCORP','72','002','MBT_PM_412_I','I0000101_41X_I_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_41X_I_07','20210415','TESTCORP','72','002','币种不能为空','币种不能为空','非空校验','人民银行','C_CY','币种','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_41X_I_07','20210415','TESTCORP','72','002','MBT_PM_410_I','I0000101_41X_I_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_412_I_07','20210415','TESTCORP','72','002','MBT_PM_412_I','I0000101_41X_I_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I4100D01_41X_D_01','20210415','TESTCORP','72','002','若“还款责任人类型”不为“1-共同借款人”时，“还款责任金额”不能为空值。','若“还款责任人类型”不为“1-共同借款人”时，“还款责任金额”不能为空值。','非空校验','人民银行','D_ARLP_AMT','还款责任金额','R','Y','if (!isEmpty(D_ARLP_TYPE) && D_ARLP_TYPE!=''1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D01_41X_D_01','20210415','TESTCORP','72','002','MBT_PM_410_D','I4100D01_41X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D01_412_D_01','20210415','TESTCORP','72','002','MBT_PM_412_D','I4100D01_41X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I4100D01_41X_D_02','20210415','TESTCORP','72','002','若“还款责任人类型”不为“1-共同借款人”时，“还款责任金额（原币）”不能为空值。','若“还款责任人类型”不为“1-共同借款人”时，“还款责任金额（原币）”不能为空值。','非空校验','人民银行','D_ARLP_AMT_ORG','还款责任金额（原币）','R','Y','if (!isEmpty(D_ARLP_TYPE) && D_ARLP_TYPE!=''1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D01_41X_D_02','20210415','TESTCORP','72','002','MBT_PM_410_D','I4100D01_41X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D01_412_D_02','20210415','TESTCORP','72','002','MBT_PM_412_D','I4100D01_41X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I4100D01_41X_D_03','20210415','TESTCORP','72','002','若“还款责任人类型”不为“1-共同借款人”时，“币种”不能为空值。','若“还款责任人类型”不为“1-共同借款人”时，“币种”不能为空值。','非空校验','人民银行','C_CY','币种','R','Y','if (!isEmpty(D_ARLP_TYPE) && D_ARLP_TYPE!=''1'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D01_41X_D_03','20210415','TESTCORP','72','002','MBT_PM_410_D','I4100D01_41X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D01_412_D_03','20210415','TESTCORP','72','002','MBT_PM_412_D','I4100D01_41X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I4100D02_41X_D_01','20210415','TESTCORP','72','002','当“还款责任人类型”为“2-保证人”时，“联保标志”不应为空。','当“还款责任人类型”为“2-保证人”时，“联保标志”不应为空。','非空校验','人民银行','D_WARTY_SIGN','联保标志','R','Y','if (!isEmpty(D_ARLP_TYPE) && D_ARLP_TYPE==''2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D02_41X_D_01','20210415','TESTCORP','72','002','MBT_PM_410_D','I4100D02_41X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D02_412_D_01','20210415','TESTCORP','72','002','MBT_PM_412_D','I4100D02_41X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I4100D02_41X_D_02','20210415','TESTCORP','72','002','当“还款责任人类型”为“2-保证人”时，“保证合同编号”不应为空。','当“还款责任人类型”为“2-保证人”时，“保证合同编号”不应为空。','非空校验','人民银行','D_MAX_GUAR_MCC','保证合同编号','R','Y','if (!isEmpty(D_ARLP_TYPE) && D_ARLP_TYPE==''2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D02_41X_D_02','20210415','TESTCORP','72','002','MBT_PM_410_D','I4100D02_41X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D02_412_D_02','20210415','TESTCORP','72','002','MBT_PM_412_D','I4100D02_41X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I4100H03_41X_H_01','20210415','TESTCORP','72','002','当且仅当“账户状态”为“21-关闭”时，“账户关闭日期”不能为空值。','当且仅当“账户状态”为“21-关闭”时，“账户关闭日期”不能为空值。','非空校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','if (!isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS==''21'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H03_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H03_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H03_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H03_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_420_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_420_B_00','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000101_420_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_420_B_01','20210415','TESTCORP','72','002','授信协议标识码不能为空','授信协议标识码不能为空','非空校验','人民银行','B_CONTRACT_CODE','授信协议标识码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_420_B_01','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000101_420_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_420_B_02','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_420_B_02','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000101_420_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_420_B_03','20210415','TESTCORP','72','002','报告时点说明代码不能为空','报告时点说明代码不能为空','非空校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_420_B_03','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000101_420_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_B_04','20210415','TESTCORP','72','002','受信人姓名不能为空','受信人姓名不能为空','非空校验','人民银行','B_NAME','受信人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_B_04','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000101_42X_B_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_B_04','20210415','TESTCORP','72','002','MBT_PM_422_B','I0000101_42X_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_B_05','20210415','TESTCORP','72','002','受信人身份标识类型不能为空','受信人身份标识类型不能为空','非空校验','人民银行','B_ID_TYPE','受信人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_B_05','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000101_42X_B_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_B_05','20210415','TESTCORP','72','002','MBT_PM_422_B','I0000101_42X_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_B_06','20210415','TESTCORP','72','002','受信人身份标识号码不能为空','受信人身份标识号码不能为空','非空校验','人民银行','B_ID_NUM','受信人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_B_06','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000101_42X_B_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_B_06','20210415','TESTCORP','72','002','MBT_PM_422_B','I0000101_42X_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_B_07','20210415','TESTCORP','72','002','业务管理机构代码不能为空','业务管理机构代码不能为空','非空校验','人民银行','B_MNGMT_ORG_CODE','业务管理机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_B_07','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000101_42X_B_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_B_07','20210415','TESTCORP','72','002','MBT_PM_422_B','I0000101_42X_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_C_01','20210415','TESTCORP','72','002','共同受信人身份类别不能为空','共同受信人身份类别不能为空','非空校验','人民银行','C_BRER_TYPE','共同受信人身份类别','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_C_01','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000101_42X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_C_01','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000101_42X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_C_02','20210415','TESTCORP','72','002','共同受信人名称不能为空','共同受信人名称不能为空','非空校验','人民银行','C_CERT_REL_NAME','共同受信人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_C_02','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000101_42X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_C_02','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000101_42X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_C_03','20210415','TESTCORP','72','002','共同受信人身份标识类型不能为空','共同受信人身份标识类型不能为空','非空校验','人民银行','C_CERT_REL_ID_TYPE','共同受信人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_C_03','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000101_42X_C_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_C_03','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000101_42X_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_C_04','20210415','TESTCORP','72','002','共同受信人身份标识号码不能为空','共同受信人身份标识号码不能为空','非空校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_C_04','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000101_42X_C_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_C_04','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000101_42X_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_D_01','20210415','TESTCORP','72','002','授信额度类型不能为空','授信额度类型不能为空','非空校验','人民银行','D_CREDIT_LIM_TYPE','授信额度类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_D_01','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000101_42X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_D_01','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000101_42X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_D_02','20210415','TESTCORP','72','002','额度循环标志不能为空','额度循环标志不能为空','非空校验','人民银行','D_LIM_LOOP_FLG','额度循环标志','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_D_02','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000101_42X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_D_02','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000101_42X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_D_03','20210415','TESTCORP','72','002','授信额度不能为空','授信额度不能为空','非空校验','人民银行','D_CREDIT_LIM','授信额度','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_D_03','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000101_42X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_D_03','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000101_42X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_D_04','20210415','TESTCORP','72','002','币种不能为空','币种不能为空','非空校验','人民银行','D_CY','币种','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_D_04','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000101_42X_D_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_D_04','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000101_42X_D_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_D_05','20210415','TESTCORP','72','002','额度生效日期不能为空','额度生效日期不能为空','非空校验','人民银行','D_CON_EFF_DATE','额度生效日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_D_05','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000101_42X_D_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_D_05','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000101_42X_D_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_D_06','20210415','TESTCORP','72','002','额度到期日期不能为空','额度到期日期不能为空','非空校验','人民银行','D_CON_EXP_DATE','额度到期日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_D_06','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000101_42X_D_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_D_06','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000101_42X_D_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_42X_D_07','20210415','TESTCORP','72','002','额度状态不能为空','额度状态不能为空','非空校验','人民银行','D_CON_STATUS','额度状态','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_42X_D_07','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000101_42X_D_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_422_D_07','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000101_42X_D_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_440_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_440_B_00','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000101_440_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_440_B_01','20210415','TESTCORP','72','002','账户类型不能为空','账户类型不能为空','非空校验','人民银行','B_ACCT_TYPE','账户类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_440_B_01','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000101_440_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_440_B_02','20210415','TESTCORP','72','002','账户标识码不能为空','账户标识码不能为空','非空校验','人民银行','B_ACCT_CODE','账户标识码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_440_B_02','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000101_440_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_440_B_03','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_440_B_03','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000101_440_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_440_B_04','20210415','TESTCORP','72','002','报告时点说明代码不能为空','报告时点说明代码不能为空','非空校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_440_B_04','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000101_440_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_B_05','20210415','TESTCORP','72','002','债务人名称不能为空','债务人名称不能为空','非空校验','人民银行','B_NAME','债务人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_B_05','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000101_44X_B_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_B_05','20210415','TESTCORP','72','002','MBT_PM_442_B','I0000101_44X_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_B_06','20210415','TESTCORP','72','002','债务人身份标识类型不能为空','债务人身份标识类型不能为空','非空校验','人民银行','B_ID_TYPE','债务人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_B_06','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000101_44X_B_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_B_06','20210415','TESTCORP','72','002','MBT_PM_442_B','I0000101_44X_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_B_07','20210415','TESTCORP','72','002','债务人身份标识号码不能为空','债务人身份标识号码不能为空','非空校验','人民银行','B_ID_NUM','债务人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_B_07','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000101_44X_B_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_B_07','20210415','TESTCORP','72','002','MBT_PM_442_B','I0000101_44X_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_B_08','20210415','TESTCORP','72','002','业务管理机构代码不能为空','业务管理机构代码不能为空','非空校验','人民银行','B_MNGMT_ORG_CODE','业务管理机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_B_08','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000101_44X_B_08','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_B_08','20210415','TESTCORP','72','002','MBT_PM_442_B','I0000101_44X_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_C_01','20210415','TESTCORP','72','002','担保业务大类不能为空','担保业务大类不能为空','非空校验','人民银行','C_BUSI_LINES','担保业务大类','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_C_01','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000101_44X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_C_01','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000101_44X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_C_02','20210415','TESTCORP','72','002','担保业务种类细分不能为空','担保业务种类细分不能为空','非空校验','人民银行','C_BUSI_DTIL_LINES','担保业务种类细分','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_C_02','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000101_44X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_C_02','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000101_44X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_C_03','20210415','TESTCORP','72','002','开户日期不能为空','开户日期不能为空','非空校验','人民银行','C_OPEN_DATE','开户日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_C_03','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000101_44X_C_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_C_03','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000101_44X_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_C_04','20210415','TESTCORP','72','002','担保金额不能为空','担保金额不能为空','非空校验','人民银行','C_GUAR_AMT','担保金额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_C_04','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000101_44X_C_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_C_04','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000101_44X_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_C_05','20210415','TESTCORP','72','002','币种不能为空','币种不能为空','非空校验','人民银行','C_CY','币种','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_C_05','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000101_44X_C_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_C_05','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000101_44X_C_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_C_06','20210415','TESTCORP','72','002','到期日期不能为空','到期日期不能为空','非空校验','人民银行','C_DUE_DATE','到期日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_C_06','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000101_44X_C_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_C_06','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000101_44X_C_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_C_07','20210415','TESTCORP','72','002','反担保方式不能为空','反担保方式不能为空','非空校验','人民银行','C_GUAR_MODE','反担保方式','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_C_07','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000101_44X_C_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_C_07','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000101_44X_C_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_C_08','20210415','TESTCORP','72','002','其他还款保证方式不能为空','其他还款保证方式不能为空','非空校验','人民银行','C_OTH_REPY_GUAR_WAY','其他还款保证方式','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_C_08','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000101_44X_C_08','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_C_08','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000101_44X_C_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_C_09','20210415','TESTCORP','72','002','保证金百分比不能为空','保证金百分比不能为空','非空校验','人民银行','C_SEC_DEP','保证金百分比','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_C_09','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000101_44X_C_09','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_C_09','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000101_44X_C_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_E_01','20210415','TESTCORP','72','002','身份类别不能为空','身份类别不能为空','非空校验','人民银行','INFO_ID_TYPE','身份类别','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_E_01','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000101_44X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_E_01','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000101_44X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_E_02','20210415','TESTCORP','72','002','责任人名称不能为空','责任人名称不能为空','非空校验','人民银行','ARLP_NAME','责任人名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_E_02','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000101_44X_E_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_E_02','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000101_44X_E_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_E_03','20210415','TESTCORP','72','002','责任人身份标识类型不能为空','责任人身份标识类型不能为空','非空校验','人民银行','ARLP_CERT_TYPE','责任人身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_E_03','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000101_44X_E_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_E_03','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000101_44X_E_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_E_04','20210415','TESTCORP','72','002','责任人身份标识号码不能为空','责任人身份标识号码不能为空','非空校验','人民银行','ARLP_CERT_NUM','责任人身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_E_04','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000101_44X_E_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_E_04','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000101_44X_E_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_E_05','20210415','TESTCORP','72','002','还款责任人类型不能为空','还款责任人类型不能为空','非空校验','人民银行','ARLP_TYPE','还款责任人类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_E_05','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000101_44X_E_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_E_05','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000101_44X_E_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_E_06','20210415','TESTCORP','72','002','还款责任金额不能为空','还款责任金额不能为空','非空校验','人民银行','ARLP_AMT','还款责任金额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_E_06','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000101_44X_E_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_E_06','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000101_44X_E_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_F_01','20210415','TESTCORP','72','002','抵（质）押合同标识码不能为空','抵（质）押合同标识码不能为空','非空校验','人民银行','CCC','抵（质）押合同标识码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_F_01','20210415','TESTCORP','72','002','MBT_PM_440_F','I0000101_44X_F_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_F_01','20210415','TESTCORP','72','002','MBT_PM_442_F','I0000101_44X_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_G_01','20210415','TESTCORP','72','002','授信协议标识码不能为空','授信协议标识码不能为空','非空校验','人民银行','G_MCC','授信协议标识码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_G_01','20210415','TESTCORP','72','002','MBT_PM_440_G','I0000101_44X_G_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_G_01','20210415','TESTCORP','72','002','MBT_PM_442_G','I0000101_44X_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_D_01','20210415','TESTCORP','72','002','账户状态不能为空','账户状态不能为空','非空校验','人民银行','D_ACCT_STATUS','账户状态','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_D_01','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000101_44X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_D_01','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000101_44X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_D_02','20210415','TESTCORP','72','002','在保余额不能为空','在保余额不能为空','非空校验','人民银行','D_LOAN_AMT','在保余额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_D_02','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000101_44X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_D_02','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000101_44X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_D_03','20210415','TESTCORP','72','002','余额变化日期不能为空','余额变化日期不能为空','非空校验','人民银行','D_REPAY_PRD','余额变化日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_D_03','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000101_44X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_D_03','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000101_44X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_D_04','20210415','TESTCORP','72','002','五级分类不能为空','五级分类不能为空','非空校验','人民银行','D_FIVE_CATE','五级分类','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_D_04','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000101_44X_D_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_D_04','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000101_44X_D_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_D_05','20210415','TESTCORP','72','002','五级分类认定日期不能为空','五级分类认定日期不能为空','非空校验','人民银行','D_FIVE_CATE_ADJ_DATE','五级分类认定日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_D_05','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000101_44X_D_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_D_05','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000101_44X_D_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_44X_D_06','20210415','TESTCORP','72','002','代偿（垫款）标志不能为空','代偿（垫款）标志不能为空','非空校验','人民银行','D_COMP_ADV_FLAG','代偿（垫款）标志','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_44X_D_06','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000101_44X_D_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_442_D_06','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000101_44X_D_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I4400D01_44X_D_01','20210415','TESTCORP','72','002','当且仅当“账户状态”为“2-关闭”，“账户关闭日期”不能为空值。','当且仅当“账户状态”为“2-关闭”，“账户关闭日期”不能为空值。','非空校验','人民银行','D_CLOSE_DATE','账户关闭日期','R','Y','if (!isEmpty(D_ACCT_STATUS) && D_ACCT_STATUS==''2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400D01_44X_D_01','20210415','TESTCORP','72','002','MBT_PM_440_D','I4400D01_44X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400D01_442_D_01','20210415','TESTCORP','72','002','MBT_PM_442_D','I4400D01_44X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I4400E03_44X_E_01','20210415','TESTCORP','72','002','当“还款责任人类型”为“2-反担保人”时，“联保标志”不应为空。','当“还款责任人类型”为“2-反担保人”时，“联保标志”不应为空。','非空校验','人民银行','WARTY_SIGN','联保标志','R','Y','if (!isEmpty(ARLP_TYPE) && ARLP_TYPE==''2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400E03_44X_E_01','20210415','TESTCORP','72','002','MBT_PM_440_E','I4400E03_44X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400E03_442_E_01','20210415','TESTCORP','72','002','MBT_PM_442_E','I4400E03_44X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I4400E03_44X_E_02','20210415','TESTCORP','72','002','当“还款责任人类型”为“2-反担保人”时，“保证合同编号”不应为空。','当“还款责任人类型”为“2-反担保人”时，“保证合同编号”不应为空。','非空校验','人民银行','MAX_GUAR_MCC','保证合同编号','R','Y','if (!isEmpty(ARLP_TYPE) && ARLP_TYPE==''2'') {
    if (isEmpty($value)) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400E03_44X_E_02','20210415','TESTCORP','72','002','MBT_PM_440_E','I4400E03_44X_E_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400E03_442_E_02','20210415','TESTCORP','72','002','MBT_PM_442_E','I4400E03_44X_E_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_B_00','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000101_610_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_B_01','20210415','TESTCORP','72','002','企业名称不能为空','企业名称不能为空','非空校验','人民银行','B_ENT_NAME','企业名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_B_01','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000101_610_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_B_02','20210415','TESTCORP','72','002','企业身份标识类型不能为空','企业身份标识类型不能为空','非空校验','人民银行','B_ENT_CERT_TYPE','企业身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_B_02','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000101_610_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_B_03','20210415','TESTCORP','72','002','企业身份标识号码不能为空','企业身份标识号码不能为空','非空校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_B_03','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000101_610_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_B_04','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_B_04','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000101_610_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_B_05','20210415','TESTCORP','72','002','报表年份不能为空','报表年份不能为空','非空校验','人民银行','B_SHEET_YEAR','报表年份','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_B_05','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000101_610_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_B_06','20210415','TESTCORP','72','002','报表类型不能为空','报表类型不能为空','非空校验','人民银行','B_SHEET_TYPE','报表类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_B_06','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000101_610_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_B_07','20210415','TESTCORP','72','002','报表类型细分不能为空','报表类型细分不能为空','非空校验','人民银行','B_SHEET_TYPE_DIVIDE','报表类型细分','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_B_07','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000101_610_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_B_08','20210415','TESTCORP','72','002','客户资料维护机构代码不能为空','客户资料维护机构代码不能为空','非空校验','人民银行','B_CIMOC','客户资料维护机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_B_08','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000101_610_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_B_09','20210415','TESTCORP','72','002','报告时点说明代码不能为空','报告时点说明代码不能为空','非空校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_B_09','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000101_610_B_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_B_10','20210415','TESTCORP','72','002','报表版本不能为空','报表版本不能为空','非空校验','人民银行','B_RPT_VERSION','报表版本','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_B_10','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000101_610_B_10','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_C_01','20210415','TESTCORP','72','002','流动资产合计不能为空','流动资产合计不能为空','非空校验','人民银行','C_TOTAL_CURRENT_ASSETS','流动资产合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_C_01','20210415','TESTCORP','72','002','MBT_PM_610_C','I0000101_610_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_C_02','20210415','TESTCORP','72','002','固定资产合计不能为空','固定资产合计不能为空','非空校验','人民银行','C_TOTAL_FIXED_ASSETS','固定资产合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_C_02','20210415','TESTCORP','72','002','MBT_PM_610_C','I0000101_610_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_C_03','20210415','TESTCORP','72','002','资产总计不能为空','资产总计不能为空','非空校验','人民银行','C_TOTAL_ASSETS','资产总计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_C_03','20210415','TESTCORP','72','002','MBT_PM_610_C','I0000101_610_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_C_04','20210415','TESTCORP','72','002','流动负债合计不能为空','流动负债合计不能为空','非空校验','人民银行','C_TOTAL_CURRENT_LIABILITIES','流动负债合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_C_04','20210415','TESTCORP','72','002','MBT_PM_610_C','I0000101_610_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_C_05','20210415','TESTCORP','72','002','长期负债合计不能为空','长期负债合计不能为空','非空校验','人民银行','C_TOTAL_LT_LIABILITIES','长期负债合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_C_05','20210415','TESTCORP','72','002','MBT_PM_610_C','I0000101_610_C_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_C_06','20210415','TESTCORP','72','002','负债合计不能为空','负债合计不能为空','非空校验','人民银行','C_TOTAL_LIABILITIES','负债合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_C_06','20210415','TESTCORP','72','002','MBT_PM_610_C','I0000101_610_C_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_C_07','20210415','TESTCORP','72','002','所有者权益合计不能为空','所有者权益合计不能为空','非空校验','人民银行','C_TOTAL_EQUITY','所有者权益合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_C_07','20210415','TESTCORP','72','002','MBT_PM_610_C','I0000101_610_C_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_C_08','20210415','TESTCORP','72','002','负债和所有者权益总计不能为空','负债和所有者权益总计不能为空','非空校验','人民银行','C_TOTAL_EQUITY_LIABILITIES','负债和所有者权益总计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_C_08','20210415','TESTCORP','72','002','MBT_PM_610_C','I0000101_610_C_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_D_01','20210415','TESTCORP','72','002','流动资产合计不能为空','流动资产合计不能为空','非空校验','人民银行','D_TOTAL_CURRENT_ASSETS','流动资产合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_D_01','20210415','TESTCORP','72','002','MBT_PM_610_D','I0000101_610_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_D_02','20210415','TESTCORP','72','002','非流动资产合计不能为空','非流动资产合计不能为空','非空校验','人民银行','D_TOTAL_NON_CURRENT_ASSETS','非流动资产合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_D_02','20210415','TESTCORP','72','002','MBT_PM_610_D','I0000101_610_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_D_03','20210415','TESTCORP','72','002','资产总计不能为空','资产总计不能为空','非空校验','人民银行','D_TOTAL_ASSETS','资产总计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_D_03','20210415','TESTCORP','72','002','MBT_PM_610_D','I0000101_610_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_D_04','20210415','TESTCORP','72','002','流动负债合计不能为空','流动负债合计不能为空','非空校验','人民银行','D_TOTAL_CURRENT_LIABILITIES','流动负债合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_D_04','20210415','TESTCORP','72','002','MBT_PM_610_D','I0000101_610_D_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_D_05','20210415','TESTCORP','72','002','非流动负债合计不能为空','非流动负债合计不能为空','非空校验','人民银行','D_TOTAL_NON_CURRENT_LIABILITIE','非流动负债合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_D_05','20210415','TESTCORP','72','002','MBT_PM_610_D','I0000101_610_D_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_D_06','20210415','TESTCORP','72','002','负债合计不能为空','负债合计不能为空','非空校验','人民银行','D_TOTAL_LIABILITIES','负债合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_D_06','20210415','TESTCORP','72','002','MBT_PM_610_D','I0000101_610_D_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_D_07','20210415','TESTCORP','72','002','所有者权益合计不能为空','所有者权益合计不能为空','非空校验','人民银行','D_TOTAL_EQUITY','所有者权益合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_D_07','20210415','TESTCORP','72','002','MBT_PM_610_D','I0000101_610_D_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_610_D_08','20210415','TESTCORP','72','002','负债和所有者权益合计不能为空','负债和所有者权益合计不能为空','非空校验','人民银行','D_TOTAL_EQUITY_LIABILITIES','负债和所有者权益合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_610_D_08','20210415','TESTCORP','72','002','MBT_PM_610_D','I0000101_610_D_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_B_00','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000101_620_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_B_01','20210415','TESTCORP','72','002','企业名称不能为空','企业名称不能为空','非空校验','人民银行','B_ENT_NAME','企业名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_B_01','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000101_620_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_B_02','20210415','TESTCORP','72','002','企业身份标识类型不能为空','企业身份标识类型不能为空','非空校验','人民银行','B_ENT_CERT_TYPE','企业身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_B_02','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000101_620_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_B_03','20210415','TESTCORP','72','002','企业身份标识号码不能为空','企业身份标识号码不能为空','非空校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_B_03','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000101_620_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_B_04','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_B_04','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000101_620_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_B_05','20210415','TESTCORP','72','002','报表年份不能为空','报表年份不能为空','非空校验','人民银行','B_SHEET_YEAR','报表年份','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_B_05','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000101_620_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_B_06','20210415','TESTCORP','72','002','报表类型不能为空','报表类型不能为空','非空校验','人民银行','B_SHEET_TYPE','报表类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_B_06','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000101_620_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_B_07','20210415','TESTCORP','72','002','报表类型细分不能为空','报表类型细分不能为空','非空校验','人民银行','B_SHEET_TYPE_DIVIDE','报表类型细分','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_B_07','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000101_620_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_B_08','20210415','TESTCORP','72','002','客户资料维护机构代码不能为空','客户资料维护机构代码不能为空','非空校验','人民银行','B_CIMOC','客户资料维护机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_B_08','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000101_620_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_B_09','20210415','TESTCORP','72','002','报告时点说明代码不能为空','报告时点说明代码不能为空','非空校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_B_09','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000101_620_B_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_B_10','20210415','TESTCORP','72','002','报表版本不能为空','报表版本不能为空','非空校验','人民银行','B_RPT_VERSION','报表版本','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_B_10','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000101_620_B_10','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_C_01','20210415','TESTCORP','72','002','主营业务收入不能为空','主营业务收入不能为空','非空校验','人民银行','C_MAIN_REVENUEF_REVENUE','主营业务收入','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_C_01','20210415','TESTCORP','72','002','MBT_PM_620_C','I0000101_620_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_C_02','20210415','TESTCORP','72','002','主营业务利润不能为空','主营业务利润不能为空','非空校验','人民银行','C_PRINCIPLE_BUSINESS_PROFIT','主营业务利润','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_C_02','20210415','TESTCORP','72','002','MBT_PM_620_C','I0000101_620_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_C_03','20210415','TESTCORP','72','002','营业利润不能为空','营业利润不能为空','非空校验','人民银行','C_OPERATING_PROFITS','营业利润','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_C_03','20210415','TESTCORP','72','002','MBT_PM_620_C','I0000101_620_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_C_04','20210415','TESTCORP','72','002','利润总额不能为空','利润总额不能为空','非空校验','人民银行','C_TOTAL_PROFIT','利润总额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_C_04','20210415','TESTCORP','72','002','MBT_PM_620_C','I0000101_620_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_C_05','20210415','TESTCORP','72','002','净利润不能为空','净利润不能为空','非空校验','人民银行','C_NET_PROFIT','净利润','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_C_05','20210415','TESTCORP','72','002','MBT_PM_620_C','I0000101_620_C_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_D_01','20210415','TESTCORP','72','002','营业收入不能为空','营业收入不能为空','非空校验','人民银行','D_REVENUE_OF_SALES','营业收入','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_D_01','20210415','TESTCORP','72','002','MBT_PM_620_D','I0000101_620_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_D_02','20210415','TESTCORP','72','002','营业利润不能为空','营业利润不能为空','非空校验','人民银行','D_OPERATING_PROFITS','营业利润','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_D_02','20210415','TESTCORP','72','002','MBT_PM_620_D','I0000101_620_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_D_03','20210415','TESTCORP','72','002','利润总额不能为空','利润总额不能为空','非空校验','人民银行','D_PROFIT_BEFORE_TAX','利润总额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_D_03','20210415','TESTCORP','72','002','MBT_PM_620_D','I0000101_620_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_620_D_04','20210415','TESTCORP','72','002','净利润不能为空','净利润不能为空','非空校验','人民银行','D_NET_PROFIT','净利润','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_620_D_04','20210415','TESTCORP','72','002','MBT_PM_620_D','I0000101_620_D_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_B_00','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000101_630_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_B_01','20210415','TESTCORP','72','002','企业名称不能为空','企业名称不能为空','非空校验','人民银行','B_ENT_NAME','企业名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_B_01','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000101_630_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_B_02','20210415','TESTCORP','72','002','企业身份标识类型不能为空','企业身份标识类型不能为空','非空校验','人民银行','B_ENT_CERT_TYPE','企业身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_B_02','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000101_630_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_B_03','20210415','TESTCORP','72','002','企业身份标识号码不能为空','企业身份标识号码不能为空','非空校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_B_03','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000101_630_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_B_04','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_B_04','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000101_630_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_B_05','20210415','TESTCORP','72','002','报表年份不能为空','报表年份不能为空','非空校验','人民银行','B_SHEET_YEAR','报表年份','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_B_05','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000101_630_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_B_06','20210415','TESTCORP','72','002','报表类型不能为空','报表类型不能为空','非空校验','人民银行','B_SHEET_TYPE','报表类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_B_06','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000101_630_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_B_07','20210415','TESTCORP','72','002','报表类型细分不能为空','报表类型细分不能为空','非空校验','人民银行','B_SHEET_TYPE_DIVIDE','报表类型细分','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_B_07','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000101_630_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_B_08','20210415','TESTCORP','72','002','客户资料维护机构代码不能为空','客户资料维护机构代码不能为空','非空校验','人民银行','B_CIMOC','客户资料维护机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_B_08','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000101_630_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_B_09','20210415','TESTCORP','72','002','报告时点说明代码不能为空','报告时点说明代码不能为空','非空校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_B_09','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000101_630_B_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_B_10','20210415','TESTCORP','72','002','报表版本不能为空','报表版本不能为空','非空校验','人民银行','B_RPT_VERSION','报表版本','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_B_10','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000101_630_B_10','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_C_01','20210415','TESTCORP','72','002','经营活动现金流入小计不能为空','经营活动现金流入小计不能为空','非空校验','人民银行','C_TOTAL_CASH_INFLOWS_OPERA_ACT','经营活动现金流入小计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_C_01','20210415','TESTCORP','72','002','MBT_PM_630_C','I0000101_630_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_C_02','20210415','TESTCORP','72','002','经营活动现金流出小计不能为空','经营活动现金流出小计不能为空','非空校验','人民银行','C_TOTAL_CASH_OUTFLOWS_OPERA_AC','经营活动现金流出小计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_C_02','20210415','TESTCORP','72','002','MBT_PM_630_C','I0000101_630_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_C_03','20210415','TESTCORP','72','002','经营活动产生的现金流量净额不能为空','经营活动产生的现金流量净额不能为空','非空校验','人民银行','C_NET_CASH_FLOWS_OPERAT_ACT','经营活动产生的现金流量净额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_C_03','20210415','TESTCORP','72','002','MBT_PM_630_C','I0000101_630_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_C_04','20210415','TESTCORP','72','002','投资活动现金流入小计不能为空','投资活动现金流入小计不能为空','非空校验','人民银行','C_TOTAL_CASH_INF_INVESTING_ACT','投资活动现金流入小计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_C_04','20210415','TESTCORP','72','002','MBT_PM_630_C','I0000101_630_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_C_05','20210415','TESTCORP','72','002','投资活动现金流出小计不能为空','投资活动现金流出小计不能为空','非空校验','人民银行','C_TOTAL_CASH_OUTFLOWS_INV_ACT','投资活动现金流出小计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_C_05','20210415','TESTCORP','72','002','MBT_PM_630_C','I0000101_630_C_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_C_06','20210415','TESTCORP','72','002','投资活动产生的现金流量净额不能为空','投资活动产生的现金流量净额不能为空','非空校验','人民银行','C_NET_CASH_FLOWS_INVESTING_ACT','投资活动产生的现金流量净额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_C_06','20210415','TESTCORP','72','002','MBT_PM_630_C','I0000101_630_C_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_C_07','20210415','TESTCORP','72','002','筹资活动现金流入小计不能为空','筹资活动现金流入小计不能为空','非空校验','人民银行','C_TOTAL_CASH_INF_FINANCING_ACT','筹资活动现金流入小计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_C_07','20210415','TESTCORP','72','002','MBT_PM_630_C','I0000101_630_C_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_C_08','20210415','TESTCORP','72','002','筹资活动现金流出小计不能为空','筹资活动现金流出小计不能为空','非空校验','人民银行','C_TOTAL_CASH_OUTFLOWS_FIN_AC','筹资活动现金流出小计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_C_08','20210415','TESTCORP','72','002','MBT_PM_630_C','I0000101_630_C_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_C_09','20210415','TESTCORP','72','002','筹集活动产生的现金流量净额不能为空','筹集活动产生的现金流量净额不能为空','非空校验','人民银行','C_NET_CASH_FLOWS_FINANCING_AC','筹集活动产生的现金流量净额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_C_09','20210415','TESTCORP','72','002','MBT_PM_630_C','I0000101_630_C_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_C_10','20210415','TESTCORP','72','002','现金及现金等价物净增加额不能为空','现金及现金等价物净增加额不能为空','非空校验','人民银行','C_NET_INC_CASH_CASH_EQUIVALENT','现金及现金等价物净增加额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_C_10','20210415','TESTCORP','72','002','MBT_PM_630_C','I0000101_630_C_10','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_D_01','20210415','TESTCORP','72','002','经营活动现金流入小计不能为空','经营活动现金流入小计不能为空','非空校验','人民银行','D_TOTAL_CASH_INFLOWS_OPERAT_AC','经营活动现金流入小计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_D_01','20210415','TESTCORP','72','002','MBT_PM_630_D','I0000101_630_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_D_02','20210415','TESTCORP','72','002','经营活动产生的现金流量净额不能为空','经营活动产生的现金流量净额不能为空','非空校验','人民银行','D_NET_CASH_FLOWS_OPERATING_ACT','经营活动产生的现金流量净额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_D_02','20210415','TESTCORP','72','002','MBT_PM_630_D','I0000101_630_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_D_03','20210415','TESTCORP','72','002','投资活动产生的现金流量净额不能为空','投资活动产生的现金流量净额不能为空','非空校验','人民银行','D_NET_CASH_FLOWS_INVEST_ACT','投资活动产生的现金流量净额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_D_03','20210415','TESTCORP','72','002','MBT_PM_630_D','I0000101_630_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_D_04','20210415','TESTCORP','72','002','筹集活动产生的现金流量净额不能为空','筹集活动产生的现金流量净额不能为空','非空校验','人民银行','D_NET_CASH_FLOWS_FINANCING_ACT','筹集活动产生的现金流量净额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_D_04','20210415','TESTCORP','72','002','MBT_PM_630_D','I0000101_630_D_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_D_05','20210415','TESTCORP','72','002','现金及现金等价物净增加额不能为空','现金及现金等价物净增加额不能为空','非空校验','人民银行','D_NET_INC_CASH_CASH_EQUIVALENT','现金及现金等价物净增加额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_D_05','20210415','TESTCORP','72','002','MBT_PM_630_D','I0000101_630_D_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_630_D_06','20210415','TESTCORP','72','002','期末现金及现金等价物余额不能为空','期末现金及现金等价物余额不能为空','非空校验','人民银行','D_THE_FINAL_CASH_EQU_BALANCE','期末现金及现金等价物余额','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_630_D_06','20210415','TESTCORP','72','002','MBT_PM_630_D','I0000101_630_D_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_B_00','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000101_640_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_B_01','20210415','TESTCORP','72','002','企业名称不能为空','企业名称不能为空','非空校验','人民银行','B_ENT_NAME','企业名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_B_01','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000101_640_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_B_02','20210415','TESTCORP','72','002','企业身份标识类型不能为空','企业身份标识类型不能为空','非空校验','人民银行','B_ENT_CERT_TYPE','企业身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_B_02','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000101_640_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_B_03','20210415','TESTCORP','72','002','企业身份标识号码不能为空','企业身份标识号码不能为空','非空校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_B_03','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000101_640_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_B_04','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_B_04','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000101_640_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_B_05','20210415','TESTCORP','72','002','报表年份不能为空','报表年份不能为空','非空校验','人民银行','B_SHEET_YEAR','报表年份','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_B_05','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000101_640_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_B_06','20210415','TESTCORP','72','002','报表类型不能为空','报表类型不能为空','非空校验','人民银行','B_SHEET_TYPE','报表类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_B_06','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000101_640_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_B_07','20210415','TESTCORP','72','002','报表类型细分不能为空','报表类型细分不能为空','非空校验','人民银行','B_SHEET_TYPE_DIVIDE','报表类型细分','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_B_07','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000101_640_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_B_08','20210415','TESTCORP','72','002','客户资料维护机构代码不能为空','客户资料维护机构代码不能为空','非空校验','人民银行','B_CIMOC','客户资料维护机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_B_08','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000101_640_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_B_09','20210415','TESTCORP','72','002','报告时点说明代码不能为空','报告时点说明代码不能为空','非空校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_B_09','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000101_640_B_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_C_01','20210415','TESTCORP','72','002','流动资产合计不能为空','流动资产合计不能为空','非空校验','人民银行','C_TOTAL_CURRENT_ASSETS','流动资产合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_C_01','20210415','TESTCORP','72','002','MBT_PM_640_C','I0000101_640_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_C_02','20210415','TESTCORP','72','002','非流动资产合计不能为空','非流动资产合计不能为空','非空校验','人民银行','C_TOTAL_NON_CURRENT_ASSETS','非流动资产合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_C_02','20210415','TESTCORP','72','002','MBT_PM_640_C','I0000101_640_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_C_03','20210415','TESTCORP','72','002','资产总计不能为空','资产总计不能为空','非空校验','人民银行','C_TOTAL_ASSETS','资产总计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_C_03','20210415','TESTCORP','72','002','MBT_PM_640_C','I0000101_640_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_C_04','20210415','TESTCORP','72','002','流动负债合计不能为空','流动负债合计不能为空','非空校验','人民银行','C_TOTAL_CURRENT_LIABILITIES','流动负债合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_C_04','20210415','TESTCORP','72','002','MBT_PM_640_C','I0000101_640_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_C_05','20210415','TESTCORP','72','002','非流动负债合计不能为空','非流动负债合计不能为空','非空校验','人民银行','C_TOTAL_NON_CURRENT_LIABILITIE','非流动负债合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_C_05','20210415','TESTCORP','72','002','MBT_PM_640_C','I0000101_640_C_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_C_06','20210415','TESTCORP','72','002','负债合计不能为空','负债合计不能为空','非空校验','人民银行','C_TOTAL_LIABILITIES','负债合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_C_06','20210415','TESTCORP','72','002','MBT_PM_640_C','I0000101_640_C_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_C_07','20210415','TESTCORP','72','002','净资产合计不能为空','净资产合计不能为空','非空校验','人民银行','C_TOTAL_NET_ASSETS','净资产合计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_C_07','20210415','TESTCORP','72','002','MBT_PM_640_C','I0000101_640_C_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_640_C_08','20210415','TESTCORP','72','002','负债和净资产总计不能为空','负债和净资产总计不能为空','非空校验','人民银行','C_TOTAL_LIABILITIES_NET_ASSETS','负债和净资产总计','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_640_C_08','20210415','TESTCORP','72','002','MBT_PM_640_C','I0000101_640_C_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_B_00','20210415','TESTCORP','72','002','信息记录类型不能为空','信息记录类型不能为空','非空校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_B_00','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000101_650_B_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_B_01','20210415','TESTCORP','72','002','企业名称不能为空','企业名称不能为空','非空校验','人民银行','B_ENT_NAME','企业名称','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_B_01','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000101_650_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_B_02','20210415','TESTCORP','72','002','企业身份标识类型不能为空','企业身份标识类型不能为空','非空校验','人民银行','B_ENT_CERT_TYPE','企业身份标识类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_B_02','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000101_650_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_B_03','20210415','TESTCORP','72','002','企业身份标识号码不能为空','企业身份标识号码不能为空','非空校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_B_03','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000101_650_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_B_04','20210415','TESTCORP','72','002','信息报告日期不能为空','信息报告日期不能为空','非空校验','人民银行','B_RPT_DATE','信息报告日期','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_B_04','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000101_650_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_B_05','20210415','TESTCORP','72','002','报表年份不能为空','报表年份不能为空','非空校验','人民银行','B_SHEET_YEAR','报表年份','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_B_05','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000101_650_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_B_06','20210415','TESTCORP','72','002','报表类型不能为空','报表类型不能为空','非空校验','人民银行','B_SHEET_TYPE','报表类型','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_B_06','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000101_650_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_B_07','20210415','TESTCORP','72','002','报表类型细分不能为空','报表类型细分不能为空','非空校验','人民银行','B_SHEET_TYPE_DIVIDE','报表类型细分','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_B_07','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000101_650_B_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_B_08','20210415','TESTCORP','72','002','客户资料维护机构代码不能为空','客户资料维护机构代码不能为空','非空校验','人民银行','B_CIMOC','客户资料维护机构代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_B_08','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000101_650_B_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_B_09','20210415','TESTCORP','72','002','报告时点说明代码不能为空','报告时点说明代码不能为空','非空校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_B_09','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000101_650_B_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_C_01','20210415','TESTCORP','72','002','本期财政补助结转结余不能为空','本期财政补助结转结余不能为空','非空校验','人民银行','C_CURRENT_FINAN_SUB_CAR_OVER_B','本期财政补助结转结余','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_C_01','20210415','TESTCORP','72','002','MBT_PM_650_C','I0000101_650_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_C_02','20210415','TESTCORP','72','002','本期事业结转结余不能为空','本期事业结转结余不能为空','非空校验','人民银行','C_CURRENT_UNDERTAK_CAR_OVER_B','本期事业结转结余','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_C_02','20210415','TESTCORP','72','002','MBT_PM_650_C','I0000101_650_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_C_03','20210415','TESTCORP','72','002','本期经营结余不能为空','本期经营结余不能为空','非空校验','人民银行','C_CURRENT_OPERATING_BALANCE','本期经营结余','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_C_03','20210415','TESTCORP','72','002','MBT_PM_650_C','I0000101_650_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_C_04','20210415','TESTCORP','72','002','弥补以前年度亏损后的经营结余不能为空','弥补以前年度亏损后的经营结余不能为空','非空校验','人民银行','C_OPERATING_BALANCE_P_YO_LOSS','弥补以前年度亏损后的经营结余','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_C_04','20210415','TESTCORP','72','002','MBT_PM_650_C','I0000101_650_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_C_05','20210415','TESTCORP','72','002','本年非财政补助结转结余不能为空','本年非财政补助结转结余不能为空','非空校验','人民银行','C_NON_FINA_SUB_CAR_O_BAL_TYEAR','本年非财政补助结转结余','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_C_05','20210415','TESTCORP','72','002','MBT_PM_650_C','I0000101_650_C_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_C_06','20210415','TESTCORP','72','002','本年非财政补助结余不能为空','本年非财政补助结余不能为空','非空校验','人民银行','C_NON_FINANCIAL_AID_BAL_TYEAR','本年非财政补助结余','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_C_06','20210415','TESTCORP','72','002','MBT_PM_650_C','I0000101_650_C_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,script,rsv2,DATA_CRT_USER)values('I0000101_650_C_07','20210415','TESTCORP','72','002','转入事业基金不能为空','转入事业基金不能为空','非空校验','人民银行','C_PUBLIC_FUND_TURNED_INTO','转入事业基金','R','N','if (isEmpty($value)) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000101_650_C_07','20210415','TESTCORP','72','002','MBT_PM_650_C','I0000101_650_C_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_210_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_210_B_01','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000601_210_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_21X_C_01','20210415','TESTCORP','72','002','开户日期须满足日期格式YYYYMMDD','开户日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','C_OPEN_DATE','开户日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_21X_C_01','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000601_21X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_212_C_01','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000601_21X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_21X_C_02','20210415','TESTCORP','72','002','到期日期须满足日期格式YYYYMMDD','到期日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','C_DUE_DATE','到期日期','R','Y','DATE','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''C1'') {
    if (!isEmpty($value) && !$value.matches("[12][0-9]{3}(0[0-9]|1[012])([0-2][0-9]|3[01])")) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_21X_C_02','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000601_21X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_212_C_02','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000601_21X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_21X_H_01','20210415','TESTCORP','72','002','五级分类认定日期须满足日期格式YYYYMMDD','五级分类认定日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','H_FIVE_CATE_ADJ_DATE','五级分类认定日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000601_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000601_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_21X_H_02','20210415','TESTCORP','72','002','最近一次实际还款日期须满足日期格式YYYYMMDD','最近一次实际还款日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','H_LAT_RPY_DATE','最近一次实际还款日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_21X_H_02','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000601_21X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_212_H_02','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000601_21X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_21X_H_03','20210415','TESTCORP','72','002','账户关闭日期须满足日期格式YYYYMMDD','账户关闭日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_21X_H_03','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000601_21X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_212_H_03','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000601_21X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_21X_I_01','20210415','TESTCORP','72','002','分期额度生效日期须满足日期格式YYYYMMDD','分期额度生效日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','I_SPEC_EFCT_DATE','分期额度生效日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_21X_I_01','20210415','TESTCORP','72','002','MBT_PM_210_I','I0000601_21X_I_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_212_I_01','20210415','TESTCORP','72','002','MBT_PM_212_I','I0000601_21X_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_21X_I_02','20210415','TESTCORP','72','002','分期额度到期日期须满足日期格式YYYYMMDD','分期额度到期日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','I_SPEC_END_DATE','分期额度到期日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_21X_I_02','20210415','TESTCORP','72','002','MBT_PM_210_I','I0000601_21X_I_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_212_I_02','20210415','TESTCORP','72','002','MBT_PM_212_I','I0000601_21X_I_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_21X_J_01','20210415','TESTCORP','72','002','五级分类认定日期须满足日期格式YYYYMMDD','五级分类认定日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','J_FIVE_CATE_ADJ_DATE','五级分类认定日期','R','Y','DATE','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''C1'') {
    if (!isEmpty($value) && !$value.matches("[12][0-9]{3}(0[0-9]|1[012])([0-2][0-9]|3[01])")) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_21X_J_01','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000601_21X_J_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_212_J_01','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000601_21X_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_21X_J_02','20210415','TESTCORP','72','002','最近一次实际还款日期须满足日期格式YYYYMMDD','最近一次实际还款日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','J_LAT_RPY_DATE','最近一次实际还款日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_21X_J_02','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000601_21X_J_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_212_J_02','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000601_21X_J_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_21X_J_03','20210415','TESTCORP','72','002','账户关闭日期须满足日期格式YYYYMMDD','账户关闭日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','J_CLOSE_DATE','账户关闭日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_21X_J_03','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000601_21X_J_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_212_J_03','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000601_21X_J_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_21X_K_01','20210415','TESTCORP','72','002','交易日期须满足日期格式YYYYMMDD','交易日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','K_TRAN_DATE','交易日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_21X_K_01','20210415','TESTCORP','72','002','MBT_PM_210_K','I0000601_21X_K_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_212_K_01','20210415','TESTCORP','72','002','MBT_PM_212_K','I0000601_21X_K_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_510_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_510_B_01','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000601_510_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_510_C_01','20210415','TESTCORP','72','002','抵（质）押合同生效日期须满足日期格式YYYYMMDD','抵（质）押合同生效日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','C_CC_VAL_DATE','抵（质）押合同生效日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_510_C_01','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000601_510_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_510_C_02','20210415','TESTCORP','72','002','抵（质）押合同到期日期须满足日期格式YYYYMMDD','抵（质）押合同到期日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','C_CC_EXP_DATE','抵（质）押合同到期日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_510_C_02','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000601_510_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_510_E_01','20210415','TESTCORP','72','002','抵押物评估日期须满足日期格式YYYYMMDD','抵押物评估日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','E_VAL_DATE','抵押物评估日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_510_E_01','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000601_510_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_215_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_215_B_01','20210415','TESTCORP','72','002','MBT_PM_215_B','I0000601_215_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_220_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_220_B_01','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000601_220_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_22X_D_01','20210415','TESTCORP','72','002','额度生效日期须满足日期格式YYYYMMDD','额度生效日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','D_CON_EFF_DATE','额度生效日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_22X_D_01','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000601_22X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_222_D_01','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000601_22X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_22X_D_02','20210415','TESTCORP','72','002','额度到期日期须满足日期格式YYYYMMDD','额度到期日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','D_CON_EXP_DATE','额度到期日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_22X_D_02','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000601_22X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_222_D_02','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000601_22X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_120_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_120_B_01','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000601_120_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_130_B_01','20210415','TESTCORP','72','002','证件有效期起始日期须满足日期格式YYYYMMDD','证件有效期起始日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','ID_EFCT_DATE','证件有效期起始日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_130_B_01','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000601_130_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_130_B_02','20210415','TESTCORP','72','002','证件有效期终止日期须满足日期格式YYYYMMDD','证件有效期终止日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','ID_DUE_DATE','证件有效期终止日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_130_B_02','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000601_130_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_130_B_03','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_130_B_03','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000601_130_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_110_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_110_B_01','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000601_110_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_110_D_01','20210415','TESTCORP','72','002','出生日期须满足日期格式YYYYMMDD','出生日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','D_DOB','出生日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_110_D_01','20210415','TESTCORP','72','002','MBT_PM_110_D','I0000601_110_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_310_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_310_B_01','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000601_310_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_310_C_01','20210415','TESTCORP','72','002','信息更新日期须满足日期格式YYYYMMDD','信息更新日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','ID_INFO_UP_DATE','信息更新日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_310_C_01','20210415','TESTCORP','72','002','MBT_PM_310_C','I0000601_310_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_310_D_01','20210415','TESTCORP','72','002','成立日期须满足日期格式YYYYMMDD','成立日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','D_ESTABLISH_DATE','成立日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_310_D_01','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000601_310_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_310_D_02','20210415','TESTCORP','72','002','营业许可证到期日须满足日期格式YYYYMMDD','营业许可证到期日须满足日期格式YYYYMMDD','日期格式校验','人民银行','D_BIZ_END_DATE','营业许可证到期日','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_310_D_02','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000601_310_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_310_D_03','20210415','TESTCORP','72','002','信息更新日期须满足日期格式YYYYMMDD','信息更新日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','D_FCS_INFO_UP_DATE','信息更新日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_310_D_03','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000601_310_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_310_E_01','20210415','TESTCORP','72','002','信息更新日期须满足日期格式YYYYMMDD','信息更新日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','MN_MMB_INFO_UP_DATE','信息更新日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_310_E_01','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000601_310_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_310_F_01','20210415','TESTCORP','72','002','信息更新日期须满足日期格式YYYYMMDD','信息更新日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','F_MN_SHA_HOD_INFO_DATE','信息更新日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_310_F_01','20210415','TESTCORP','72','002','MBT_PM_310_F','I0000601_310_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_310_G_01','20210415','TESTCORP','72','002','信息更新日期须满足日期格式YYYYMMDD','信息更新日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','ACTU_COTRL_INFO_UP_DATE','信息更新日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_310_G_01','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000601_310_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_310_H_01','20210415','TESTCORP','72','002','信息更新日期须满足日期格式YYYYMMDD','信息更新日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','H_SUP_ORG_INFO_UP_DATE','信息更新日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_310_H_01','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000601_310_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_310_I_01','20210415','TESTCORP','72','002','信息更新日期须满足日期格式YYYYMMDD','信息更新日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','I_COTA_INFO_UP_DATE','信息更新日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_310_I_01','20210415','TESTCORP','72','002','MBT_PM_310_I','I0000601_310_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_350_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_350_B_01','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000601_350_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_41X_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_41X_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000601_41X_B_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_412_B_01','20210415','TESTCORP','72','002','MBT_PM_412_B','I0000601_41X_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_41X_C_01','20210415','TESTCORP','72','002','开户日期须满足日期格式YYYYMMDD','开户日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','C_OPEN_DATE','开户日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_41X_C_01','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000601_41X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_412_C_01','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000601_41X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_41X_C_02','20210415','TESTCORP','72','002','到期日期须满足日期格式YYYYMMDD','到期日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','C_DUE_DATE','到期日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_41X_C_02','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000601_41X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_412_C_02','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000601_41X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_41X_H_01','20210415','TESTCORP','72','002','余额变化日期须满足日期格式YYYYMMDD','余额变化日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','H_BAL_CHG_DATE','余额变化日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000601_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000601_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_41X_H_02','20210415','TESTCORP','72','002','五级分类认定日期须满足日期格式YYYYMMDD','五级分类认定日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','H_FIVE_CATE_ADJ_DATE','五级分类认定日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_41X_H_02','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000601_41X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_412_H_02','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000601_41X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_41X_H_03','20210415','TESTCORP','72','002','最近一次实际还款日期须满足日期格式YYYYMMDD','最近一次实际还款日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','H_LAT_RPY_DATE','最近一次实际还款日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_41X_H_03','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000601_41X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_412_H_03','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000601_41X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_41X_H_04','20210415','TESTCORP','72','002','最近一次约定还款日须满足日期格式YYYYMMDD','最近一次约定还款日须满足日期格式YYYYMMDD','日期格式校验','人民银行','H_LAT_AGRR_RPY_DATE','最近一次约定还款日','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_41X_H_04','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000601_41X_H_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_412_H_04','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000601_41X_H_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_41X_H_05','20210415','TESTCORP','72','002','下一次约定还款日期须满足日期格式YYYYMMDD','下一次约定还款日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','H_NXT_AGRR_RPY_DATE','下一次约定还款日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_41X_H_05','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000601_41X_H_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_412_H_05','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000601_41X_H_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_41X_H_06','20210415','TESTCORP','72','002','账户关闭日期须满足日期格式YYYYMMDD','账户关闭日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_41X_H_06','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000601_41X_H_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_412_H_06','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000601_41X_H_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_41X_I_01','20210415','TESTCORP','72','002','交易日期须满足日期格式YYYYMMDD','交易日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','I_TRAN_DATE','交易日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_41X_I_01','20210415','TESTCORP','72','002','MBT_PM_410_I','I0000601_41X_I_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_412_I_01','20210415','TESTCORP','72','002','MBT_PM_412_I','I0000601_41X_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_42X_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_42X_B_01','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000601_42X_B_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_422_B_01','20210415','TESTCORP','72','002','MBT_PM_422_B','I0000601_42X_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_42X_D_01','20210415','TESTCORP','72','002','额度生效日期须满足日期格式YYYYMMDD','额度生效日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','D_CON_EFF_DATE','额度生效日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_42X_D_01','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000601_42X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_422_D_01','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000601_42X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_42X_D_02','20210415','TESTCORP','72','002','额度到期日期须满足日期格式YYYYMMDD','额度到期日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','D_CON_EXP_DATE','额度到期日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_42X_D_02','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000601_42X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_422_D_02','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000601_42X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_44X_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_44X_B_01','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000601_44X_B_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_442_B_01','20210415','TESTCORP','72','002','MBT_PM_442_B','I0000601_44X_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_44X_C_01','20210415','TESTCORP','72','002','到期日期须满足日期格式YYYYMMDD','到期日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','C_DUE_DATE','到期日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_44X_C_01','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000601_44X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_442_C_01','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000601_44X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_44X_D_01','20210415','TESTCORP','72','002','余额变化日期须满足日期格式YYYYMMDD','余额变化日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','D_REPAY_PRD','余额变化日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_44X_D_01','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000601_44X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_442_D_01','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000601_44X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_44X_D_02','20210415','TESTCORP','72','002','五级分类认定日期须满足日期格式YYYYMMDD','五级分类认定日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','D_FIVE_CATE_ADJ_DATE','五级分类认定日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_44X_D_02','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000601_44X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_442_D_02','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000601_44X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_44X_D_03','20210415','TESTCORP','72','002','账户关闭日期须满足日期格式YYYYMMDD','账户关闭日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','D_CLOSE_DATE','账户关闭日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_44X_D_03','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000601_44X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_442_D_03','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000601_44X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_610_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_610_B_01','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000601_610_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_610_B_02','20210415','TESTCORP','72','002','审计时间须满足日期格式YYYYMMDD','审计时间须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_AUDIT_TIME','审计时间','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_610_B_02','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000601_610_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_620_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_620_B_01','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000601_620_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_620_B_02','20210415','TESTCORP','72','002','审计时间须满足日期格式YYYYMMDD','审计时间须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_AUDIT_TIME','审计时间','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_620_B_02','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000601_620_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_630_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_630_B_01','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000601_630_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_630_B_02','20210415','TESTCORP','72','002','审计时间须满足日期格式YYYYMMDD','审计时间须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_AUDIT_TIME','审计时间','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_630_B_02','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000601_630_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_640_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_640_B_01','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000601_640_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_640_B_02','20210415','TESTCORP','72','002','审计时间须满足日期格式YYYYMMDD','审计时间须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_AUDIT_TIME','审计时间','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_640_B_02','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000601_640_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_650_B_01','20210415','TESTCORP','72','002','信息报告日期须满足日期格式YYYYMMDD','信息报告日期须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_650_B_01','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000601_650_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_650_B_02','20210415','TESTCORP','72','002','审计时间须满足日期格式YYYYMMDD','审计时间须满足日期格式YYYYMMDD','日期格式校验','人民银行','B_AUDIT_TIME','审计时间','R','Y','DATE','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_650_B_02','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000601_650_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_21X_H_30','20210415','TESTCORP','72','002','月份须满足月份格式YYYYMM','月份须满足月份格式YYYYMM','月份格式校验','人民银行','H_MONTH','月份','R','Y','','if (!isEmpty($value) && !$value.matches("[12][0-9]{3}(0[0-9]|1[012])")) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_21X_H_30','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000601_21X_H_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_212_H_30','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000601_21X_H_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,type_id, script,rsv2,DATA_CRT_USER)values('I0000601_215_B_30','20210415','TESTCORP','72','002','发生月份须满足月份格式YYYYMM','发生月份须满足月份格式YYYYMM','月份格式校验','人民银行','MONTH','发生月份','R','Y','','if (!isEmpty($value) && !$value.matches("[12][0-9]{3}(0[0-9]|1[012])")) {
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000601_215_B_30','20210415','TESTCORP','72','002','MBT_PM_215_B','I0000601_215_B_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_210_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“210-个人借贷账户信息记录”','信息记录类型必须填写“210-个人借贷账户信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','210','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_210_B_01','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000201_210_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_210_B_02','20210319','TESTCORP','72','002','账户类型值不在数据字典范围内','账户类型值不在数据字典范围内','值域校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','','','D1,R1,R2,R3,R4,C1','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_210_B_02','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000201_210_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_210_B_03','20210319','TESTCORP','72','002','报告时点说明代码值不在数据字典范围内','报告时点说明代码值不在数据字典范围内','值域校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','','','10,20,30,31,32,40,88,99','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_210_B_03','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000201_210_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_B_04','20210319','TESTCORP','72','002','借款人证件类型值不在数据字典范围内','借款人证件类型值不在数据字典范围内','值域校验','人民银行','B_ID_TYPE','借款人证件类型','R','Y','','','1,2,5,6,8,9,A,B,C,X,10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_B_04','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000201_21X_B_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_B_04','20210415','TESTCORP','72','002','MBT_PM_212_B','I0000201_21X_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_C_01','20210319','TESTCORP','72','002','借贷业务大类值不在数据字典范围内','借贷业务大类值不在数据字典范围内','值域校验','人民银行','C_BUSI_LINES','借贷业务大类','R','Y','','','1,2,3,4,5,6','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_C_01','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000201_21X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_C_01','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000201_21X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I2100C04_21X_C_01','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“1-贷款”，则“借贷业务种类细分”必须与贷款相匹配。','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“1-贷款”，则“借贷业务种类细分”必须与贷款相匹配。','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''1'') {
    if (!$value in [''11'',''12'',''13'',''21'',''32'',''33'',''41'',''42'',''52'',''53'',''91'',''99'',''31'',''51'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C04_21X_C_01','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100C04_21X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C04_212_C_01','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100C04_21X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I2100C04_21X_C_02','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“2-信用卡”，则“借贷业务种类细分”必须与信用卡相匹配。','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“2-信用卡”，则“借贷业务种类细分”必须与信用卡相匹配。','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''2'') {
    if (!$value in [''71'',''81'',''82'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C04_21X_C_02','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100C04_21X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C04_212_C_02','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100C04_21X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I2100C04_21X_C_03','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“3-证券类融资”，则“借贷业务种类细分”必须与证券类融资相匹配。','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“3-证券类融资”，则“借贷业务种类细分”必须与证券类融资相匹配。','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''3'') {
    if (!$value in [''61'',''62'',''63'',''64'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C04_21X_C_03','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100C04_21X_C_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C04_212_C_03','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100C04_21X_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I2100C04_21X_C_04','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“4-融资租赁”，则“借贷业务种类细分”必须为“92-融资租赁业务”','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“4-融资租赁”，则“借贷业务种类细分”必须为“92-融资租赁业务”','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''4'') {
    if (!$value in [''92'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C04_21X_C_04','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100C04_21X_C_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C04_212_C_04','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100C04_21X_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I2100C04_21X_C_05','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“5-资产处置”，则“借贷业务种类细分”必须为“A1-由资产处置机构处置的债务”','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“5-资产处置”，则“借贷业务种类细分”必须为“A1-由资产处置机构处置的债务”','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''5'') {
    if (!$value in [''A1'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C04_21X_C_05','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100C04_21X_C_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C04_212_C_05','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100C04_21X_C_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I2100C04_21X_C_06','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“6-垫款”，则“借贷业务种类细分”必须为“B1-因代偿继承债权的债务”','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“6-垫款”，则“借贷业务种类细分”必须为“B1-因代偿继承债权的债务”','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''6'') {
    if (!$value in [''B1'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C04_21X_C_06','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100C04_21X_C_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C04_212_C_06','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100C04_21X_C_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_C_07','20210319','TESTCORP','72','002','币种值不在数据字典范围内','币种值不在数据字典范围内','值域校验','人民银行','C_CY','币种','R','Y','GP_BM_DATA_DIC','19243','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_C_07','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000201_21X_C_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_C_07','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000201_21X_C_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_C_08','20210319','TESTCORP','72','002','账户类型=‘D1‘，分次放款标志值不在数据字典范围内[1-2-0]','账户类型=‘D1‘，分次放款标志值不在数据字典范围内[1-2-0]','值域校验','人民银行','C_FLAG','分次放款标志','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE==''D1'') {
    if (!$value in [''1'',''2'',''0'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_C_08','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000201_21X_C_08','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_C_08','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000201_21X_C_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_C_09','20210319','TESTCORP','72','002','账户类型 in (‘D1‘,‘R1‘,‘R4‘)，还款频率值不在数据字典范围内[01-02-03-04-05-06-07-08-12-13-14-99]','账户类型 in (‘D1‘,‘R1‘,‘R4‘)，还款频率值不在数据字典范围内[01-02-03-04-05-06-07-08-12-13-14-99]','值域校验','人民银行','C_REPAY_FREQCY','还款频率','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''D1'',''R1'',''R4'']) {
    if (!$value in [''01'',''02'',''03'',''04'',''05'',''06'',''07'',''08'',''12'',''13'',''14'',''99'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_C_09','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000201_21X_C_09','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_C_09','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000201_21X_C_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_C_10','20210319','TESTCORP','72','002','业务申请地行政区划代码值不在数据字典范围内','业务申请地行政区划代码值不在数据字典范围内','值域校验','人民银行','C_APPLY_BUSI_DIST','业务申请地行政区划代码','R','Y','GP_BM_DATA_DIC','19242','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_C_10','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000201_21X_C_10','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_C_10','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000201_21X_C_10','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_C_11','20210319','TESTCORP','72','002','担保方式值不在数据字典范围内','担保方式值不在数据字典范围内','值域校验','人民银行','C_GUAR_MODE','担保方式','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''C1'') {
    if (!$value in [''1'',''2'',''3'',''4'',''5'',''6'',''7'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_C_11','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000201_21X_C_11','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_C_11','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000201_21X_C_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_C_12','20210319','TESTCORP','72','002','其他还款保证方式值不在数据字典范围内','其他还款保证方式值不在数据字典范围内','值域校验','人民银行','C_OTH_REPY_GUAR_WAY','其他还款保证方式','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''C1'') {
    if (!$value in [''1'',''9'',''0'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_C_12','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000201_21X_C_12','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_C_12','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000201_21X_C_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_C_13','20210319','TESTCORP','72','002','资产转让标志值不在数据字典范围内','资产转让标志值不在数据字典范围内','值域校验','人民银行','C_ASSET_TRAND_FLAG','资产转让标志','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''C1'') {
    if (!$value in [''1'',''0'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_C_13','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000201_21X_C_13','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_C_13','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000201_21X_C_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_C_14','20210319','TESTCORP','72','002','业务经营类型值不在数据字典范围内','业务经营类型值不在数据字典范围内','值域校验','人民银行','C_FUND_SOU','业务经营类型','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''C1'') {
    if (!$value in [''1'',''2'',''21'',''22'',''23'',''24'',''4'',''8'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_C_14','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000201_21X_C_14','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_C_14','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000201_21X_C_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_C_15','20210319','TESTCORP','72','002','贷款发放形式值不在数据字典范围内','贷款发放形式值不在数据字典范围内','值域校验','人民银行','C_LOAN_FORM','贷款发放形式','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''C1'') {
    if (!$value in [''1'',''5'',''9'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_C_15','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000201_21X_C_15','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_C_15','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000201_21X_C_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_C_16','20210319','TESTCORP','72','002','账户类型=‘D1‘ and 借贷业务种类细分=‘11‘，是否为首套住房贷款值不在数据字典范围内[01-02-03-04]','账户类型=‘D1‘ and 借贷业务种类细分=‘11‘，是否为首套住房贷款值不在数据字典范围内[01-02-03-04]','值域校验','人民银行','C_FIRST_HOU_LOAN_FLAG','是否为首套住房贷款','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && !isEmpty(C_BUSI_DTL_LINES) && B_ACCT_TYPE==''D1''  &&  C_BUSI_DTL_LINES==''11'') {
    if (!$value in [''01'',''02'',''03'',''04'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_C_16','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000201_21X_C_16','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_C_16','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000201_21X_C_16','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I2100D02_21X_D_01','20210319','TESTCORP','72','002','“身份类别”和“责任人身份标识类型”的代码必须匹配：当“身份类别”为“2-组织机构”时，“责任人身份标识类型”只能选择“10-中征码（原贷款卡编码）”、“20-统一社会信用代码”、“30-组织机构代码”。','“身份类别”和“责任人身份标识类型”的代码必须匹配：当“身份类别”为“2-组织机构”时，“责任人身份标识类型”只能选择“10-中征码（原贷款卡编码）”、“20-统一社会信用代码”、“30-组织机构代码”。','值域校验','人民银行','D_ARLP_CERT_TYPE','责任人身份标识类型','R','Y','','','','if (!isEmpty(D_ARLP_ID_TYPE) && D_ARLP_ID_TYPE==''2'') {
    if (!$value in [''10'',''20'',''30'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D02_21X_D_01','20210415','TESTCORP','72','002','MBT_PM_210_D','I2100D02_21X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D02_212_D_01','20210415','TESTCORP','72','002','MBT_PM_212_D','I2100D02_21X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I2100D02_21X_D_02','20210319','TESTCORP','72','002','身份类别=‘1‘，责任人身份标识类型值不在数据字典范围内[1-2-5-6-8-9-A-B-C-X-10-20]','身份类别=‘1‘，责任人身份标识类型值不在数据字典范围内[1-2-5-6-8-9-A-B-C-X-10-20]','值域校验','人民银行','D_ARLP_CERT_TYPE','责任人身份标识类型','R','Y','','','','if (!isEmpty(D_ARLP_ID_TYPE) && D_ARLP_ID_TYPE==''1'') {
    if (!$value in [''1'',''2'',''5'',''6'',''8'',''9'',''A'',''B'',''C'',''X'',''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D02_21X_D_02','20210415','TESTCORP','72','002','MBT_PM_210_D','I2100D02_21X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100D02_212_D_02','20210415','TESTCORP','72','002','MBT_PM_212_D','I2100D02_21X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I2100A05_21X_C_01','20210319','TESTCORP','72','002','账户类型=‘D1‘，还款方式值不在数据字典范围内[11-12-13-14-15-19-21-22-23-29-90]','账户类型=‘D1‘，还款方式值不在数据字典范围内[11-12-13-14-15-19-21-22-23-29-90]','值域校验','人民银行','C_REPAY_MODE','还款方式','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE==''D1'') {
    if (!$value in [''11'',''12'',''13'',''14'',''15'',''19'',''21'',''22'',''23'',''29'',''90'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A05_21X_C_01','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100A05_21X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A05_212_C_01','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100A05_21X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I2100A05_21X_C_02','20210319','TESTCORP','72','002','账户类型=‘R1‘，还款方式值不在数据字典范围内[31-32-33-39-90]','账户类型=‘R1‘，还款方式值不在数据字典范围内[31-32-33-39-90]','值域校验','人民银行','C_REPAY_MODE','还款方式','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE==''R1'') {
    if (!$value in [''31'',''32'',''33'',''39'',''90'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A05_21X_C_02','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100A05_21X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A05_212_C_02','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100A05_21X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I2100A05_21X_C_03','20210319','TESTCORP','72','002','账户类型=‘R4‘，还款方式值不在数据字典范围内[11-12-13-14-15-19-21-22-23-29]','账户类型=‘R4‘，还款方式值不在数据字典范围内[11-12-13-14-15-19-21-22-23-29]','值域校验','人民银行','C_REPAY_MODE','还款方式','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE==''R4'') {
    if (!$value in [''11'',''12'',''13'',''14'',''15'',''19'',''21'',''22'',''23'',''29'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A05_21X_C_03','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100A05_21X_C_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A05_212_C_03','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100A05_21X_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_D_01','20210319','TESTCORP','72','002','身份类别值不在数据字典范围内','身份类别值不在数据字典范围内','值域校验','人民银行','D_ARLP_ID_TYPE','身份类别','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_D_01','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000201_21X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_D_01','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000201_21X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_D_02','20210319','TESTCORP','72','002','还款责任人类型值不在数据字典范围内','还款责任人类型值不在数据字典范围内','值域校验','人民银行','D_ARLP_TYPE','还款责任人类型','R','Y','','','1,2,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_D_02','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000201_21X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_D_02','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000201_21X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_D_03','20210319','TESTCORP','72','002','还款责任人类型=‘2‘，联保标志值不在数据字典范围内[1-0]','还款责任人类型=‘2‘，联保标志值不在数据字典范围内[1-0]','值域校验','人民银行','D_WARTY_SIGN','联保标志','R','Y','','','','if (!isEmpty(D_ARLP_TYPE) && D_ARLP_TYPE==''2'') {
    if (!$value in [''1'',''0'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_D_03','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000201_21X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_D_03','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000201_21X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_G_01','20210319','TESTCORP','72','002','原债务种类值不在数据字典范围内','原债务种类值不在数据字典范围内','值域校验','人民银行','G_ORIG_DBT_CATE','原债务种类','R','Y','','','1,2,3,4,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_G_01','20210415','TESTCORP','72','002','MBT_PM_210_G','I0000201_21X_G_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_G_01','20210415','TESTCORP','72','002','MBT_PM_212_G','I0000201_21X_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_G_02','20210319','TESTCORP','72','002','债权转移时的还款状态值不在数据字典范围内','债权转移时的还款状态值不在数据字典范围内','值域校验','人民银行','G_INIT_RPY_STS','债权转移时的还款状态','R','Y','','','1,2,3,4,5,6,7,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_G_02','20210415','TESTCORP','72','002','MBT_PM_210_G','I0000201_21X_G_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_G_02','20210415','TESTCORP','72','002','MBT_PM_212_G','I0000201_21X_G_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_H_01','20210319','TESTCORP','72','002','账户类型 in (‘D1‘,‘R4‘)，账户状态值不在数据字典范围内[1-2-3-41-42-6-8]','账户类型 in (‘D1‘,‘R4‘)，账户状态值不在数据字典范围内[1-2-3-41-42-6-8]','值域校验','人民银行','H_ACCT_STATUS','账户状态','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''D1'',''R4'']) {
    if (!$value in [''1'',''2'',''3'',''41'',''42'',''6'',''8'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000201_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000201_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_H_02','20210319','TESTCORP','72','002','账户类型=‘R1‘，账户状态值不在数据字典范围内[1-2-3-41-42-5-6-8]','账户类型=‘R1‘，账户状态值不在数据字典范围内[1-2-3-41-42-5-6-8]','值域校验','人民银行','H_ACCT_STATUS','账户状态','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE==''R1'') {
    if (!$value in [''1'',''2'',''3'',''41'',''42'',''5'',''6'',''8'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_H_02','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000201_21X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_H_02','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000201_21X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_H_03','20210319','TESTCORP','72','002','账户类型 in (‘R2‘,‘R3‘)，账户状态值不在数据字典范围内[1-31-4-51-52-6-8]','账户类型 in (‘R2‘,‘R3‘)，账户状态值不在数据字典范围内[1-31-4-51-52-6-8]','值域校验','人民银行','H_ACCT_STATUS','账户状态','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R2'',''R3'']) {
    if (!$value in [''1'',''31'',''4'',''51'',''52'',''6'',''8'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_H_03','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000201_21X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_H_03','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000201_21X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_H_04','20210319','TESTCORP','72','002','五级分类值不在数据字典范围内','五级分类值不在数据字典范围内','值域校验','人民银行','H_FIVE_CATE','五级分类','R','Y','','','1,2,3,4,5,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_H_04','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000201_21X_H_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_H_04','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000201_21X_H_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_H_05','20210319','TESTCORP','72','002','账户类型 in (‘D1‘,‘R4‘,‘R1‘)，当前还款状态值不在数据字典范围内[*-N-D-Z-M-1-2-3-4-5-6-7-B-C-G-#]','账户类型 in (‘D1‘,‘R4‘,‘R1‘)，当前还款状态值不在数据字典范围内[*-N-D-Z-M-1-2-3-4-5-6-7-B-C-G-#]','值域校验','人民银行','H_RPY_STATUS','当前还款状态','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''D1'',''R4'',''R1'']) {
    if (!$value in [''*'',''N'',''D'',''Z'',''M'',''1'',''2'',''3'',''4'',''5'',''6'',''7'',''B'',''C'',''G'',''#'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_H_05','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000201_21X_H_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_H_05','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000201_21X_H_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_H_06','20210319','TESTCORP','72','002','账户类型 in (‘R2‘,‘R3‘)，当前还款状态值不在数据字典范围内[*-N-1-2-3-4-5-6-7-B-C-G-#]','账户类型 in (‘R2‘,‘R3‘)，当前还款状态值不在数据字典范围内[*-N-1-2-3-4-5-6-7-B-C-G-#]','值域校验','人民银行','H_RPY_STATUS','当前还款状态','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R2'',''R3'']) {
    if (!$value in [''*'',''N'',''1'',''2'',''3'',''4'',''5'',''6'',''7'',''B'',''C'',''G'',''#'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_H_06','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000201_21X_H_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_H_06','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000201_21X_H_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_J_01','20210319','TESTCORP','72','002','账户类型 in (‘D1‘,‘R4‘)，账户状态值不在数据字典范围内[1-2-41-42-6-8]','账户类型 in (‘D1‘,‘R4‘)，账户状态值不在数据字典范围内[1-2-41-42-6-8]','值域校验','人民银行','J_ACCT_STATUS','账户状态','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''D1'',''R4'']) {
    if (!$value in [''1'',''2'',''41'',''42'',''6'',''8'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_J_01','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000201_21X_J_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_J_01','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000201_21X_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_J_02','20210319','TESTCORP','72','002','账户类型=‘R1‘，账户状态值不在数据字典范围内[1-2-41-42-5-6-8]','账户类型=‘R1‘，账户状态值不在数据字典范围内[1-2-41-42-5-6-8]','值域校验','人民银行','J_ACCT_STATUS','账户状态','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE==''R1'') {
    if (!$value in [''1'',''2'',''41'',''42'',''5'',''6'',''8'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_J_02','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000201_21X_J_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_J_02','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000201_21X_J_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_J_03','20210319','TESTCORP','72','002','账户类型 in (‘R2‘,‘R3‘)，账户状态值不在数据字典范围内[1-31-51-52-6-8]','账户类型 in (‘R2‘,‘R3‘)，账户状态值不在数据字典范围内[1-31-51-52-6-8]','值域校验','人民银行','J_ACCT_STATUS','账户状态','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R2'',''R3'']) {
    if (!$value in [''1'',''31'',''51'',''52'',''6'',''8'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_J_03','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000201_21X_J_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_J_03','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000201_21X_J_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_J_04','20210319','TESTCORP','72','002','账户类型=‘C1‘，账户状态值不在数据字典范围内[1-2]','账户类型=‘C1‘，账户状态值不在数据字典范围内[1-2]','值域校验','人民银行','J_ACCT_STATUS','账户状态','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE==''C1'') {
    if (!$value in [''1'',''2'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_J_04','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000201_21X_J_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_J_04','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000201_21X_J_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_J_05','20210319','TESTCORP','72','002','五级分类值不在数据字典范围内[1-2-3-4-5-9]','五级分类值不在数据字典范围内[1-2-3-4-5-9]','值域校验','人民银行','J_FIVE_CATE','五级分类','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''C1'') {
    if (!$value in [''1'',''2'',''3'',''4'',''5'',''9'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_J_05','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000201_21X_J_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_J_05','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000201_21X_J_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_J_06','20210319','TESTCORP','72','002','当前还款状态值不在数据字典范围内[N]','当前还款状态值不在数据字典范围内[N]','值域校验','人民银行','J_RPY_STATUS','当前还款状态','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''C1'') {
    if (!$value in [''N'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_J_06','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000201_21X_J_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_J_06','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000201_21X_J_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_21X_K_01','20210319','TESTCORP','72','002','交易类型值不在数据字典范围内[1-2-3-4-5-8-11-12-13-14-15-16-17]','交易类型值不在数据字典范围内[1-2-3-4-5-8-11-12-13-14-15-16-17]','值域校验','人民银行','K_CHAN_TRAN_TYPE','交易类型','R','Y','','','1,2,3,4,5,8,11,12,13,14,15,16,17','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_K_01','20210415','TESTCORP','72','002','MBT_PM_210_K','I0000201_21X_K_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_K_01','20210415','TESTCORP','72','002','MBT_PM_212_K','I0000201_21X_K_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“510-抵（质）押合同信息记录”','信息记录类型必须填写“510-抵（质）押合同信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','510','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_B_01','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000201_510_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_B_02','20210319','TESTCORP','72','002','报告时点说明代码值不在数据字典范围内','报告时点说明代码值不在数据字典范围内','值域校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','','','10,20,30,88,99','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_B_02','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000201_510_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_B_03','20210319','TESTCORP','72','002','债务人身份类别值不在数据字典范围内','债务人身份类别值不在数据字典范围内','值域校验','人民银行','B_INFO_ID_TYPE','债务人身份类别','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_B_03','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000201_510_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_B_04','20210319','TESTCORP','72','002','债务人身份标识类型值不在数据字典范围内','债务人身份标识类型值不在数据字典范围内','值域校验','人民银行','B_CERT_TYPE','债务人身份标识类型','R','Y','','','','if (!isEmpty(B_INFO_ID_TYPE) && B_INFO_ID_TYPE==''1'') {
    if (!$value in [''1'',''2'',''5'',''6'',''8'',''9'',''A'',''B'',''C'',''X'',''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_B_04','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000201_510_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_B_05','20210319','TESTCORP','72','002','债务人身份标识类型值不在数据字典范围内','债务人身份标识类型值不在数据字典范围内','值域校验','人民银行','B_CERT_TYPE','债务人身份标识类型','R','Y','','','','if (!isEmpty(B_INFO_ID_TYPE) && B_INFO_ID_TYPE==''2'') {
    if (!$value in [''10'',''20'',''30'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_B_05','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000201_510_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_C_01','20210319','TESTCORP','72','002','合同类型值不在数据字典范围内','合同类型值不在数据字典范围内','值域校验','人民银行','C_GUAR_TYPE','合同类型','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_C_01','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000201_510_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_C_02','20210319','TESTCORP','72','002','币种值不在数据字典范围内','币种值不在数据字典范围内','值域校验','人民银行','C_CY','币种','R','Y','GP_BM_DATA_DIC','19243','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_C_02','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000201_510_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_C_03','20210319','TESTCORP','72','002','最高额担保标志值不在数据字典范围内','最高额担保标志值不在数据字典范围内','值域校验','人民银行','C_MAX_GUAR','最高额担保标志','R','Y','','','1,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_C_03','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000201_510_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_C_04','20210319','TESTCORP','72','002','抵（质）押合同状态值不在数据字典范围内','抵（质）押合同状态值不在数据字典范围内','值域校验','人民银行','C_CC_STATUS','抵（质）押合同状态','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_C_04','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000201_510_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_D_01','20210319','TESTCORP','72','002','身份类别值不在数据字典范围内','身份类别值不在数据字典范围内','值域校验','人民银行','D_INFO_ID_TYPE','身份类别','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_D_01','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000201_510_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_D_02','20210319','TESTCORP','72','002','其他债务人身份标识类型值不在数据字典范围内','其他债务人身份标识类型值不在数据字典范围内','值域校验','人民银行','D_GUAR_CERT_TYPE','其他债务人身份标识类型','R','Y','','','','if (!isEmpty(D_INFO_ID_TYPE) && D_INFO_ID_TYPE==''1'') {
    if (!$value in [''1'',''2'',''5'',''6'',''8'',''9'',''A'',''B'',''C'',''X'',''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_D_02','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000201_510_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_D_03','20210319','TESTCORP','72','002','其他债务人身份标识类型值不在数据字典范围内','其他债务人身份标识类型值不在数据字典范围内','值域校验','人民银行','D_GUAR_CERT_TYPE','其他债务人身份标识类型','R','Y','','','','if (!isEmpty(D_INFO_ID_TYPE) && D_INFO_ID_TYPE==''2'') {
    if (!$value in [''10'',''20'',''30'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_D_03','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000201_510_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_01','20210319','TESTCORP','72','002','抵押物种类值不在数据字典范围内','抵押物种类值不在数据字典范围内','值域校验','人民银行','E_PLE_TYPE','抵押物种类','R','Y','','','11,12,13,14,99','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_01','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_02','20210319','TESTCORP','72','002','抵押物识别号类型值不在数据字典范围内','抵押物识别号类型值不在数据字典范围内','值域校验','人民银行','E_MOTGA_PROPT_ID_TYPE','抵押物识别号类型','R','Y','','','1,2,3,4,5,6','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_02','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_03','20210319','TESTCORP','72','002','抵押物位置所在地行政区划值不在数据字典范围内','抵押物位置所在地行政区划值不在数据字典范围内','值域校验','人民银行','E_PLE_DISTR','抵押物位置所在地行政区划','R','Y','GP_BM_DATA_DIC','19242','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_03','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_04','20210319','TESTCORP','72','002','币种值不在数据字典范围内','币种值不在数据字典范围内','值域校验','人民银行','E_PLE_CY','币种','R','Y','GP_BM_DATA_DIC','19243','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_04','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_05','20210319','TESTCORP','72','002','评估机构类型值不在数据字典范围内','评估机构类型值不在数据字典范围内','值域校验','人民银行','E_VAL_ORG_TYPE','评估机构类型','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_05','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_06','20210319','TESTCORP','72','002','抵押人身份类别值不在数据字典范围内','抵押人身份类别值不在数据字典范围内','值域校验','人民银行','E_PLEDGOR_TYPE','抵押人身份类别','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_06','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_07','20210319','TESTCORP','72','002','抵押人身份标识类型值不在数据字典范围内','抵押人身份标识类型值不在数据字典范围内','值域校验','人民银行','E_PLEOR_CERT_TYPE','抵押人身份标识类型','R','Y','','','','if (!isEmpty(E_PLEDGOR_TYPE) && E_PLEDGOR_TYPE==''1'') {
    if (!$value in [''1'',''2'',''5'',''6'',''8'',''9'',''A'',''B'',''C'',''X'',''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_07','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_08','20210319','TESTCORP','72','002','抵押人身份标识类型值不在数据字典范围内','抵押人身份标识类型值不在数据字典范围内','值域校验','人民银行','E_PLEOR_CERT_TYPE','抵押人身份标识类型','R','Y','','','','if (!isEmpty(E_PLEDGOR_TYPE) && E_PLEDGOR_TYPE==''2'') {
    if (!$value in [''10'',''20'',''30'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_08','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_F_01','20210319','TESTCORP','72','002','质物种类值不在数据字典范围内','质物种类值不在数据字典范围内','值域校验','人民银行','F_IMP_TYPE','质物种类','R','Y','','','11,12,13,14,15,21,22,23,24,25,26,90','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_F_01','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000201_510_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_F_02','20210319','TESTCORP','72','002','币种值不在数据字典范围内','币种值不在数据字典范围内','值域校验','人民银行','F_IMP_CY','币种','R','Y','GP_BM_DATA_DIC','19243','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_F_02','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000201_510_F_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_F_03','20210319','TESTCORP','72','002','出质人身份类别值不在数据字典范围内','出质人身份类别值不在数据字典范围内','值域校验','人民银行','F_IPPC','出质人身份类别','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_F_03','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000201_510_F_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_F_04','20210319','TESTCORP','72','002','出质人身份标识类型值不在数据字典范围内','出质人身份标识类型值不在数据字典范围内','值域校验','人民银行','F_PAWN_CERT_TYPE','出质人身份标识类型','R','Y','','','','if (!isEmpty(F_IPPC) && F_IPPC==''1'') {
    if (!$value in [''1'',''2'',''5'',''6'',''8'',''9'',''A'',''B'',''C'',''X'',''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_F_04','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000201_510_F_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_510_F_05','20210319','TESTCORP','72','002','出质人身份标识类型值不在数据字典范围内','出质人身份标识类型值不在数据字典范围内','值域校验','人民银行','F_PAWN_CERT_TYPE','出质人身份标识类型','R','Y','','','','if (!isEmpty(F_IPPC) && F_IPPC==''2'') {
    if (!$value in [''10'',''20'',''30'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_F_05','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000201_510_F_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_215_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“215-个人借贷账户特殊事件说明记录”','信息记录类型必须填写“215-个人借贷账户特殊事件说明记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','215','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_215_B_01','20210415','TESTCORP','72','002','MBT_PM_215_B','I0000201_215_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_215_B_02','20210319','TESTCORP','72','002','事件类型值不在数据字典范围内','事件类型值不在数据字典范围内','值域校验','人民银行','OPETN_TYPE','事件类型','R','Y','','','11,12,21','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_215_B_02','20210415','TESTCORP','72','002','MBT_PM_215_B','I0000201_215_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_215_B_03','20210319','TESTCORP','72','002','生效标志值不在数据字典范围内','生效标志值不在数据字典范围内','值域校验','人民银行','FLAG','生效标志','R','Y','','','1,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_215_B_03','20210415','TESTCORP','72','002','MBT_PM_215_B','I0000201_215_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_220_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“220-个人授信协议信息记录”','信息记录类型必须填写“220-个人授信协议信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','220','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_220_B_01','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000201_220_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_220_B_02','20210319','TESTCORP','72','002','报告时点说明代码值不在数据字典范围内','报告时点说明代码值不在数据字典范围内','值域校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','','','10,20,30,88,99','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_220_B_02','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000201_220_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_22X_B_03','20210319','TESTCORP','72','002','受信人证件类型值不在数据字典范围内','受信人证件类型值不在数据字典范围内','值域校验','人民银行','B_ID_TYPE','受信人证件类型','R','Y','','','1,2,5,6,8,9,A,B,C,X,10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_B_03','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000201_22X_B_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_B_03','20210415','TESTCORP','72','002','MBT_PM_222_B','I0000201_22X_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_22X_C_01','20210319','TESTCORP','72','002','共同受信人身份类别值不在数据字典范围内','共同受信人身份类别值不在数据字典范围内','值域校验','人民银行','C_BRER_TYPE','共同受信人身份类别','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_C_01','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000201_22X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_C_01','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000201_22X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_22X_C_02','20210319','TESTCORP','72','002','共同受信人身份标识类型值不在数据字典范围内','共同受信人身份标识类型值不在数据字典范围内','值域校验','人民银行','C_CERT_REL_ID_TYPE','共同受信人身份标识类型','R','Y','','','','if (!isEmpty(C_BRER_TYPE) && C_BRER_TYPE==''1'') {
    if (!$value in [''1'',''2'',''5'',''6'',''8'',''9'',''A'',''B'',''C'',''X'',''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_C_02','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000201_22X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_C_02','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000201_22X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_22X_C_03','20210319','TESTCORP','72','002','共同受信人身份标识类型值不在数据字典范围内','共同受信人身份标识类型值不在数据字典范围内','值域校验','人民银行','C_CERT_REL_ID_TYPE','共同受信人身份标识类型','R','Y','','','','if (!isEmpty(C_BRER_TYPE) && C_BRER_TYPE==''2'') {
    if (!$value in [''10'',''20'',''30'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_C_03','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000201_22X_C_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_C_03','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000201_22X_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_22X_D_01','20210319','TESTCORP','72','002','授信额度类型值不在数据字典范围内','授信额度类型值不在数据字典范围内','值域校验','人民银行','D_CREDIT_LIM_TYPE','授信额度类型','R','Y','','','10,20,30,31','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_D_01','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000201_22X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_D_01','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000201_22X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_22X_D_02','20210319','TESTCORP','72','002','额度循环标志值不在数据字典范围内','额度循环标志值不在数据字典范围内','值域校验','人民银行','D_LIM_LOOP_FLG','额度循环标志','R','Y','','','1,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_D_02','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000201_22X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_D_02','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000201_22X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_22X_D_03','20210319','TESTCORP','72','002','币种值不在数据字典范围内','币种值不在数据字典范围内','值域校验','人民银行','D_CY','币种','R','Y','GP_BM_DATA_DIC','19243','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_D_03','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000201_22X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_D_03','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000201_22X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_22X_D_04','20210319','TESTCORP','72','002','额度状态值不在数据字典范围内','额度状态值不在数据字典范围内','值域校验','人民银行','D_CON_STATUS','额度状态','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_D_04','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000201_22X_D_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_D_04','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000201_22X_D_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_120_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“120-家族关系信息记录”','信息记录类型必须填写“120-家族关系信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','120','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_120_B_01','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000201_120_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_120_B_02','20210319','TESTCORP','72','002','A证件类型值不在数据字典范围内','A证件类型值不在数据字典范围内','值域校验','人民银行','ID_TYPE','A证件类型','R','Y','','','1,2,5,6,8,9,A,B,C,X,10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_120_B_02','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000201_120_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_120_B_03','20210319','TESTCORP','72','002','B证件类型值不在数据字典范围内','B证件类型值不在数据字典范围内','值域校验','人民银行','FAM_MEM_CET_TYPE','B证件类型','R','Y','','','1,2,5,6,8,9,A,B,C,X,10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_120_B_03','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000201_120_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_120_B_04','20210319','TESTCORP','72','002','家族关系值不在数据字典范围内','家族关系值不在数据字典范围内','值域校验','人民银行','FAM_REL','家族关系','R','Y','','','1,2,3,4,5,6,7,8','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_120_B_04','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000201_120_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_120_B_05','20210319','TESTCORP','72','002','家族关系有效标志值不在数据字典范围内','家族关系有效标志值不在数据字典范围内','值域校验','人民银行','FAM_RELA_ASS_FLAG','家族关系有效标志','R','Y','','','1,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_120_B_05','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000201_120_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_130_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“130-个人证件有效期信息记录”','信息记录类型必须填写“130-个人证件有效期信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','130','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_130_B_01','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000201_130_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_130_B_02','20210319','TESTCORP','72','002','证件类型值不在数据字典范围内','证件类型值不在数据字典范围内','值域校验','人民银行','ID_TYPE','证件类型','R','Y','','','1,2,5,6,8,9,A,B,C,X,10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_130_B_02','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000201_130_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“110-个人基础信息记录”','信息记录类型必须填写“110-个人基础信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','110','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_B_01','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000201_110_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_B_02','20210319','TESTCORP','72','002','证件类型值不在数据字典范围内','证件类型值不在数据字典范围内','值域校验','人民银行','B_ID_TYPE','证件类型','R','Y','','','1,2,5,6,8,9,A,B,C,X,10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_B_02','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000201_110_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_B_03','20210319','TESTCORP','72','002','报告时点说明代码值不在数据字典范围内','报告时点说明代码值不在数据字典范围内','值域校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','','','10,20,88','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_B_03','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000201_110_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_B_04','20210319','TESTCORP','72','002','客户资料类型值不在数据字典范围内','客户资料类型值不在数据字典范围内','值域校验','人民银行','B_CUSTOMER_TYPE','客户资料类型','R','Y','','','11,12,13,20,30,40,50,60,90','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_B_04','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000201_110_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_C_01','20210319','TESTCORP','72','002','证件类型（其他）值不在数据字典范围内','证件类型（其他）值不在数据字典范围内','值域校验','人民银行','OTH_ID_TYPE','证件类型（其他）','R','Y','','','1,2,5,6,8,9,A,B,C,X,10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_C_01','20210415','TESTCORP','72','002','MBT_PM_110_C','I0000201_110_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_D_01','20210319','TESTCORP','72','002','性别值不在数据字典范围内','性别值不在数据字典范围内','值域校验','人民银行','D_SEX','性别','R','Y','','','1,2,9,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_D_01','20210415','TESTCORP','72','002','MBT_PM_110_D','I0000201_110_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_D_02','20210319','TESTCORP','72','002','国籍值不在数据字典范围内','国籍值不在数据字典范围内','值域校验','人民银行','D_NATION','国籍','R','Y','GP_BM_DATA_DIC','19241','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_D_02','20210415','TESTCORP','72','002','MBT_PM_110_D','I0000201_110_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_D_03','20210319','TESTCORP','72','002','户籍所在地行政区划值不在数据字典范围内','户籍所在地行政区划值不在数据字典范围内','值域校验','人民银行','D_HH_DIST','户籍所在地行政区划','R','Y','GP_BM_DATA_DIC','19242','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_D_03','20210415','TESTCORP','72','002','MBT_PM_110_D','I0000201_110_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_E_01','20210319','TESTCORP','72','002','婚姻状况值不在数据字典范围内','婚姻状况值不在数据字典范围内','值域校验','人民银行','E_MARI_STATUS','婚姻状况','R','Y','','','10,20,21,22,23,30,40,90,91,99','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_E_01','20210415','TESTCORP','72','002','MBT_PM_110_E','I0000201_110_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_E_02','20210319','TESTCORP','72','002','配偶证件类型值不在数据字典范围内','配偶证件类型值不在数据字典范围内','值域校验','人民银行','E_SPO_ID_TYPE','配偶证件类型','R','Y','','','1,2,5,6,8,9,A,B,C,X,10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_E_02','20210415','TESTCORP','72','002','MBT_PM_110_E','I0000201_110_E_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_F_01','20210319','TESTCORP','72','002','学历值不在数据字典范围内','学历值不在数据字典范围内','值域校验','人民银行','F_EDU_LEVEL','学历','R','Y','','','10,20,30,40,60,70,80,90,91,99','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_F_01','20210415','TESTCORP','72','002','MBT_PM_110_F','I0000201_110_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_F_02','20210319','TESTCORP','72','002','学位值不在数据字典范围内','学位值不在数据字典范围内','值域校验','人民银行','F_ACA_DEGREE','学位','R','Y','','','1,2,3,4,5,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_F_02','20210415','TESTCORP','72','002','MBT_PM_110_F','I0000201_110_F_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_G_01','20210319','TESTCORP','72','002','就业状况值不在数据字典范围内','就业状况值不在数据字典范围内','值域校验','人民银行','G_EMP_STATUS','就业状况','R','Y','','','11,13,17,21,24,27,31,37,51,54,70,80,90,91,99','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_G_01','20210415','TESTCORP','72','002','MBT_PM_110_G','I0000201_110_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_G_02','20210319','TESTCORP','72','002','单位性质值不在数据字典范围内','单位性质值不在数据字典范围内','值域校验','人民银行','G_CPN_TYPE','单位性质','R','Y','','','10,20,30,40,50,99','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_G_02','20210415','TESTCORP','72','002','MBT_PM_110_G','I0000201_110_G_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_G_03','20210319','TESTCORP','72','002','单位所属行业值不在数据字典范围内','单位所属行业值不在数据字典范围内','值域校验','人民银行','G_INDUSTRY','单位所属行业','R','Y','','','A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_G_03','20210415','TESTCORP','72','002','MBT_PM_110_G','I0000201_110_G_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_G_04','20210319','TESTCORP','72','002','单位所在地行政区划值不在数据字典范围内','单位所在地行政区划值不在数据字典范围内','值域校验','人民银行','G_CPN_DIST','单位所在地行政区划','R','Y','GP_BM_DATA_DIC','19242','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_G_04','20210415','TESTCORP','72','002','MBT_PM_110_G','I0000201_110_G_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_G_05','20210319','TESTCORP','72','002','职业值不在数据字典范围内','职业值不在数据字典范围内','值域校验','人民银行','G_OCCUPATION','职业','R','Y','','','1,3,4,5,6,X,Y,Z,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_G_05','20210415','TESTCORP','72','002','MBT_PM_110_G','I0000201_110_G_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_G_06','20210319','TESTCORP','72','002','职务值不在数据字典范围内','职务值不在数据字典范围内','值域校验','人民银行','G_TITLE','职务','R','Y','','','1,2,3,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_G_06','20210415','TESTCORP','72','002','MBT_PM_110_G','I0000201_110_G_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_G_07','20210319','TESTCORP','72','002','职称值不在数据字典范围内','职称值不在数据字典范围内','值域校验','人民银行','G_TECH_TITLE','职称','R','Y','','','1,2,3,0,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_G_07','20210415','TESTCORP','72','002','MBT_PM_110_G','I0000201_110_G_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_H_01','20210319','TESTCORP','72','002','居住状况值不在数据字典范围内','居住状况值不在数据字典范围内','值域校验','人民银行','H_RESI_STATUS','居住状况','R','Y','','','1,2,3,4,5,6,7,11,12,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_H_01','20210415','TESTCORP','72','002','MBT_PM_110_H','I0000201_110_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_H_02','20210319','TESTCORP','72','002','居住地行政区划值不在数据字典范围内','居住地行政区划值不在数据字典范围内','值域校验','人民银行','H_RESI_DIST','居住地行政区划','R','Y','GP_BM_DATA_DIC','19242','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_H_02','20210415','TESTCORP','72','002','MBT_PM_110_H','I0000201_110_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_110_I_01','20210319','TESTCORP','72','002','通讯地行政区划值不在数据字典范围内','通讯地行政区划值不在数据字典范围内','值域校验','人民银行','I_MAIL_DIST','通讯地行政区划','R','Y','GP_BM_DATA_DIC','19242','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_I_01','20210415','TESTCORP','72','002','MBT_PM_110_I','I0000201_110_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I1100F03_110_F_01','20210319','TESTCORP','72','002','当“学历”为“30-大专”、“40-中专、职高、技校”、“70-初中”、“80-小学”时，“学位”只能为“5-无”或“9-未知”。','当“学历”为“30-大专”、“40-中专、职高、技校”、“70-初中”、“80-小学”时，“学位”只能为“5-无”或“9-未知”。','值域校验','人民银行','F_ACA_DEGREE','学位','R','Y','','','','if (!isEmpty(F_EDU_LEVEL) && F_EDU_LEVEL in [''30'',''40'',''70'',''80'']) {
    if (!$value in [''5'',''9'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I1100F03_110_F_01','20210415','TESTCORP','72','002','MBT_PM_110_F','I1100F03_110_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“310-企业基础信息记录”','信息记录类型必须填写“310-企业基础信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','310','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_B_01','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000201_310_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_B_02','20210319','TESTCORP','72','002','企业身份标识类型值不在数据字典范围内','企业身份标识类型值不在数据字典范围内','值域校验','人民银行','B_ENT_CERT','企业身份标识类型','R','Y','','','10,20,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_B_02','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000201_310_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_B_03','20210319','TESTCORP','72','002','报告时点说明代码值不在数据字典范围内','报告时点说明代码值不在数据字典范围内','值域校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','','','10,20,88','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_B_03','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000201_310_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_B_04','20210319','TESTCORP','72','002','客户资料类型值不在数据字典范围内','客户资料类型值不在数据字典范围内','值域校验','人民银行','B_CUSTOMER_TYPE','客户资料类型','R','Y','','','1,2,X','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_B_04','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000201_310_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_B_05','20210319','TESTCORP','72','002','存续状态值不在数据字典范围内','存续状态值不在数据字典范围内','值域校验','人民银行','B_ETP_STS','存续状态','R','Y','','','1,2,9,X','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_B_05','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000201_310_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_B_06','20210319','TESTCORP','72','002','组织机构类型值不在数据字典范围内','组织机构类型值不在数据字典范围内','值域校验','人民银行','B_ORG_TYPE','组织机构类型','R','Y','GP_BM_DATA_DIC','19135','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_B_06','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000201_310_B_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_C_01','20210319','TESTCORP','72','002','企业身份标识类型（其他）值不在数据字典范围内','企业身份标识类型（其他）值不在数据字典范围内','值域校验','人民银行','OTH_ENT_CERT_TYPE','企业身份标识类型（其他）','R','Y','','','10,20,30,01,02,03,04,05,06,41,42','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_C_01','20210415','TESTCORP','72','002','MBT_PM_310_C','I0000201_310_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_D_01','20210319','TESTCORP','72','002','国别代码值不在数据字典范围内','国别代码值不在数据字典范围内','值域校验','人民银行','D_NATIONALITY','国别代码','R','Y','GP_BM_DATA_DIC','19241','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_D_01','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000201_310_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_D_02','20210319','TESTCORP','72','002','登记地行政区划代码值不在数据字典范围内','登记地行政区划代码值不在数据字典范围内','值域校验','人民银行','D_ADM_DIV_OF_REG','登记地行政区划代码','R','Y','GP_BM_DATA_DIC','19242','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_D_02','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000201_310_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_D_03','20210319','TESTCORP','72','002','行业分类代码值不在数据字典范围内','行业分类代码值不在数据字典范围内','值域校验','人民银行','D_ECO_INDUS_CATE','行业分类代码','R','Y','GP_BM_DATA_DIC','19225','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_D_03','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000201_310_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_D_04','20210319','TESTCORP','72','002','经济类型代码值不在数据字典范围内','经济类型代码值不在数据字典范围内','值域校验','人民银行','D_ECO_TYPE','经济类型代码','R','Y','GP_BM_DATA_DIC','19136','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_D_04','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000201_310_D_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_D_05','20210319','TESTCORP','72','002','企业规模值不在数据字典范围内','企业规模值不在数据字典范围内','值域校验','人民银行','D_ENT_SCALE','企业规模','R','Y','','','2,3,4,5,9,X','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_D_05','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000201_310_D_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_E_01','20210319','TESTCORP','72','002','主要组成人员证件类型值不在数据字典范围内','主要组成人员证件类型值不在数据字典范围内','值域校验','人民银行','MMB_ID_TYPE','主要组成人员证件类型','R','Y','','','1,2,5,6,8,9,A,B,C,X,10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_E_01','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000201_310_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_E_02','20210319','TESTCORP','72','002','主要组成人员职位值不在数据字典范围内','主要组成人员职位值不在数据字典范围内','值域校验','人民银行','MMB_PSTN','主要组成人员职位','R','Y','','','1,2,3,4,5,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_E_02','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000201_310_E_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_F_01','20210319','TESTCORP','72','002','注册资本币种值不在数据字典范围内','注册资本币种值不在数据字典范围内','值域校验','人民银行','F_REG_CAP_CURRENCY','注册资本币种','R','Y','GP_BM_DATA_DIC','19243','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_F_01','20210415','TESTCORP','72','002','MBT_PM_310_F','I0000201_310_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_F_02','20210319','TESTCORP','72','002','出资人类型值不在数据字典范围内','出资人类型值不在数据字典范围内','值域校验','人民银行','SHAR_HOD_TYPE','出资人类型','R','Y','','','10,21,22,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_F_02','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000201_310_F_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_F_03','20210319','TESTCORP','72','002','出资人身份类别值不在数据字典范围内','出资人身份类别值不在数据字典范围内','值域校验','人民银行','SHAR_HOD_CERT_TYPE','出资人身份类别','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_F_03','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000201_310_F_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_F_04','20210319','TESTCORP','72','002','出资人身份标识类型值不在数据字典范围内','出资人身份标识类型值不在数据字典范围内','值域校验','人民银行','SHAR_HOD_ID_TYPE','出资人身份标识类型','R','Y','','','','if (!isEmpty(SHAR_HOD_CERT_TYPE) && SHAR_HOD_CERT_TYPE==''1'') {
    if (!$value in [''1'',''2'',''5'',''6'',''8'',''9'',''A'',''B'',''C'',''X'',''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_F_04','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000201_310_F_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_F_05','20210319','TESTCORP','72','002','出资人身份标识类型值不在数据字典范围内','出资人身份标识类型值不在数据字典范围内','值域校验','人民银行','SHAR_HOD_ID_TYPE','出资人身份标识类型','R','Y','','','','if (!isEmpty(SHAR_HOD_CERT_TYPE) && SHAR_HOD_CERT_TYPE==''2'') {
    if (!$value in [''10'',''20'',''30'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_F_05','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000201_310_F_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_G_01','20210319','TESTCORP','72','002','实际控制人身份类别值不在数据字典范围内','实际控制人身份类别值不在数据字典范围内','值域校验','人民银行','ACTU_COTRL_CERT_TYPE','实际控制人身份类别','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_G_01','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000201_310_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_G_02','20210319','TESTCORP','72','002','实际控制人身份标识类型值不在数据字典范围内','实际控制人身份标识类型值不在数据字典范围内','值域校验','人民银行','ACTU_COTRL_ID_TYPE','实际控制人身份标识类型','R','Y','','','','if (!isEmpty(ACTU_COTRL_CERT_TYPE) && ACTU_COTRL_CERT_TYPE==''1'') {
    if (!$value in [''1'',''2'',''5'',''6'',''8'',''9'',''A'',''B'',''C'',''X'',''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_G_02','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000201_310_G_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_G_03','20210319','TESTCORP','72','002','实际控制人身份标识类型值不在数据字典范围内','实际控制人身份标识类型值不在数据字典范围内','值域校验','人民银行','ACTU_COTRL_ID_TYPE','实际控制人身份标识类型','R','Y','','','','if (!isEmpty(ACTU_COTRL_CERT_TYPE) && ACTU_COTRL_CERT_TYPE==''2'') {
    if (!$value in [''10'',''20'',''30'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_G_03','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000201_310_G_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_H_01','20210319','TESTCORP','72','002','上级机构类型值不在数据字典范围内','上级机构类型值不在数据字典范围内','值域校验','人民银行','H_SUP_ORG_TYPE','上级机构类型','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_H_01','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000201_310_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_H_02','20210319','TESTCORP','72','002','上级机构身份标识类型值不在数据字典范围内','上级机构身份标识类型值不在数据字典范围内','值域校验','人民银行','H_SUP_ORG_CERT_TYPE','上级机构身份标识类型','R','Y','','','10,20,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_H_02','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000201_310_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_310_I_01','20210319','TESTCORP','72','002','联系地址行政区划代码值不在数据字典范围内','联系地址行政区划代码值不在数据字典范围内','值域校验','人民银行','I_CON_ADD_DISTRICT_CODE','联系地址行政区划代码','R','Y','GP_BM_DATA_DIC','19242','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_I_01','20210415','TESTCORP','72','002','MBT_PM_310_I','I0000201_310_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“350-企业间关联关系信息记录”','信息记录类型必须填写“350-企业间关联关系信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','350','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_01','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_02','20210319','TESTCORP','72','002','A企业身份标识类型值不在数据字典范围内','A企业身份标识类型值不在数据字典范围内','值域校验','人民银行','B_ENT_CERT_TYPE','A企业身份标识类型','R','Y','','','10,20,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_02','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_03','20210319','TESTCORP','72','002','B企业身份标识类型值不在数据字典范围内','B企业身份标识类型值不在数据字典范围内','值域校验','人民银行','B_ASSO_ENT_CERT_TYPE','B企业身份标识类型','R','Y','','','10,20,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_03','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_04','20210319','TESTCORP','72','002','关联关系类型值不在数据字典范围内','关联关系类型值不在数据字典范围内','值域校验','人民银行','B_ASSO_TYPE','关联关系类型','R','Y','','','21,22,23,24','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_04','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_05','20210319','TESTCORP','72','002','关联关系有效标志值不在数据字典范围内','关联关系有效标志值不在数据字典范围内','值域校验','人民银行','B_ASSO_SIGN','关联关系有效标志','R','Y','','','1,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_05','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_410_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“410-企业借贷账户信息记录”','信息记录类型必须填写“410-企业借贷账户信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','410','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_410_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000201_410_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_410_B_02','20210319','TESTCORP','72','002','账户类型值不在数据字典范围内','账户类型值不在数据字典范围内','值域校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','','','D1,D2,R1,R4,C1','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_410_B_02','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000201_410_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_410_B_03','20210319','TESTCORP','72','002','报告时点说明代码值不在数据字典范围内','报告时点说明代码值不在数据字典范围内','值域校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','','','10,20,31,32,33,41,42,49,88,99','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_410_B_03','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000201_410_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_B_04','20210319','TESTCORP','72','002','借款人身份标识类型值不在数据字典范围内','借款人身份标识类型值不在数据字典范围内','值域校验','人民银行','B_ID_TYPE','借款人身份标识类型','R','Y','','','10,20,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_B_04','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000201_41X_B_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_B_04','20210415','TESTCORP','72','002','MBT_PM_412_B','I0000201_41X_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_01','20210319','TESTCORP','72','002','借贷业务大类值不在数据字典范围内','借贷业务大类值不在数据字典范围内','值域校验','人民银行','C_BUSI_LINES','借贷业务大类','R','Y','','','10,11,12,13,14,15,16,21,31,41,51','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_01','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_01','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_02','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“10-企业债”，则“借贷业务种类细分”必须与之匹配','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“10-企业债”，则“借贷业务种类细分”必须与之匹配','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''10'') {
    if (!$value in [''10'',''20'',''30'',''90'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_02','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_02','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_03','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“11-贷款”，则“借贷业务种类细分”必须与信用卡相匹配。','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“11-贷款”，则“借贷业务种类细分”必须与信用卡相匹配。','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''11'') {
    if (!$value in [''11'',''12'',''13'',''14'',''15'',''16'',''17'',''18'',''90'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_03','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_03','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_04','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“12-贸易融资”，则“借贷业务种类细分”必须与之匹配','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“12-贸易融资”，则“借贷业务种类细分”必须与之匹配','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''12'') {
    if (!$value in [''11'',''19'',''21'',''22'',''23'',''25'',''29'',''31'',''39'',''41'',''42'',''43'',''49'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_04','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_04','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_05','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“13-保理融资”，则“借贷业务种类细分”必须与之匹配','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“13-保理融资”，则“借贷业务种类细分”必须与之匹配','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''13'') {
    if (!$value in [''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_05','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_05','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_06','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“14-融资租赁”，则“借贷业务种类细分”必须与之匹配','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“14-融资租赁”，则“借贷业务种类细分”必须与之匹配','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''14'') {
    if (!$value in [''10'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_06','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_06','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_07','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“15-证券类融资”，则“借贷业务种类细分”必须与之匹配','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“15-证券类融资”，则“借贷业务种类细分”必须与之匹配','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''15'') {
    if (!$value in [''10'',''20'',''90'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_07','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_07','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_08','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“16-透支”，则“借贷业务种类细分”必须与之匹配','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“16-透支”，则“借贷业务种类细分”必须与之匹配','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''16'') {
    if (!$value in [''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_08','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_08','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_08','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_08','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_09','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“21-票据贴现”，则“借贷业务种类细分”必须与之匹配','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“21-票据贴现”，则“借贷业务种类细分”必须与之匹配','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''21'') {
    if (!$value in [''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_09','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_09','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_09','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_09','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_10','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“31-黄金借贷”，则“借贷业务种类细分”必须与之匹配','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“31-黄金借贷”，则“借贷业务种类细分”必须与之匹配','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''31'') {
    if (!$value in [''10'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_10','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_10','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_10','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_10','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_11','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“41-垫款”，则“借贷业务种类细分”必须与之匹配','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“41-垫款”，则“借贷业务种类细分”必须与之匹配','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''41'') {
    if (!$value in [''10'',''20'',''30'',''40'',''50'',''90'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_11','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_11','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_11','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_12','20210319','TESTCORP','72','002','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“51-资产处置”，则“借贷业务种类细分”必须与之匹配','“借贷业务大类”和“借贷业务种类细分”代码必须相匹配。
如果“借贷业务大类”是“51-资产处置”，则“借贷业务种类细分”必须与之匹配','值域校验','人民银行','C_BUSI_DTL_LINES','借贷业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''51'') {
    if (!$value in [''10'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_12','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_12','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_12','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_13','20210319','TESTCORP','72','002','币种值不在数据字典范围内','币种值不在数据字典范围内','值域校验','人民银行','C_CY','币种','R','Y','GP_BM_DATA_DIC','19243','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_13','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_13','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_13','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_14','20210319','TESTCORP','72','002','分次放款标志值不在数据字典范围内','分次放款标志值不在数据字典范围内','值域校验','人民银行','C_FLAG','分次放款标志','R','Y','','','1,2,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_14','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_14','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_14','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4100A06_41X_C_01','20210319','TESTCORP','72','002','账户类型=‘D1‘，还款方式值不在数据字典范围内[11-12-13-14-15-19-21-22-23-29-90]','账户类型=‘D1‘，还款方式值不在数据字典范围内[11-12-13-14-15-19-21-22-23-29-90]','值域校验','人民银行','C_REPAY_MODE','还款方式','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE==''D1'') {
    if (!$value in [''11'',''12'',''13'',''14'',''15'',''19'',''21'',''22'',''23'',''29'',''90'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100A06_41X_C_01','20210415','TESTCORP','72','002','MBT_PM_410_C','I4100A06_41X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100A06_412_C_01','20210415','TESTCORP','72','002','MBT_PM_412_C','I4100A06_41X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4100A06_41X_C_02','20210319','TESTCORP','72','002','账户类型=‘R1‘，还款方式值不在数据字典范围内[31-32-33-39-90]','账户类型=‘R1‘，还款方式值不在数据字典范围内[31-32-33-39-90]','值域校验','人民银行','C_REPAY_MODE','还款方式','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE==''R1'') {
    if (!$value in [''31'',''32'',''33'',''39'',''90'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100A06_41X_C_02','20210415','TESTCORP','72','002','MBT_PM_410_C','I4100A06_41X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100A06_412_C_02','20210415','TESTCORP','72','002','MBT_PM_412_C','I4100A06_41X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4100A06_41X_C_03','20210319','TESTCORP','72','002','账户类型=‘R4‘，还款方式值不在数据字典范围内[11-12-13-14-15-19-21-22-23-29]','账户类型=‘R4‘，还款方式值不在数据字典范围内[11-12-13-14-15-19-21-22-23-29]','值域校验','人民银行','C_REPAY_MODE','还款方式','R','Y','','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE==''R4'') {
    if (!$value in [''11'',''12'',''13'',''14'',''15'',''19'',''21'',''22'',''23'',''29'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100A06_41X_C_03','20210415','TESTCORP','72','002','MBT_PM_410_C','I4100A06_41X_C_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100A06_412_C_03','20210415','TESTCORP','72','002','MBT_PM_412_C','I4100A06_41X_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_15','20210319','TESTCORP','72','002','还款频率值不在数据字典范围内','还款频率值不在数据字典范围内','值域校验','人民银行','C_REPAY_FREQCY','还款频率','R','Y','','','10,21,22,23,24,29,39,40,99','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_15','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_15','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_15','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_16','20210319','TESTCORP','72','002','业务申请地行政区划代码值不在数据字典范围内','业务申请地行政区划代码值不在数据字典范围内','值域校验','人民银行','C_APPLY_BUSI_DIST','业务申请地行政区划代码','R','Y','GP_BM_DATA_DIC','19242','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_16','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_16','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_16','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_16','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_17','20210319','TESTCORP','72','002','担保方式值不在数据字典范围内','担保方式值不在数据字典范围内','值域校验','人民银行','C_GUAR_MODE','担保方式','R','Y','','','1,2,3,4,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_17','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_17','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_17','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_17','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_18','20210319','TESTCORP','72','002','其他还款保证方式值不在数据字典范围内','其他还款保证方式值不在数据字典范围内','值域校验','人民银行','C_OTH_REPY_GUAR_WAY','其他还款保证方式','R','Y','','','1,2,9,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_18','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_18','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_18','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_18','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_19','20210319','TESTCORP','72','002','借款期限分类值不在数据字典范围内','借款期限分类值不在数据字典范围内','值域校验','人民银行','C_LOAN_TIME_LIM_CAT','借款期限分类','R','Y','','','10,20,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_19','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_19','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_19','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_19','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_20','20210319','TESTCORP','72','002','贷款发放形式值不在数据字典范围内','贷款发放形式值不在数据字典范围内','值域校验','人民银行','C_LOA_FRM','贷款发放形式','R','Y','','','1,2,3,4,5,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_20','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_20','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_20','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_20','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_21','20210319','TESTCORP','72','002','贷款实际投向值不在数据字典范围内','贷款实际投向值不在数据字典范围内','值域校验','人民银行','C_ACT_INVEST','贷款实际投向','R','Y','GP_BM_DATA_DIC','19225','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_21','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_21','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_21','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_22','20210319','TESTCORP','72','002','业务经营类型值不在数据字典范围内','业务经营类型值不在数据字典范围内','值域校验','人民银行','C_FUND_SOU','业务经营类型','R','Y','','','1,2,21,22,23,24,4,8','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_22','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_22','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_22','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_22','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_C_23','20210319','TESTCORP','72','002','资产转让标志值不在数据字典范围内','资产转让标志值不在数据字典范围内','值域校验','人民银行','C_ASSET_TRAND_FLAG','资产转让标志','R','Y','','','1,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_C_23','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000201_41X_C_23','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_C_23','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000201_41X_C_23','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_D_01','20210319','TESTCORP','72','002','身份类别值不在数据字典范围内','身份类别值不在数据字典范围内','值域校验','人民银行','D_ARLP_ID_TYPE','身份类别','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_D_01','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000201_41X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_D_01','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000201_41X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4100D03_41X_D_01','20210319','TESTCORP','72','002','“身份类别”和“责任人身份标识类型”的代码必须匹配：当“身份类别”为“2-组织机构”时，“责任人身份标识类型”只能选择“10-中征码（原贷款卡编码）”、“20-统一社会信用代码”、“30-组织机构代码”。','“身份类别”和“责任人身份标识类型”的代码必须匹配：当“身份类别”为“2-组织机构”时，“责任人身份标识类型”只能选择“10-中征码（原贷款卡编码）”、“20-统一社会信用代码”、“30-组织机构代码”。','值域校验','人民银行','D_ARLP_CERT_TYPE','责任人身份标识类型','R','Y','','','','if (!isEmpty(D_ARLP_ID_TYPE) && D_ARLP_ID_TYPE==''2'') {
    if (!$value in [''10'',''20'',''30'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D03_41X_D_01','20210415','TESTCORP','72','002','MBT_PM_410_D','I4100D03_41X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D03_412_D_01','20210415','TESTCORP','72','002','MBT_PM_412_D','I4100D03_41X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4100D03_41X_D_02','20210319','TESTCORP','72','002','身份类别=‘1‘，责任人身份标识类型值不在数据字典范围内[1-2-5-6-8-9-A-B-C-X-10-20]','身份类别=‘1‘，责任人身份标识类型值不在数据字典范围内[1-2-5-6-8-9-A-B-C-X-10-20]','值域校验','人民银行','D_ARLP_CERT_TYPE','责任人身份标识类型','R','Y','','','','if (!isEmpty(D_ARLP_ID_TYPE) && D_ARLP_ID_TYPE==''1'') {
    if (!$value in [''1'',''2'',''5'',''6'',''8'',''9'',''A'',''B'',''C'',''X'',''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D03_41X_D_02','20210415','TESTCORP','72','002','MBT_PM_410_D','I4100D03_41X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D03_412_D_02','20210415','TESTCORP','72','002','MBT_PM_412_D','I4100D03_41X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_D_02','20210319','TESTCORP','72','002','还款责任人类型值不在数据字典范围内','还款责任人类型值不在数据字典范围内','值域校验','人民银行','D_ARLP_TYPE','还款责任人类型','R','Y','','','1,2,3,4,5,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_D_02','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000201_41X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_D_02','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000201_41X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_D_03','20210319','TESTCORP','72','002','联保标志值不在数据字典范围内','联保标志值不在数据字典范围内','值域校验','人民银行','D_WARTY_SIGN','联保标志','R','Y','','','1,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_D_03','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000201_41X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_D_03','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000201_41X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_G_01','20210319','TESTCORP','72','002','原债务种类值不在数据字典范围内','原债务种类值不在数据字典范围内','值域校验','人民银行','G_ORIG_DBT_CATE','原债务种类','R','Y','','','10,11,12,13,14,15,16,21,31,41,90','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_G_01','20210415','TESTCORP','72','002','MBT_PM_410_G','I0000201_41X_G_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_G_01','20210415','TESTCORP','72','002','MBT_PM_412_G','I0000201_41X_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_G_02','20210319','TESTCORP','72','002','债权转移时的还款状态值不在数据字典范围内','债权转移时的还款状态值不在数据字典范围内','值域校验','人民银行','G_INIT_RPY_STS','债权转移时的还款状态','R','Y','','','1,2,3,4,5,6,7,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_G_02','20210415','TESTCORP','72','002','MBT_PM_410_G','I0000201_41X_G_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_G_02','20210415','TESTCORP','72','002','MBT_PM_412_G','I0000201_41X_G_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_H_01','20210319','TESTCORP','72','002','账户状态值不在数据字典范围内','账户状态值不在数据字典范围内','值域校验','人民银行','H_ACCT_STATUS','账户状态','R','Y','','','10,21,31,32','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000201_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000201_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_H_02','20210319','TESTCORP','72','002','五级分类值不在数据字典范围内','五级分类值不在数据字典范围内','值域校验','人民银行','H_FIVE_CATE','五级分类','R','Y','','','1,2,3,4,5,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_H_02','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000201_41X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_H_02','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000201_41X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_H_03','20210319','TESTCORP','72','002','还款形式值不在数据字典范围内','还款形式值不在数据字典范围内','值域校验','人民银行','H_RPMT_TYPE','还款形式','R','Y','','','10,21,22,31,32,41,42,51,52,61,62,63,99','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_H_03','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000201_41X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_H_03','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000201_41X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_41X_I_01','20210319','TESTCORP','72','002','交易类型值不在数据字典范围内','交易类型值不在数据字典范围内','值域校验','人民银行','I_CHAN_TRAN_TYPE','交易类型','R','Y','','','11,12,21','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_I_01','20210415','TESTCORP','72','002','MBT_PM_410_I','I0000201_41X_I_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_I_01','20210415','TESTCORP','72','002','MBT_PM_412_I','I0000201_41X_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_420_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“420-企业授信协议信息记录”','信息记录类型必须填写“420-企业授信协议信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','420','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_420_B_01','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000201_420_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_420_B_02','20210319','TESTCORP','72','002','报告时点说明代码值不在数据字典范围内','报告时点说明代码值不在数据字典范围内','值域校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','','','10,20,30,88,99','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_420_B_02','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000201_420_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_42X_B_03','20210319','TESTCORP','72','002','受信人身份标识类型值不在数据字典范围内','受信人身份标识类型值不在数据字典范围内','值域校验','人民银行','B_ID_TYPE','受信人身份标识类型','R','Y','','','10,20,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_B_03','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000201_42X_B_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_B_03','20210415','TESTCORP','72','002','MBT_PM_422_B','I0000201_42X_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_42X_C_01','20210319','TESTCORP','72','002','共同受信人身份类别值不在数据字典范围内','共同受信人身份类别值不在数据字典范围内','值域校验','人民银行','C_BRER_TYPE','共同受信人身份类别','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_C_01','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000201_42X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_C_01','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000201_42X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_42X_C_02','20210319','TESTCORP','72','002','共同受信人身份标识类型值不在数据字典范围内','共同受信人身份标识类型值不在数据字典范围内','值域校验','人民银行','C_CERT_REL_ID_TYPE','共同受信人身份标识类型','R','Y','','','','if (!isEmpty(C_BRER_TYPE) && C_BRER_TYPE==''1'') {
    if (!$value in [''1'',''2'',''5'',''6'',''8'',''9'',''A'',''B'',''C'',''X'',''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_C_02','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000201_42X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_C_02','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000201_42X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_42X_C_03','20210319','TESTCORP','72','002','“共同受信人身份类别”和“共同受信人身份标识类型”的代码必须匹配：当“共同受信人身份类别”为“2-组织机构”时，“共同受信人身份标识类型”只能选择“10-中征码（原贷款卡编码）”、“20-统一社会信用代码”、“30-组织机构代码”。','“共同受信人身份类别”和“共同受信人身份标识类型”的代码必须匹配：当“共同受信人身份类别”为“2-组织机构”时，“共同受信人身份标识类型”只能选择“10-中征码（原贷款卡编码）”、“20-统一社会信用代码”、“30-组织机构代码”。','值域校验','人民银行','C_CERT_REL_ID_TYPE','共同受信人身份标识类型','R','Y','','','','if (!isEmpty(C_BRER_TYPE) && C_BRER_TYPE==''2'') {
    if (!$value in [''10'',''20'',''30'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_C_03','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000201_42X_C_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_C_03','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000201_42X_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_42X_D_01','20210319','TESTCORP','72','002','授信额度类型值不在数据字典范围内','授信额度类型值不在数据字典范围内','值域校验','人民银行','D_CREDIT_LIM_TYPE','授信额度类型','R','Y','','','10,11,12,13,15,16,31,41,51','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_D_01','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000201_42X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_D_01','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000201_42X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_42X_D_02','20210319','TESTCORP','72','002','额度循环标志值不在数据字典范围内','额度循环标志值不在数据字典范围内','值域校验','人民银行','D_LIM_LOOP_FLG','额度循环标志','R','Y','','','1,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_D_02','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000201_42X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_D_02','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000201_42X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_42X_D_03','20210319','TESTCORP','72','002','币种值不在数据字典范围内','币种值不在数据字典范围内','值域校验','人民银行','D_CY','币种','R','Y','GP_BM_DATA_DIC','19243','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_D_03','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000201_42X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_D_03','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000201_42X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_42X_D_04','20210319','TESTCORP','72','002','额度状态值不在数据字典范围内','额度状态值不在数据字典范围内','值域校验','人民银行','D_CON_STATUS','额度状态','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_D_04','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000201_42X_D_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_D_04','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000201_42X_D_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4400C02_44X_C_01','20210319','TESTCORP','72','002','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“1-融资担保”，则“担保业务种类细分”必须与融资担保相匹配。','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“1-融资担保”，则“担保业务种类细分”必须与融资担保相匹配。','值域校验','人民银行','C_BUSI_DTIL_LINES','担保业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''1'') {
    if (!$value in [''01'',''02'',''03'',''04'',''05'',''06'',''10'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_44X_C_01','20210415','TESTCORP','72','002','MBT_PM_440_C','I4400C02_44X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_442_C_01','20210415','TESTCORP','72','002','MBT_PM_442_C','I4400C02_44X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4400C02_44X_C_02','20210319','TESTCORP','72','002','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“2-非融资担保，则“担保业务种类细分”必须与非融资担保相匹配。','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“2-非融资担保，则“担保业务种类细分”必须与非融资担保相匹配。','值域校验','人民银行','C_BUSI_DTIL_LINES','担保业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''2'') {
    if (!$value in [''07'',''08'',''09'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_44X_C_02','20210415','TESTCORP','72','002','MBT_PM_440_C','I4400C02_44X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_442_C_02','20210415','TESTCORP','72','002','MBT_PM_442_C','I4400C02_44X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4400C02_44X_C_03','20210319','TESTCORP','72','002','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“3-再担保，则“担保业务种类细分”必须与再担保相匹配。','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“3-再担保，则“担保业务种类细分”必须与再担保相匹配。','值域校验','人民银行','C_BUSI_DTIL_LINES','担保业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''3'') {
    if (!$value in [''11'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_44X_C_03','20210415','TESTCORP','72','002','MBT_PM_440_C','I4400C02_44X_C_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_442_C_03','20210415','TESTCORP','72','002','MBT_PM_442_C','I4400C02_44X_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4400C02_44X_C_04','20210319','TESTCORP','72','002','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“4-保证保险，则“担保业务种类细分”必须与保证保险相匹配。','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“4-保证保险，则“担保业务种类细分”必须与保证保险相匹配。','值域校验','人民银行','C_BUSI_DTIL_LINES','担保业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''4'') {
    if (!$value in [''12'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_44X_C_04','20210415','TESTCORP','72','002','MBT_PM_440_C','I4400C02_44X_C_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_442_C_04','20210415','TESTCORP','72','002','MBT_PM_442_C','I4400C02_44X_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4400C02_44X_C_05','20210319','TESTCORP','72','002','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“5-信用证，则“担保业务种类细分”必须与信用证相匹配。','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“5-信用证，则“担保业务种类细分”必须与信用证相匹配。','值域校验','人民银行','C_BUSI_DTIL_LINES','担保业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''5'') {
    if (!$value in [''51'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_44X_C_05','20210415','TESTCORP','72','002','MBT_PM_440_C','I4400C02_44X_C_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_442_C_05','20210415','TESTCORP','72','002','MBT_PM_442_C','I4400C02_44X_C_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4400C02_44X_C_06','20210319','TESTCORP','72','002','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“6-承兑汇票，则“担保业务种类细分”必须与承兑汇票相匹配。','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“6-承兑汇票，则“担保业务种类细分”必须与承兑汇票相匹配。','值域校验','人民银行','C_BUSI_DTIL_LINES','担保业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''6'') {
    if (!$value in [''61'',''62'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_44X_C_06','20210415','TESTCORP','72','002','MBT_PM_440_C','I4400C02_44X_C_06','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_442_C_06','20210415','TESTCORP','72','002','MBT_PM_442_C','I4400C02_44X_C_06','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4400C02_44X_C_07','20210319','TESTCORP','72','002','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“7-银行保函，则“担保业务种类细分”必须与银行保函相匹配。','基本信息段中“担保业务大类”和“担保业务种类细分”代码相匹配。如果“担保业务大类”是“7-银行保函，则“担保业务种类细分”必须与银行保函相匹配。','值域校验','人民银行','C_BUSI_DTIL_LINES','担保业务种类细分','R','Y','','','','if (!isEmpty(C_BUSI_LINES) && C_BUSI_LINES==''7'') {
    if (!$value in [''71'',''72'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_44X_C_07','20210415','TESTCORP','72','002','MBT_PM_440_C','I4400C02_44X_C_07','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C02_442_C_07','20210415','TESTCORP','72','002','MBT_PM_442_C','I4400C02_44X_C_07','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4400E01_44X_E_01','20210319','TESTCORP','72','002','责任人身份标识类型值不在数据字典范围内','责任人身份标识类型值不在数据字典范围内','值域校验','人民银行','ARLP_CERT_TYPE','责任人身份标识类型','R','Y','','','','if (!isEmpty(INFO_ID_TYPE) && INFO_ID_TYPE==''1'') {
    if (!$value in [''1'',''2'',''5'',''6'',''8'',''9'',''A'',''B'',''C'',''X'',''10'',''20'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400E01_44X_E_01','20210415','TESTCORP','72','002','MBT_PM_440_E','I4400E01_44X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400E01_442_E_01','20210415','TESTCORP','72','002','MBT_PM_442_E','I4400E01_44X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I4400E01_44X_E_02','20210319','TESTCORP','72','002','相关还款责任人段中“身份类别”和“责任人身份标识类型”代码相匹配：当“身份类别”为“2-组织机构”时，“责任人身份标识类型”只能选择“10-中征码（原贷款卡编码）”、“20-统一社会信用代码”、“30-组织机构代码”。','相关还款责任人段中“身份类别”和“责任人身份标识类型”代码相匹配：当“身份类别”为“2-组织机构”时，“责任人身份标识类型”只能选择“10-中征码（原贷款卡编码）”、“20-统一社会信用代码”、“30-组织机构代码”。','值域校验','人民银行','ARLP_CERT_TYPE','责任人身份标识类型','R','Y','','','','if (!isEmpty(INFO_ID_TYPE) && INFO_ID_TYPE==''2'') {
    if (!$value in [''10'',''20'',''30'']) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400E01_44X_E_02','20210415','TESTCORP','72','002','MBT_PM_440_E','I4400E01_44X_E_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400E01_442_E_02','20210415','TESTCORP','72','002','MBT_PM_442_E','I4400E01_44X_E_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_440_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“440-企业担保账户信息记录”','信息记录类型必须填写“440-企业担保账户信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','440','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_440_B_01','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000201_440_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_440_B_02','20210319','TESTCORP','72','002','账户类型值不在数据字典范围内','账户类型值不在数据字典范围内','值域校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','','','G1,G2,G3','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_440_B_02','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000201_440_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_440_B_03','20210319','TESTCORP','72','002','报告时点说明代码值不在数据字典范围内','报告时点说明代码值不在数据字典范围内','值域校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','','','10,20,30,40,50,88,99','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_440_B_03','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000201_440_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_44X_B_04','20210319','TESTCORP','72','002','债务人身份标识类型值不在数据字典范围内','债务人身份标识类型值不在数据字典范围内','值域校验','人民银行','B_ID_TYPE','债务人身份标识类型','R','Y','','','10,20,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_B_04','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000201_44X_B_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_B_04','20210415','TESTCORP','72','002','MBT_PM_442_B','I0000201_44X_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_44X_C_01','20210319','TESTCORP','72','002','担保业务大类值不在数据字典范围内','担保业务大类值不在数据字典范围内','值域校验','人民银行','C_BUSI_LINES','担保业务大类','R','Y','','','1,2,3,4,5,6,7','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_C_01','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000201_44X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_C_01','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000201_44X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_44X_C_02','20210319','TESTCORP','72','002','币种值不在数据字典范围内','币种值不在数据字典范围内','值域校验','人民银行','C_CY','币种','R','Y','GP_BM_DATA_DIC','19243','0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_C_02','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000201_44X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_C_02','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000201_44X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_44X_C_03','20210319','TESTCORP','72','002','反担保方式值不在数据字典范围内','反担保方式值不在数据字典范围内','值域校验','人民银行','C_GUAR_MODE','反担保方式','R','Y','','','1,2,3,4,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_C_03','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000201_44X_C_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_C_03','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000201_44X_C_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_44X_C_04','20210319','TESTCORP','72','002','其他还款保证方式值不在数据字典范围内','其他还款保证方式值不在数据字典范围内','值域校验','人民银行','C_OTH_REPY_GUAR_WAY','其他还款保证方式','R','Y','','','1,2,9,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_C_04','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000201_44X_C_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_C_04','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000201_44X_C_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_44X_E_01','20210319','TESTCORP','72','002','身份类别值不在数据字典范围内','身份类别值不在数据字典范围内','值域校验','人民银行','INFO_ID_TYPE','身份类别','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_E_01','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000201_44X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_E_01','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000201_44X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_44X_E_02','20210319','TESTCORP','72','002','还款责任人类型值不在数据字典范围内','还款责任人类型值不在数据字典范围内','值域校验','人民银行','ARLP_TYPE','还款责任人类型','R','Y','','','1,2,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_E_02','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000201_44X_E_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_E_02','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000201_44X_E_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_44X_E_03','20210319','TESTCORP','72','002','联保标志值不在数据字典范围内','联保标志值不在数据字典范围内','值域校验','人民银行','WARTY_SIGN','联保标志','R','Y','','','1,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_E_03','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000201_44X_E_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_E_03','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000201_44X_E_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_44X_D_01','20210319','TESTCORP','72','002','账户状态值不在数据字典范围内','账户状态值不在数据字典范围内','值域校验','人民银行','D_ACCT_STATUS','账户状态','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_D_01','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000201_44X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_D_01','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000201_44X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_44X_D_02','20210319','TESTCORP','72','002','五级分类值不在数据字典范围内','五级分类值不在数据字典范围内','值域校验','人民银行','D_FIVE_CATE','五级分类','R','Y','','','1,2,3,4,5,9','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_D_02','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000201_44X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_D_02','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000201_44X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_44X_D_03','20210319','TESTCORP','72','002','代偿（垫款）标志值不在数据字典范围内','代偿（垫款）标志值不在数据字典范围内','值域校验','人民银行','D_COMP_ADV_FLAG','代偿（垫款）标志','R','Y','','','1,0','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_D_03','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000201_44X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_D_03','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000201_44X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_610_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“610-企业资产负债表信息记录”','信息记录类型必须填写“610-企业资产负债表信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','610','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_610_B_01','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000201_610_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_610_B_02','20210319','TESTCORP','72','002','企业身份标识类型不在数据字典范围内','企业身份标识类型不在数据字典范围内','值域校验','人民银行','B_ENT_CERT_TYPE','企业身份标识类型','R','Y','','','10,20,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_610_B_02','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000201_610_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_610_B_03','20210319','TESTCORP','72','002','报表类型不在数据字典范围内','报表类型不在数据字典范围内','值域校验','人民银行','B_SHEET_TYPE','报表类型','R','Y','','','10,20,30,40,50,60,70','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_610_B_03','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000201_610_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_610_B_04','20210319','TESTCORP','72','002','报表类型细分不在数据字典范围内','报表类型细分不在数据字典范围内','值域校验','人民银行','B_SHEET_TYPE_DIVIDE','报表类型细分','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_610_B_04','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000201_610_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_610_B_05','20210319','TESTCORP','72','002','报告时点说明代码不在数据字典范围内','报告时点说明代码不在数据字典范围内','值域校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','','','10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_610_B_05','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000201_610_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_620_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“620-企业利润及利润分配表信息记录”','信息记录类型必须填写“620-企业利润及利润分配表信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','620','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_620_B_01','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000201_620_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_620_B_02','20210319','TESTCORP','72','002','企业身份标识类型不在数据字典范围内','企业身份标识类型不在数据字典范围内','值域校验','人民银行','B_ENT_CERT_TYPE','企业身份标识类型','R','Y','','','10,20,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_620_B_02','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000201_620_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_620_B_03','20210319','TESTCORP','72','002','报表类型不在数据字典范围内','报表类型不在数据字典范围内','值域校验','人民银行','B_SHEET_TYPE','报表类型','R','Y','','','10,20,30,40,50,60,70','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_620_B_03','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000201_620_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_620_B_04','20210319','TESTCORP','72','002','报表类型细分不在数据字典范围内','报表类型细分不在数据字典范围内','值域校验','人民银行','B_SHEET_TYPE_DIVIDE','报表类型细分','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_620_B_04','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000201_620_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_620_B_05','20210319','TESTCORP','72','002','报告时点说明代码不在数据字典范围内','报告时点说明代码不在数据字典范围内','值域校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','','','10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_620_B_05','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000201_620_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_630_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“630-企业现金流量表信息记录”','信息记录类型必须填写“630-企业现金流量表信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','630','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_630_B_01','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000201_630_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_630_B_02','20210319','TESTCORP','72','002','企业身份标识类型不在数据字典范围内','企业身份标识类型不在数据字典范围内','值域校验','人民银行','B_ENT_CERT_TYPE','企业身份标识类型','R','Y','','','10,20,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_630_B_02','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000201_630_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_630_B_03','20210319','TESTCORP','72','002','报表类型不在数据字典范围内','报表类型不在数据字典范围内','值域校验','人民银行','B_SHEET_TYPE','报表类型','R','Y','','','10,20,30,40,50,60,70','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_630_B_03','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000201_630_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_630_B_04','20210319','TESTCORP','72','002','报表类型细分不在数据字典范围内','报表类型细分不在数据字典范围内','值域校验','人民银行','B_SHEET_TYPE_DIVIDE','报表类型细分','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_630_B_04','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000201_630_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_630_B_05','20210319','TESTCORP','72','002','报告时点说明代码不在数据字典范围内','报告时点说明代码不在数据字典范围内','值域校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','','','10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_630_B_05','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000201_630_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_640_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“640-事业单位资产负债表信息记录”','信息记录类型必须填写“640-事业单位资产负债表信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','640','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_640_B_01','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000201_640_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_640_B_02','20210319','TESTCORP','72','002','企业身份标识类型不在数据字典范围内','企业身份标识类型不在数据字典范围内','值域校验','人民银行','B_ENT_CERT_TYPE','企业身份标识类型','R','Y','','','10,20,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_640_B_02','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000201_640_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_640_B_03','20210319','TESTCORP','72','002','报表类型不在数据字典范围内','报表类型不在数据字典范围内','值域校验','人民银行','B_SHEET_TYPE','报表类型','R','Y','','','10,20,30,40,50,60,70','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_640_B_03','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000201_640_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_640_B_04','20210319','TESTCORP','72','002','报表类型细分不在数据字典范围内','报表类型细分不在数据字典范围内','值域校验','人民银行','B_SHEET_TYPE_DIVIDE','报表类型细分','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_640_B_04','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000201_640_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_640_B_05','20210319','TESTCORP','72','002','报告时点说明代码不在数据字典范围内','报告时点说明代码不在数据字典范围内','值域校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','','','10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_640_B_05','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000201_640_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_650_B_01','20210319','TESTCORP','72','002','信息记录类型必须填写“650-事业单位收入支出表信息记录”','信息记录类型必须填写“650-事业单位收入支出表信息记录”','值域校验','人民银行','B_INF_REC_TYPE','信息记录类型','R','Y','','','650','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_650_B_01','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000201_650_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_650_B_02','20210319','TESTCORP','72','002','企业身份标识类型不在数据字典范围内','企业身份标识类型不在数据字典范围内','值域校验','人民银行','B_ENT_CERT_TYPE','企业身份标识类型','R','Y','','','10,20,30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_650_B_02','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000201_650_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_650_B_03','20210319','TESTCORP','72','002','报表类型不在数据字典范围内','报表类型不在数据字典范围内','值域校验','人民银行','B_SHEET_TYPE','报表类型','R','Y','','','10,20,30,40,50,60,70','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_650_B_03','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000201_650_B_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_650_B_04','20210319','TESTCORP','72','002','报表类型细分不在数据字典范围内','报表类型细分不在数据字典范围内','值域校验','人民银行','B_SHEET_TYPE_DIVIDE','报表类型细分','R','Y','','','1,2','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_650_B_04','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000201_650_B_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,in_entity,in_field,enumeration,script,rsv2,DATA_CRT_USER)values('I0000201_650_B_05','20210319','TESTCORP','72','002','报告时点说明代码不在数据字典范围内','报告时点说明代码不在数据字典范围内','值域校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','','','10,20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_650_B_05','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000201_650_B_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_B_31','20210319','TESTCORP','72','002','借款人姓名长度不能超过30个字符','借款人姓名长度不能超过30个字符','长度校验','人民银行','B_NAME','借款人姓名','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_B_31','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000201_21X_B_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_B_31','20210415','TESTCORP','72','002','MBT_PM_212_B','I0000201_21X_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_B_32','20210319','TESTCORP','72','002','借款人证件号码长度不能超过20个字符','借款人证件号码长度不能超过20个字符','长度校验','人民银行','B_ID_NUM','借款人证件号码','R','Y','1','20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_B_32','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000201_21X_B_32','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_B_32','20210415','TESTCORP','72','002','MBT_PM_212_B','I0000201_21X_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_B_33','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','B_ID_NUM','借款人证件号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_B_33','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000201_21X_B_33','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_B_33','20210415','TESTCORP','72','002','MBT_PM_212_B','I0000201_21X_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_B_34','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','B_ID_NUM','借款人证件号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_B_34','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000201_21X_B_34','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_B_34','20210415','TESTCORP','72','002','MBT_PM_212_B','I0000201_21X_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_B_35','20210319','TESTCORP','72','002','业务管理机构代码长度必须等于14个字符','业务管理机构代码长度必须等于14个字符','长度校验','人民银行','B_MNGMT_ORG_CODE','业务管理机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_B_35','20210415','TESTCORP','72','002','MBT_PM_210_B','I0000201_21X_B_35','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_B_35','20210415','TESTCORP','72','002','MBT_PM_212_B','I0000201_21X_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_C_30','20210319','TESTCORP','72','002','卡片标识号长度必须等于4个字符','卡片标识号长度必须等于4个字符','长度校验','人民银行','C_CREDIT_ID','卡片标识号','R','Y','','','if (!isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R2'',''R3'']) {
    if ($value.length() < 4 || $value.length() > 4) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_C_30','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000201_21X_C_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_C_30','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000201_21X_C_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_C_31','20210319','TESTCORP','72','002','贷款合同编号长度不能超过200个字符','贷款合同编号长度不能超过200个字符','长度校验','人民银行','C_LOAN_CON_CODE','贷款合同编号','R','Y','','','if (!isEmpty(B_ACCT_TYPE) && !isEmpty(C_BUSI_DTL_LINES) && B_ACCT_TYPE==''D1''  &&  C_BUSI_DTL_LINES==''11'') {
    if ($value.length() < 1 || $value.length() > 200) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_C_31','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000201_21X_C_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_C_31','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000201_21X_C_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_D_30','20210319','TESTCORP','72','002','责任人名称长度不能超过80个字符','责任人名称长度不能超过80个字符','长度校验','人民银行','D_ARLP_NAME','责任人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_D_30','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000201_21X_D_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_D_30','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000201_21X_D_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_D_31','20210319','TESTCORP','72','002','责任人身份标识号码长度不能超过40个字符','责任人身份标识号码长度不能超过40个字符','长度校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_D_31','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000201_21X_D_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_D_31','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000201_21X_D_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_D_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(D_ARLP_ID_TYPE) && !isEmpty(D_ARLP_CERT_TYPE) && D_ARLP_ID_TYPE==''1''  &&  D_ARLP_CERT_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_D_32','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000201_21X_D_32','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_D_32','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000201_21X_D_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_D_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(D_ARLP_ID_TYPE) && !isEmpty(D_ARLP_CERT_TYPE) && D_ARLP_ID_TYPE==''1''  &&  D_ARLP_CERT_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_D_33','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000201_21X_D_33','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_D_33','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000201_21X_D_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_D_34','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(D_ARLP_ID_TYPE) && !isEmpty(D_ARLP_CERT_TYPE) && D_ARLP_ID_TYPE==''2''  &&  D_ARLP_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_D_34','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000201_21X_D_34','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_D_34','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000201_21X_D_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_D_35','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(D_ARLP_ID_TYPE) && !isEmpty(D_ARLP_CERT_TYPE) && D_ARLP_ID_TYPE==''2''  &&  D_ARLP_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_D_35','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000201_21X_D_35','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_D_35','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000201_21X_D_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_D_36','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(D_ARLP_ID_TYPE) && !isEmpty(D_ARLP_CERT_TYPE) && D_ARLP_ID_TYPE==''2''  &&  D_ARLP_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_D_36','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000201_21X_D_36','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_D_36','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000201_21X_D_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_G_30','20210319','TESTCORP','72','002','初始债权人名称长度不能超过80个字符','初始债权人名称长度不能超过80个字符','长度校验','人民银行','G_INIT_CRED_NAME','初始债权人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_G_30','20210415','TESTCORP','72','002','MBT_PM_210_G','I0000201_21X_G_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_G_30','20210415','TESTCORP','72','002','MBT_PM_212_G','I0000201_21X_G_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_G_31','20210319','TESTCORP','72','002','初始债权人机构代码长度必须等于18个字符','初始债权人机构代码长度必须等于18个字符','长度校验','人民银行','G_INIT_CRED_ORG_NM','初始债权人机构代码','R','Y','18','18','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_G_31','20210415','TESTCORP','72','002','MBT_PM_210_G','I0000201_21X_G_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_G_31','20210415','TESTCORP','72','002','MBT_PM_212_G','I0000201_21X_G_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_21X_K_30','20210319','TESTCORP','72','002','交易明细信息长度不能超过200个字符','交易明细信息长度不能超过200个字符','长度校验','人民银行','K_DET_INFO','交易明细信息','R','Y','1','200','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_21X_K_30','20210415','TESTCORP','72','002','MBT_PM_210_K','I0000201_21X_K_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_212_K_30','20210415','TESTCORP','72','002','MBT_PM_212_K','I0000201_21X_K_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_B_31','20210319','TESTCORP','72','002','债务人名称长度不能超过80个字符','债务人名称长度不能超过80个字符','长度校验','人民银行','B_NAME','债务人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_B_31','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000201_510_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_B_32','20210319','TESTCORP','72','002','债务人身份标识号码长度不能超过40个字符','债务人身份标识号码长度不能超过40个字符','长度校验','人民银行','B_CERT_NUM','债务人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_B_32','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000201_510_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_B_33','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','B_CERT_NUM','债务人身份标识号码','R','Y','','','if (!isEmpty(B_INFO_ID_TYPE) && !isEmpty(B_CERT_TYPE) && B_INFO_ID_TYPE==''1''  &&  B_CERT_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_B_33','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000201_510_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_B_34','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','B_CERT_NUM','债务人身份标识号码','R','Y','','','if (!isEmpty(B_INFO_ID_TYPE) && !isEmpty(B_CERT_TYPE) && B_INFO_ID_TYPE==''1''  &&  B_CERT_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_B_34','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000201_510_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_B_35','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','B_CERT_NUM','债务人身份标识号码','R','Y','','','if (!isEmpty(B_INFO_ID_TYPE) && !isEmpty(B_CERT_TYPE) && B_INFO_ID_TYPE==''2''  &&  B_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_B_35','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000201_510_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_B_36','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','B_CERT_NUM','债务人身份标识号码','R','Y','','','if (!isEmpty(B_INFO_ID_TYPE) && !isEmpty(B_CERT_TYPE) && B_INFO_ID_TYPE==''2''  &&  B_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_B_36','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000201_510_B_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_B_37','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','B_CERT_NUM','债务人身份标识号码','R','Y','','','if (!isEmpty(B_INFO_ID_TYPE) && !isEmpty(B_CERT_TYPE) && B_INFO_ID_TYPE==''2''  &&  B_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_B_37','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000201_510_B_37','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_B_38','20210319','TESTCORP','72','002','业务管理机构代码长度必须等于14位','业务管理机构代码长度必须等于14位','长度校验','人民银行','B_MNGMT_ORG_CODE','业务管理机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_B_38','20210415','TESTCORP','72','002','MBT_PM_510_B','I0000201_510_B_38','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_D_30','20210319','TESTCORP','72','002','其他债务人名称长度不能超过80个字符','其他债务人名称长度不能超过80个字符','长度校验','人民银行','D_GUAR_NAME','其他债务人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_D_30','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000201_510_D_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_D_31','20210319','TESTCORP','72','002','其他债务人身份标识号码长度不能超过40个字符','其他债务人身份标识号码长度不能超过40个字符','长度校验','人民银行','D_GUAR_CERT_NUM','其他债务人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_D_31','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000201_510_D_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_D_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','D_GUAR_CERT_NUM','其他债务人身份标识号码','R','Y','','','if (!isEmpty(D_INFO_ID_TYPE) && !isEmpty(D_GUAR_CERT_TYPE) && D_INFO_ID_TYPE==''1''  &&  D_GUAR_CERT_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_D_32','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000201_510_D_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_D_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','D_GUAR_CERT_NUM','其他债务人身份标识号码','R','Y','','','if (!isEmpty(D_INFO_ID_TYPE) && !isEmpty(D_GUAR_CERT_TYPE) && D_INFO_ID_TYPE==''1''  &&  D_GUAR_CERT_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_D_33','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000201_510_D_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_D_34','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','D_GUAR_CERT_NUM','其他债务人身份标识号码','R','Y','','','if (!isEmpty(D_INFO_ID_TYPE) && !isEmpty(D_GUAR_CERT_TYPE) && D_INFO_ID_TYPE==''2''  &&  D_GUAR_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_D_34','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000201_510_D_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_D_35','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','D_GUAR_CERT_NUM','其他债务人身份标识号码','R','Y','','','if (!isEmpty(D_INFO_ID_TYPE) && !isEmpty(D_GUAR_CERT_TYPE) && D_INFO_ID_TYPE==''2''  &&  D_GUAR_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_D_35','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000201_510_D_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_D_36','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','D_GUAR_CERT_NUM','其他债务人身份标识号码','R','Y','','','if (!isEmpty(D_INFO_ID_TYPE) && !isEmpty(D_GUAR_CERT_TYPE) && D_INFO_ID_TYPE==''2''  &&  D_GUAR_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_D_36','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000201_510_D_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_30','20210319','TESTCORP','72','002','抵押物唯一识别号长度不能超过40个字符','抵押物唯一识别号长度不能超过40个字符','长度校验','人民银行','E_PLE_CERT_ID','抵押物唯一识别号','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_30','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_31','20210319','TESTCORP','72','002','抵押人名称长度不能超过80个字符','抵押人名称长度不能超过80个字符','长度校验','人民银行','E_PLEDGOR_NAME','抵押人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_31','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_32','20210319','TESTCORP','72','002','抵押人身份标识号码长度不能超过40个字符','抵押人身份标识号码长度不能超过40个字符','长度校验','人民银行','E_PLEOR_CERT_NUM','抵押人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_32','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_33','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','E_PLEOR_CERT_NUM','抵押人身份标识号码','R','Y','','','if (!isEmpty(E_PLEDGOR_TYPE) && !isEmpty(E_PLEOR_CERT_TYPE) && E_PLEDGOR_TYPE==''1''  &&  E_PLEOR_CERT_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_33','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_34','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','E_PLEOR_CERT_NUM','抵押人身份标识号码','R','Y','','','if (!isEmpty(E_PLEDGOR_TYPE) && !isEmpty(E_PLEOR_CERT_TYPE) && E_PLEDGOR_TYPE==''1''  &&  E_PLEOR_CERT_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_34','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_35','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','E_PLEOR_CERT_NUM','抵押人身份标识号码','R','Y','','','if (!isEmpty(E_PLEDGOR_TYPE) && !isEmpty(E_PLEOR_CERT_TYPE) && E_PLEDGOR_TYPE==''2''  &&  E_PLEOR_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_35','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_36','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','E_PLEOR_CERT_NUM','抵押人身份标识号码','R','Y','','','if (!isEmpty(E_PLEDGOR_TYPE) && !isEmpty(E_PLEOR_CERT_TYPE) && E_PLEDGOR_TYPE==''2''  &&  责E_PLEOR_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_36','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_37','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','E_PLEOR_CERT_NUM','抵押人身份标识号码','R','Y','','','if (!isEmpty(E_PLEDGOR_TYPE) && !isEmpty(E_PLEOR_CERT_TYPE) && E_PLEDGOR_TYPE==''2''  &&  E_PLEOR_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_37','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_37','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_E_38','20210319','TESTCORP','72','002','抵押物说明长度不能超过200个字符','抵押物说明长度不能超过200个字符','长度校验','人民银行','E_PLE_DESC','抵押物说明','R','Y','1','200','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_E_38','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000201_510_E_38','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_F_30','20210319','TESTCORP','72','002','出质人名称长度不能超过80个字符','出质人名称长度不能超过80个字符','长度校验','人民银行','F_PAWN_NAME','出质人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_F_30','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000201_510_F_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_F_31','20210319','TESTCORP','72','002','出质人身份标识号码长度不能超过40个字符','出质人身份标识号码长度不能超过40个字符','长度校验','人民银行','F_PAWN_CERT_NUM','出质人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_F_31','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000201_510_F_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_F_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','F_PAWN_CERT_NUM','出质人身份标识号码','R','Y','','','if (!isEmpty(F_IPPC) && !isEmpty(F_PAWN_CERT_TYPE) && F_IPPC==''1''  &&  F_PAWN_CERT_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_F_32','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000201_510_F_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_F_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','F_PAWN_CERT_NUM','出质人身份标识号码','R','Y','','','if (!isEmpty(F_IPPC) && !isEmpty(F_PAWN_CERT_TYPE) && F_IPPC==''1''  &&  F_PAWN_CERT_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_F_33','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000201_510_F_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_F_34','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','F_PAWN_CERT_NUM','出质人身份标识号码','R','Y','','','if (!isEmpty(F_IPPC) && !isEmpty(F_PAWN_CERT_TYPE) && F_IPPC==''2''  &&  F_PAWN_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_F_34','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000201_510_F_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_F_35','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','F_PAWN_CERT_NUM','出质人身份标识号码','R','Y','','','if (!isEmpty(F_IPPC) && !isEmpty(F_PAWN_CERT_TYPE) && F_IPPC==''2''  &&  F_PAWN_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_F_35','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000201_510_F_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_510_F_36','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','F_PAWN_CERT_NUM','出质人身份标识号码','R','Y','','','if (!isEmpty(F_IPPC) && !isEmpty(F_PAWN_CERT_TYPE) && F_IPPC==''2''  &&  F_PAWN_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_510_F_36','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000201_510_F_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_22X_B_31','20210319','TESTCORP','72','002','受信人姓名长度不能超过30个字符','受信人姓名长度不能超过30个字符','长度校验','人民银行','B_NAME','受信人姓名','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_B_31','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000201_22X_B_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_B_31','20210415','TESTCORP','72','002','MBT_PM_222_B','I0000201_22X_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_22X_B_32','20210319','TESTCORP','72','002','受信人证件号码长度不能超过20个字符','受信人证件号码长度不能超过20个字符','长度校验','人民银行','B_ID_NUM','受信人证件号码','R','Y','1','20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_B_32','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000201_22X_B_32','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_B_32','20210415','TESTCORP','72','002','MBT_PM_222_B','I0000201_22X_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_22X_B_33','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','B_ID_NUM','受信人证件号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_B_33','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000201_22X_B_33','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_B_33','20210415','TESTCORP','72','002','MBT_PM_222_B','I0000201_22X_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_22X_B_34','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','B_ID_NUM','受信人证件号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_B_34','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000201_22X_B_34','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_B_34','20210415','TESTCORP','72','002','MBT_PM_222_B','I0000201_22X_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_22X_B_35','20210319','TESTCORP','72','002','业务管理机构代码长度必须等于14位','业务管理机构代码长度必须等于14位','长度校验','人民银行','B_MNGMT_ORG_CODE','业务管理机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_B_35','20210415','TESTCORP','72','002','MBT_PM_220_B','I0000201_22X_B_35','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_B_35','20210415','TESTCORP','72','002','MBT_PM_222_B','I0000201_22X_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_22X_C_30','20210319','TESTCORP','72','002','共同受信人名称长度不能超过80个字符','共同受信人名称长度不能超过80个字符','长度校验','人民银行','C_CERT_REL_NAME','共同受信人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_C_30','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000201_22X_C_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_C_30','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000201_22X_C_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_22X_C_31','20210319','TESTCORP','72','002','共同受信人身份标识号码长度不能超过40个字符','共同受信人身份标识号码长度不能超过40个字符','长度校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_C_31','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000201_22X_C_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_C_31','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000201_22X_C_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_22X_C_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','Y','','','if (!isEmpty(C_BRER_TYPE) && !isEmpty(C_CERT_REL_ID_TYPE) && C_BRER_TYPE==''1''  &&  C_CERT_REL_ID_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_C_32','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000201_22X_C_32','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_C_32','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000201_22X_C_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_22X_C_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','Y','','','if (!isEmpty(C_BRER_TYPE) && !isEmpty(C_CERT_REL_ID_TYPE) && C_BRER_TYPE==''1''  &&  C_CERT_REL_ID_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_C_33','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000201_22X_C_33','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_C_33','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000201_22X_C_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_22X_C_34','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','Y','','','if (!isEmpty(C_BRER_TYPE) && !isEmpty(C_CERT_REL_ID_TYPE) && C_BRER_TYPE==''2''  &&  C_CERT_REL_ID_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_C_34','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000201_22X_C_34','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_C_34','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000201_22X_C_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_22X_C_35','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','Y','','','if (!isEmpty(C_BRER_TYPE) && !isEmpty(C_CERT_REL_ID_TYPE) && C_BRER_TYPE==''2''  &&  C_CERT_REL_ID_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_C_35','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000201_22X_C_35','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_C_35','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000201_22X_C_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_22X_C_36','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','Y','','','if (!isEmpty(C_BRER_TYPE) && !isEmpty(C_CERT_REL_ID_TYPE) && C_BRER_TYPE==''2''  &&  C_CERT_REL_ID_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_22X_C_36','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000201_22X_C_36','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_222_C_36','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000201_22X_C_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_120_B_30','20210319','TESTCORP','72','002','A姓名长度不能超过30个字符','A姓名长度不能超过30个字符','长度校验','人民银行','NAME','A姓名','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_120_B_30','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000201_120_B_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_120_B_31','20210319','TESTCORP','72','002','A证件号码长度不能超过20个字符','A证件号码长度不能超过20个字符','长度校验','人民银行','ID_NUM','A证件号码','R','Y','1','20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_120_B_31','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000201_120_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_120_B_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','ID_NUM','A证件号码','R','Y','','','if (!isEmpty(ID_TYPE) && ID_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_120_B_32','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000201_120_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_120_B_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','ID_NUM','A证件号码','R','Y','','','if (!isEmpty(ID_TYPE) && ID_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_120_B_33','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000201_120_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_120_B_34','20210319','TESTCORP','72','002','B姓名长度不能超过30个字符','B姓名长度不能超过30个字符','长度校验','人民银行','FAM_MEM_NAME','B姓名','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_120_B_34','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000201_120_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_120_B_35','20210319','TESTCORP','72','002','B证件号码长度不能超过20个字符','B证件号码长度不能超过20个字符','长度校验','人民银行','FAM_MEM_CERT_NUM','B证件号码','R','Y','1','20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_120_B_35','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000201_120_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_120_B_36','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','FAM_MEM_CERT_NUM','B证件号码','R','Y','','','if (!isEmpty(FAM_MEM_CET_TYPE) && FAM_MEM_CET_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_120_B_36','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000201_120_B_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_120_B_37','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','FAM_MEM_CERT_NUM','B证件号码','R','Y','','','if (!isEmpty(FAM_MEM_CET_TYPE) && FAM_MEM_CET_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_120_B_37','20210415','TESTCORP','72','002','MBT_PM_120_B','I0000201_120_B_37','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_130_B_30','20210319','TESTCORP','72','002','姓名长度不能超过30个字符','姓名长度不能超过30个字符','长度校验','人民银行','NAME','姓名','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_130_B_30','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000201_130_B_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_130_B_31','20210319','TESTCORP','72','002','证件号码长度不能超过20个字符','证件号码长度不能超过20个字符','长度校验','人民银行','ID_NUM','证件号码','R','Y','1','20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_130_B_31','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000201_130_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_130_B_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','ID_NUM','证件号码','R','Y','','','if (!isEmpty(ID_TYPE) && ID_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_130_B_32','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000201_130_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_130_B_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','ID_NUM','证件号码','R','Y','','','if (!isEmpty(ID_TYPE) && ID_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_130_B_33','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000201_130_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_130_B_35','20210319','TESTCORP','72','002','证件签发机关名称长度不能超过80个字符','证件签发机关名称长度不能超过80个字符','长度校验','人民银行','ID_ORG_NAME','证件签发机关名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_130_B_35','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000201_130_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_130_B_36','20210319','TESTCORP','72','002','客户资料维护机构代码长度必须等于14位','客户资料维护机构代码长度必须等于14位','长度校验','人民银行','CIMOC','客户资料维护机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_130_B_36','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000201_130_B_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_B_30','20210319','TESTCORP','72','002','姓名长度不能超过30个字符','姓名长度不能超过30个字符','长度校验','人民银行','B_NAME','姓名','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_B_30','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000201_110_B_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_B_31','20210319','TESTCORP','72','002','证件号码长度不能超过20个字符','证件号码长度不能超过20个字符','长度校验','人民银行','B_ID_NUM','证件号码','R','Y','1','20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_B_31','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000201_110_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_B_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','B_ID_NUM','证件号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_B_32','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000201_110_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_B_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','B_ID_NUM','证件号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_B_33','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000201_110_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_B_34','20210319','TESTCORP','72','002','客户资料维护机构代码长度必须等于14位','客户资料维护机构代码长度必须等于14位','长度校验','人民银行','B_CIMOC','客户资料维护机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_B_34','20210415','TESTCORP','72','002','MBT_PM_110_B','I0000201_110_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_C_30','20210319','TESTCORP','72','002','姓名长度不能超过30个字符','姓名长度不能超过30个字符','长度校验','人民银行','ALIAS','姓名','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_C_30','20210415','TESTCORP','72','002','MBT_PM_110_C','I0000201_110_C_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_C_31','20210319','TESTCORP','72','002','证件号码（其他）长度不能超过20个字符','证件号码（其他）长度不能超过20个字符','长度校验','人民银行','OTH_ID_NUM','证件号码（其他）','R','Y','1','20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_C_31','20210415','TESTCORP','72','002','MBT_PM_110_C','I0000201_110_C_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_C_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','OTH_ID_NUM','证件号码（其他）','R','Y','','','if (!isEmpty(OTH_ID_TYPE) && OTH_ID_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_C_32','20210415','TESTCORP','72','002','MBT_PM_110_C','I0000201_110_C_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_C_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','OTH_ID_NUM','证件号码（其他）','R','Y','','','if (!isEmpty(OTH_ID_TYPE) && OTH_ID_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_C_33','20210415','TESTCORP','72','002','MBT_PM_110_C','I0000201_110_C_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_D_30','20210319','TESTCORP','72','002','户籍地址长度不能超过100个字符','户籍地址长度不能超过100个字符','长度校验','人民银行','D_HOUSE_ADD','户籍地址','R','Y','1','100','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_D_30','20210415','TESTCORP','72','002','MBT_PM_110_D','I0000201_110_D_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_D_31','20210319','TESTCORP','72','002','电子邮箱长度不能超过60个字符','电子邮箱长度不能超过60个字符','长度校验','人民银行','D_EMAIL','电子邮箱','R','Y','1','60','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_D_31','20210415','TESTCORP','72','002','MBT_PM_110_D','I0000201_110_D_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_G_30','20210319','TESTCORP','72','002','单位名称长度不能超过80个字符','单位名称长度不能超过80个字符','长度校验','人民银行','G_CPN_NAME','单位名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_G_30','20210415','TESTCORP','72','002','MBT_PM_110_G','I0000201_110_G_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_G_31','20210319','TESTCORP','72','002','单位详细地址长度不能超过100个字符','单位详细地址长度不能超过100个字符','长度校验','人民银行','G_CPN_ADDR','单位详细地址','R','Y','1','100','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_G_31','20210415','TESTCORP','72','002','MBT_PM_110_G','I0000201_110_G_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_G_32','20210319','TESTCORP','72','002','单位电话长度不能超过25个字符','单位电话长度不能超过25个字符','长度校验','人民银行','G_CPN_TEL','单位电话','R','Y','1','25','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_G_32','20210415','TESTCORP','72','002','MBT_PM_110_G','I0000201_110_G_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_H_30','20210319','TESTCORP','72','002','居住地详细地址长度不能超过100个字符','居住地详细地址长度不能超过100个字符','长度校验','人民银行','H_RESI_ADDR','居住地详细地址','R','Y','1','100','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_H_30','20210415','TESTCORP','72','002','MBT_PM_110_H','I0000201_110_H_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_H_31','20210319','TESTCORP','72','002','住宅电话长度不能超过25个字符','住宅电话长度不能超过25个字符','长度校验','人民银行','H_HOME_TEL','住宅电话','R','Y','1','25','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_H_31','20210415','TESTCORP','72','002','MBT_PM_110_H','I0000201_110_H_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_I_30','20210319','TESTCORP','72','002','通讯地址长度不能超过100个字符','通讯地址长度不能超过100个字符','长度校验','人民银行','I_MAIL_ADDR','通讯地址','R','Y','1','100','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_I_30','20210415','TESTCORP','72','002','MBT_PM_110_I','I0000201_110_I_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_E_30','20210319','TESTCORP','72','002','配偶姓名长度不能超过30个字符','配偶姓名长度不能超过30个字符','长度校验','人民银行','E_SPO_NAME','配偶姓名','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_E_30','20210415','TESTCORP','72','002','MBT_PM_110_E','I0000201_110_E_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_E_31','20210319','TESTCORP','72','002','配偶证件号码长度不能超过20个字符','配偶证件号码长度不能超过20个字符','长度校验','人民银行','E_SPO_ID_NUM','配偶证件号码','R','Y','1','20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_E_31','20210415','TESTCORP','72','002','MBT_PM_110_E','I0000201_110_E_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_E_32','20210319','TESTCORP','72','002','配偶联系电话长度不能超过25个字符','配偶联系电话长度不能超过25个字符','长度校验','人民银行','E_SPO_TEL','配偶联系电话','R','Y','1','25','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_E_32','20210415','TESTCORP','72','002','MBT_PM_110_E','I0000201_110_E_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_E_33','20210319','TESTCORP','72','002','配偶工作单位长度不能超过80个字符','配偶工作单位长度不能超过80个字符','长度校验','人民银行','E_SPS_CMPY_NM','配偶工作单位','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_E_33','20210415','TESTCORP','72','002','MBT_PM_110_E','I0000201_110_E_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_E_34','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','E_SPO_ID_NUM','配偶证件号码','R','Y','','','if (!isEmpty(E_SPO_ID_TYPE) && E_SPO_ID_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_E_34','20210415','TESTCORP','72','002','MBT_PM_110_E','I0000201_110_E_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_110_E_35','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','E_SPO_ID_NUM','配偶证件号码','R','Y','','','if (!isEmpty(E_SPO_ID_TYPE) && E_SPO_ID_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_110_E_35','20210415','TESTCORP','72','002','MBT_PM_110_E','I0000201_110_E_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_B_30','20210319','TESTCORP','72','002','企业名称长度不能超过80个字符','企业名称长度不能超过80个字符','长度校验','人民银行','B_ENT_NAME','企业名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_B_30','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000201_310_B_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_B_31','20210319','TESTCORP','72','002','企业身份标识号码长度不能超过40个字符','企业身份标识号码长度不能超过40个字符','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_B_31','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000201_310_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_B_33','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT) && B_ENT_CERT==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_B_33','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000201_310_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_B_34','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT) && B_ENT_CERT==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_B_34','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000201_310_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_B_35','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT) && B_ENT_CERT==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_B_35','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000201_310_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_B_32','20210319','TESTCORP','72','002','客户资料维护机构代码长度必须等于14位','客户资料维护机构代码长度必须等于14位','长度校验','人民银行','B_CIMOC','客户资料维护机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_B_32','20210415','TESTCORP','72','002','MBT_PM_310_B','I0000201_310_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_C_30','20210319','TESTCORP','72','002','企业身份标识号码（其他）长度不能超过40个字符','企业身份标识号码（其他）长度不能超过40个字符','长度校验','人民银行','OTH_ENT_CERT_NUM','企业身份标识号码（其他）','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_C_30','20210415','TESTCORP','72','002','MBT_PM_310_C','I0000201_310_C_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_C_31','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','OTH_ENT_CERT_NUM','企业身份标识号码（其他）','R','Y','','','if (!isEmpty(OTH_ENT_CERT_TYPE) && OTH_ENT_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_C_31','20210415','TESTCORP','72','002','MBT_PM_310_C','I0000201_310_C_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_C_32','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','OTH_ENT_CERT_NUM','企业身份标识号码（其他）','R','Y','','','if (!isEmpty(OTH_ENT_CERT_TYPE) && OTH_ENT_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_C_32','20210415','TESTCORP','72','002','MBT_PM_310_C','I0000201_310_C_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_C_33','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','OTH_ENT_CERT_NUM','企业身份标识号码（其他）','R','Y','','','if (!isEmpty(OTH_ENT_CERT_TYPE) && OTH_ENT_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_C_33','20210415','TESTCORP','72','002','MBT_PM_310_C','I0000201_310_C_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_D_30','20210319','TESTCORP','72','002','登记地址长度不能超过100个字符','登记地址长度不能超过100个字符','长度校验','人民银行','D_REG_ADD','登记地址','R','Y','1','100','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_D_30','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000201_310_D_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_D_31','20210319','TESTCORP','72','002','业务范围长度不能超过400个字符','业务范围长度不能超过400个字符','长度校验','人民银行','D_BIZ_RANGE','业务范围','R','Y','1','400','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_D_31','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000201_310_D_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_E_30','20210319','TESTCORP','72','002','主要组成人员姓名长度不能超过30个字符','主要组成人员姓名长度不能超过30个字符','长度校验','人民银行','MMB_ALIAS','主要组成人员姓名','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_E_30','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000201_310_E_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_E_31','20210319','TESTCORP','72','002','主要组成人员证件号码长度不能超过20个字符','主要组成人员证件号码长度不能超过20个字符','长度校验','人民银行','MMB_ID_NUM','主要组成人员证件号码','R','Y','1','20','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_E_31','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000201_310_E_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_E_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','MMB_ID_NUM','主要组成人员证件号码','R','Y','','','if (!isEmpty(MMB_ID_TYPE) && MMB_ID_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_E_32','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000201_310_E_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_E_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','MMB_ID_NUM','主要组成人员证件号码','R','Y','','','if (!isEmpty(MMB_ID_TYPE) && MMB_ID_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_E_33','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000201_310_E_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_F_30','20210319','TESTCORP','72','002','出资人名称长度不能超过80个字符','出资人名称长度不能超过80个字符','长度校验','人民银行','SHAR_HOD_NAME','出资人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_F_30','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000201_310_F_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_F_31','20210319','TESTCORP','72','002','出资人身份标识号码长度不能超过40个字符','出资人身份标识号码长度不能超过40个字符','长度校验','人民银行','SHAR_HOD_ID_NUM','出资人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_F_31','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000201_310_F_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_F_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','SHAR_HOD_ID_NUM','出资人身份标识号码','R','Y','','','if (!isEmpty(SHAR_HOD_CERT_TYPE) && !isEmpty(SHAR_HOD_ID_TYPE) && SHAR_HOD_CERT_TYPE==''1''  &&  SHAR_HOD_ID_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_F_32','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000201_310_F_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_F_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','SHAR_HOD_ID_NUM','出资人身份标识号码','R','Y','','','if (!isEmpty(SHAR_HOD_CERT_TYPE) && !isEmpty(SHAR_HOD_ID_TYPE) && SHAR_HOD_CERT_TYPE==''1''  &&  SHAR_HOD_ID_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_F_33','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000201_310_F_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_F_34','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','SHAR_HOD_ID_NUM','出资人身份标识号码','R','Y','','','if (!isEmpty(SHAR_HOD_CERT_TYPE) && !isEmpty(SHAR_HOD_ID_TYPE) && SHAR_HOD_CERT_TYPE==''2''  &&  SHAR_HOD_ID_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_F_34','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000201_310_F_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_F_35','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','SHAR_HOD_ID_NUM','出资人身份标识号码','R','Y','','','if (!isEmpty(SHAR_HOD_CERT_TYPE) && !isEmpty(SHAR_HOD_ID_TYPE) && SHAR_HOD_CERT_TYPE==''2''  &&  SHAR_HOD_ID_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_F_35','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000201_310_F_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_F_36','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','SHAR_HOD_ID_NUM','出资人身份标识号码','R','Y','','','if (!isEmpty(SHAR_HOD_CERT_TYPE) && !isEmpty(SHAR_HOD_ID_TYPE) && SHAR_HOD_CERT_TYPE==''2''  &&  SHAR_HOD_ID_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_F_36','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000201_310_F_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_G_30','20210319','TESTCORP','72','002','实际控制人名称长度不能超过80个字符','实际控制人名称长度不能超过80个字符','长度校验','人民银行','ACTU_COTRL_NAME','实际控制人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_G_30','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000201_310_G_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_G_31','20210319','TESTCORP','72','002','实际控制人身份标识号码长度不能超过40个字符','实际控制人身份标识号码长度不能超过40个字符','长度校验','人民银行','ACTU_COTRL_ID_NUM','实际控制人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_G_31','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000201_310_G_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_G_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','ACTU_COTRL_ID_NUM','实际控制人身份标识号码','R','Y','','','if (!isEmpty(ACTU_COTRL_CERT_TYPE) && !isEmpty(ACTU_COTRL_ID_TYPE) && ACTU_COTRL_CERT_TYPE==''1''  &&  ACTU_COTRL_ID_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_G_32','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000201_310_G_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_G_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','ACTU_COTRL_ID_NUM','实际控制人身份标识号码','R','Y','','','if (!isEmpty(ACTU_COTRL_CERT_TYPE) && !isEmpty(ACTU_COTRL_ID_TYPE) && ACTU_COTRL_CERT_TYPE==''1''  &&  ACTU_COTRL_ID_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_G_33','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000201_310_G_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_G_34','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','ACTU_COTRL_ID_NUM','实际控制人身份标识号码','R','Y','','','if (!isEmpty(ACTU_COTRL_CERT_TYPE) && !isEmpty(ACTU_COTRL_ID_TYPE) && ACTU_COTRL_CERT_TYPE==''2''  &&  ACTU_COTRL_ID_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_G_34','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000201_310_G_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_G_35','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','ACTU_COTRL_ID_NUM','实际控制人身份标识号码','R','Y','','','if (!isEmpty(ACTU_COTRL_CERT_TYPE) && !isEmpty(ACTU_COTRL_ID_TYPE) && ACTU_COTRL_CERT_TYPE==''2''  &&  ACTU_COTRL_ID_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_G_35','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000201_310_G_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_G_36','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','ACTU_COTRL_ID_NUM','实际控制人身份标识号码','R','Y','','','if (!isEmpty(ACTU_COTRL_CERT_TYPE) && !isEmpty(ACTU_COTRL_ID_TYPE) && ACTU_COTRL_CERT_TYPE==''2''  &&  ACTU_COTRL_ID_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_G_36','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000201_310_G_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_H_30','20210319','TESTCORP','72','002','上级机构名称长度不能超过80个字符','上级机构名称长度不能超过80个字符','长度校验','人民银行','H_SUP_ORG_NAME','上级机构名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_H_30','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000201_310_H_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_H_31','20210319','TESTCORP','72','002','上级机构身份标识号码长度不能超过40个字符','上级机构身份标识号码长度不能超过40个字符','长度校验','人民银行','H_SUP_ORG_CERT_NUM','上级机构身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_H_31','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000201_310_H_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_H_32','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','H_SUP_ORG_CERT_NUM','上级机构身份标识号码','R','Y','','','if (!isEmpty(H_SUP_ORG_CERT_TYPE) && H_SUP_ORG_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_H_32','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000201_310_H_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_H_33','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','H_SUP_ORG_CERT_NUM','上级机构身份标识号码','R','Y','','','if (!isEmpty(H_SUP_ORG_CERT_TYPE) && H_SUP_ORG_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_H_33','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000201_310_H_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_H_34','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','H_SUP_ORG_CERT_NUM','上级机构身份标识号码','R','Y','','','if (!isEmpty(H_SUP_ORG_CERT_TYPE) && H_SUP_ORG_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_H_34','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000201_310_H_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_I_30','20210319','TESTCORP','72','002','联系地址长度不能超过100个字符','联系地址长度不能超过100个字符','长度校验','人民银行','I_CON_ADD','联系地址','R','Y','1','100','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_I_30','20210415','TESTCORP','72','002','MBT_PM_310_I','I0000201_310_I_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_I_31','20210319','TESTCORP','72','002','联系电话长度不能超过25个字符','联系电话长度不能超过25个字符','长度校验','人民银行','I_CON_PHONE','联系电话','R','Y','1','25','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_I_31','20210415','TESTCORP','72','002','MBT_PM_310_I','I0000201_310_I_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_310_I_32','20210319','TESTCORP','72','002','财务部门联系电话长度不能超过25个字符','财务部门联系电话长度不能超过25个字符','长度校验','人民银行','I_FIN_CON_PHONE','财务部门联系电话','R','Y','1','25','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_310_I_32','20210415','TESTCORP','72','002','MBT_PM_310_I','I0000201_310_I_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_30','20210319','TESTCORP','72','002','A企业名称长度不能超过80个字符','A企业名称长度不能超过80个字符','长度校验','人民银行','B_ENT_NAME','A企业名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_30','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_31','20210319','TESTCORP','72','002','A企业身份标识号码长度不能超过40个字符','A企业身份标识号码长度不能超过40个字符','长度校验','人民银行','B_ENT_CERT_NUM','A企业身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_31','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_32','20210319','TESTCORP','72','002','B企业名称长度不能超过80个字符','B企业名称长度不能超过80个字符','长度校验','人民银行','B_ASSO_ENT_NAME','B企业名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_32','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_33','20210319','TESTCORP','72','002','B企业身份标识号码长度不能超过40个字符','B企业身份标识号码长度不能超过40个字符','长度校验','人民银行','B_ASSO_ENT_CERT_NUM','B企业身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_33','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_34','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','B_ENT_CERT_NUM','A企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_34','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_35','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','B_ENT_CERT_NUM','A企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_35','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_36','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','B_ENT_CERT_NUM','A企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_36','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_37','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','B_ASSO_ENT_CERT_NUM','B企业身份标识号码','R','Y','','','if (!isEmpty(B_ASSO_ENT_CERT_TYPE) && B_ASSO_ENT_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_37','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_37','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_38','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','B_ASSO_ENT_CERT_NUM','B企业身份标识号码','R','Y','','','if (!isEmpty(B_ASSO_ENT_CERT_TYPE) && B_ASSO_ENT_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_38','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_38','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_350_B_39','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','B_ASSO_ENT_CERT_NUM','B企业身份标识号码','R','Y','','','if (!isEmpty(B_ASSO_ENT_CERT_TYPE) && B_ASSO_ENT_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_350_B_39','20210415','TESTCORP','72','002','MBT_PM_350_B','I0000201_350_B_39','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_B_30','20210319','TESTCORP','72','002','借款人名称长度不能超过80个字符','借款人名称长度不能超过80个字符','长度校验','人民银行','B_NAME','借款人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_B_30','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000201_41X_B_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_B_30','20210415','TESTCORP','72','002','MBT_PM_412_B','I0000201_41X_B_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_B_31','20210319','TESTCORP','72','002','借款人身份标识号码长度不能超过40个字符','借款人身份标识号码长度不能超过40个字符','长度校验','人民银行','B_ID_NUM','借款人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_B_31','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000201_41X_B_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_B_31','20210415','TESTCORP','72','002','MBT_PM_412_B','I0000201_41X_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_B_32','20210319','TESTCORP','72','002','业务管理机构代码长度必须等于14位','业务管理机构代码长度必须等于14位','长度校验','人民银行','B_MNGMT_ORG_CODE','业务管理机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_B_32','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000201_41X_B_32','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_B_32','20210415','TESTCORP','72','002','MBT_PM_412_B','I0000201_41X_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_B_33','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','B_ID_NUM','借款人身份标识号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_B_33','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000201_41X_B_33','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_B_33','20210415','TESTCORP','72','002','MBT_PM_412_B','I0000201_41X_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_B_34','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','B_ID_NUM','借款人身份标识号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_B_34','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000201_41X_B_34','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_B_34','20210415','TESTCORP','72','002','MBT_PM_412_B','I0000201_41X_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_B_35','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','B_ID_NUM','借款人身份标识号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_B_35','20210415','TESTCORP','72','002','MBT_PM_410_B','I0000201_41X_B_35','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_B_35','20210415','TESTCORP','72','002','MBT_PM_412_B','I0000201_41X_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_D_30','20210319','TESTCORP','72','002','责任人名称长度不能超过80个字符','责任人名称长度不能超过80个字符','长度校验','人民银行','D_ARLP_NAME','责任人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_D_30','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000201_41X_D_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_D_30','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000201_41X_D_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_D_31','20210319','TESTCORP','72','002','责任人身份标识号码长度不能超过40个字符','责任人身份标识号码长度不能超过40个字符','长度校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_D_31','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000201_41X_D_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_D_31','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000201_41X_D_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_D_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(D_ARLP_ID_TYPE) && !isEmpty(D_ARLP_CERT_TYPE) && D_ARLP_ID_TYPE==''1''  &&  D_ARLP_CERT_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_D_32','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000201_41X_D_32','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_D_32','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000201_41X_D_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_D_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(D_ARLP_ID_TYPE) && !isEmpty(D_ARLP_CERT_TYPE) && D_ARLP_ID_TYPE==''1''  &&  D_ARLP_CERT_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_D_33','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000201_41X_D_33','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_D_33','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000201_41X_D_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_D_34','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(D_ARLP_ID_TYPE) && !isEmpty(D_ARLP_CERT_TYPE) && D_ARLP_ID_TYPE==''2''  &&  D_ARLP_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_D_34','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000201_41X_D_34','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_D_34','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000201_41X_D_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_D_35','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(D_ARLP_ID_TYPE) && !isEmpty(D_ARLP_CERT_TYPE) && D_ARLP_ID_TYPE==''2''  &&  D_ARLP_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_D_35','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000201_41X_D_35','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_D_35','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000201_41X_D_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_D_36','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','D_ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(D_ARLP_ID_TYPE) && !isEmpty(D_ARLP_CERT_TYPE) && D_ARLP_ID_TYPE==''2''  &&  D_ARLP_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_D_36','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000201_41X_D_36','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_D_36','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000201_41X_D_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_G_30','20210319','TESTCORP','72','002','初始债权人名称长度不能超过80个字符','初始债权人名称长度不能超过80个字符','长度校验','人民银行','G_INIT_CRED_NAME','初始债权人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_G_30','20210415','TESTCORP','72','002','MBT_PM_410_G','I0000201_41X_G_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_G_30','20210415','TESTCORP','72','002','MBT_PM_412_G','I0000201_41X_G_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_G_31','20210319','TESTCORP','72','002','初始债权人机构代码长度必须等于18位','初始债权人机构代码长度必须等于18位','长度校验','人民银行','G_INIT_CED_ORG_CODE','初始债权人机构代码','R','Y','18','18','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_G_31','20210415','TESTCORP','72','002','MBT_PM_410_G','I0000201_41X_G_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_G_31','20210415','TESTCORP','72','002','MBT_PM_412_G','I0000201_41X_G_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_41X_I_31','20210319','TESTCORP','72','002','交易明细信息长度不能超过200个字符','交易明细信息长度不能超过200个字符','长度校验','人民银行','I_DET_INFO','交易明细信息','R','Y','1','200','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_41X_I_31','20210415','TESTCORP','72','002','MBT_PM_410_I','I0000201_41X_I_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_412_I_31','20210415','TESTCORP','72','002','MBT_PM_412_I','I0000201_41X_I_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_42X_B_30','20210319','TESTCORP','72','002','共同受信人名称长度不能超过80个字符','共同受信人名称长度不能超过80个字符','长度校验','人民银行','B_NAME','受信人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_B_30','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000201_42X_B_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_B_30','20210415','TESTCORP','72','002','MBT_PM_422_B','I0000201_42X_B_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_42X_B_31','20210319','TESTCORP','72','002','共同受信人身份标识号码长度不能超过40个字符','共同受信人身份标识号码长度不能超过40个字符','长度校验','人民银行','B_ID_NUM','受信人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_B_31','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000201_42X_B_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_B_31','20210415','TESTCORP','72','002','MBT_PM_422_B','I0000201_42X_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_42X_B_32','20210319','TESTCORP','72','002','业务管理机构代码长度必须等于14位','业务管理机构代码长度必须等于14位','长度校验','人民银行','B_MNGMT_ORG_CODE','业务管理机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_B_32','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000201_42X_B_32','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_B_32','20210415','TESTCORP','72','002','MBT_PM_422_B','I0000201_42X_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_42X_B_33','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','B_ID_NUM','受信人身份标识号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_B_33','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000201_42X_B_33','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_B_33','20210415','TESTCORP','72','002','MBT_PM_422_B','I0000201_42X_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_42X_B_34','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','B_ID_NUM','受信人身份标识号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_B_34','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000201_42X_B_34','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_B_34','20210415','TESTCORP','72','002','MBT_PM_422_B','I0000201_42X_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_42X_B_35','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','B_ID_NUM','受信人身份标识号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_B_35','20210415','TESTCORP','72','002','MBT_PM_420_B','I0000201_42X_B_35','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_B_35','20210415','TESTCORP','72','002','MBT_PM_422_B','I0000201_42X_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_42X_C_30','20210319','TESTCORP','72','002','共同受信人名称长度不能超过80个字符','共同受信人名称长度不能超过80个字符','长度校验','人民银行','C_CERT_REL_NAME','共同受信人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_C_30','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000201_42X_C_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_C_30','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000201_42X_C_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_42X_C_31','20210319','TESTCORP','72','002','共同受信人身份标识号码长度不能超过40个字符','共同受信人身份标识号码长度不能超过40个字符','长度校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_C_31','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000201_42X_C_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_C_31','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000201_42X_C_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_42X_C_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','Y','','','if (!isEmpty(C_BRER_TYPE) && !isEmpty(C_CERT_REL_ID_TYPE) && C_BRER_TYPE==''1''  &&  C_CERT_REL_ID_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_C_32','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000201_42X_C_32','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_C_32','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000201_42X_C_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_42X_C_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','Y','','','if (!isEmpty(C_BRER_TYPE) && !isEmpty(C_CERT_REL_ID_TYPE) && C_BRER_TYPE==''1''  &&  C_CERT_REL_ID_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_C_33','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000201_42X_C_33','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_C_33','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000201_42X_C_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_42X_C_34','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','Y','','','if (!isEmpty(C_BRER_TYPE) && !isEmpty(C_CERT_REL_ID_TYPE) && C_BRER_TYPE==''2''  &&  C_CERT_REL_ID_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_C_34','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000201_42X_C_34','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_C_34','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000201_42X_C_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_42X_C_35','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','Y','','','if (!isEmpty(C_BRER_TYPE) && !isEmpty(C_CERT_REL_ID_TYPE) && C_BRER_TYPE==''2''  &&  C_CERT_REL_ID_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_C_35','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000201_42X_C_35','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_C_35','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000201_42X_C_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_42X_C_36','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','C_CERT_REL_ID_NUM','共同受信人身份标识号码','R','Y','','','if (!isEmpty(C_BRER_TYPE) && !isEmpty(C_CERT_REL_ID_TYPE) && C_BRER_TYPE==''2''  &&  C_CERT_REL_ID_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_42X_C_36','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000201_42X_C_36','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_422_C_36','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000201_42X_C_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_B_30','20210319','TESTCORP','72','002','债务人名称长度不能超过80个字符','债务人名称长度不能超过80个字符','长度校验','人民银行','B_NAME','债务人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_B_30','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000201_44X_B_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_B_30','20210415','TESTCORP','72','002','MBT_PM_442_B','I0000201_44X_B_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_B_31','20210319','TESTCORP','72','002','债务人身份标识号码长度不能超过40个字符','债务人身份标识号码长度不能超过40个字符','长度校验','人民银行','B_ID_NUM','债务人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_B_31','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000201_44X_B_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_B_31','20210415','TESTCORP','72','002','MBT_PM_442_B','I0000201_44X_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_B_32','20210319','TESTCORP','72','002','业务管理机构代码长度必须等于14位','业务管理机构代码长度必须等于14位','长度校验','人民银行','B_MNGMT_ORG_CODE','业务管理机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_B_32','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000201_44X_B_32','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_B_32','20210415','TESTCORP','72','002','MBT_PM_442_B','I0000201_44X_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_B_33','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','B_ID_NUM','债务人身份标识号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_B_33','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000201_44X_B_33','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_B_33','20210415','TESTCORP','72','002','MBT_PM_442_B','I0000201_44X_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_B_34','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','B_ID_NUM','债务人身份标识号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_B_34','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000201_44X_B_34','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_B_34','20210415','TESTCORP','72','002','MBT_PM_442_B','I0000201_44X_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_B_35','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','B_ID_NUM','债务人身份标识号码','R','Y','','','if (!isEmpty(B_ID_TYPE) && B_ID_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_B_35','20210415','TESTCORP','72','002','MBT_PM_440_B','I0000201_44X_B_35','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_B_35','20210415','TESTCORP','72','002','MBT_PM_442_B','I0000201_44X_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_C_30','20210319','TESTCORP','72','002','担保合同文本编号长度不能超过60个字符','担保合同文本编号长度不能超过60个字符','长度校验','人民银行','C_CTRCT_TXT_CODE','担保合同文本编号','R','Y','1','60','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_C_30','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000201_44X_C_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_C_30','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000201_44X_C_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_E_30','20210319','TESTCORP','72','002','责任人名称长度不能超过80个字符','责任人名称长度不能超过80个字符','长度校验','人民银行','ARLP_NAME','责任人名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_E_30','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000201_44X_E_30','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_E_30','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000201_44X_E_30','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_E_31','20210319','TESTCORP','72','002','责任人身份标识号码长度不能超过40个字符','责任人身份标识号码长度不能超过40个字符','长度校验','人民银行','ARLP_CERT_NUM','责任人身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_E_31','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000201_44X_E_31','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_E_31','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000201_44X_E_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_E_32','20210319','TESTCORP','72','002','公民身份证号码长度必须18位','公民身份证号码长度必须18位','长度校验','人民银行','ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(INFO_ID_TYPE) && !isEmpty(ARLP_CERT_TYPE) && INFO_ID_TYPE==''1''  &&  ARLP_CERT_TYPE==''10'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_E_32','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000201_44X_E_32','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_E_32','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000201_44X_E_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_E_33','20210319','TESTCORP','72','002','护照的证件号码长度不超过12位','护照的证件号码长度不超过12位','长度校验','人民银行','ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(INFO_ID_TYPE) && !isEmpty(ARLP_CERT_TYPE) && INFO_ID_TYPE==''1''  &&  ARLP_CERT_TYPE==''2'') {
    if ($value.length() < 1 || $value.length() > 12) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_E_33','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000201_44X_E_33','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_E_33','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000201_44X_E_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_E_34','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(INFO_ID_TYPE) && !isEmpty(ARLP_CERT_TYPE) && INFO_ID_TYPE==''2''  &&  ARLP_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_E_34','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000201_44X_E_34','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_E_34','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000201_44X_E_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_E_35','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(INFO_ID_TYPE) && !isEmpty(ARLP_CERT_TYPE) && INFO_ID_TYPE==''2''  &&  ARLP_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_E_35','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000201_44X_E_35','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_E_35','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000201_44X_E_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_44X_E_36','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','ARLP_CERT_NUM','责任人身份标识号码','R','Y','','','if (!isEmpty(INFO_ID_TYPE) && !isEmpty(ARLP_CERT_TYPE) && INFO_ID_TYPE==''2''  &&  ARLP_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_44X_E_36','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000201_44X_E_36','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_442_E_36','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000201_44X_E_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_610_B_31','20210319','TESTCORP','72','002','企业名称长度不能超过80个字符','企业名称长度不能超过80个字符','长度校验','人民银行','B_ENT_NAME','企业名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_610_B_31','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000201_610_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_610_B_32','20210319','TESTCORP','72','002','企业身份标识号码长度不能超过40个字符','企业身份标识号码长度不能超过40个字符','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_610_B_32','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000201_610_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_610_B_33','20210319','TESTCORP','72','002','审计事务所名称长度不能超过80个字符','审计事务所名称长度不能超过80个字符','长度校验','人民银行','B_AUDIT_FIRM_NAME','审计事务所名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_610_B_33','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000201_610_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_610_B_34','20210319','TESTCORP','72','002','审计人员名称不能超过30个字符','审计人员名称不能超过30个字符','长度校验','人民银行','B_AUDITOR_NAME','审计人员名称','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_610_B_34','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000201_610_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_610_B_35','20210319','TESTCORP','72','002','客户资料维护机构代码长度必须等于14位','客户资料维护机构代码长度必须等于14位','长度校验','人民银行','B_CIMOC','客户资料维护机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_610_B_35','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000201_610_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_610_B_36','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_610_B_36','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000201_610_B_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_610_B_37','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_610_B_37','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000201_610_B_37','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_610_B_38','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_610_B_38','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000201_610_B_38','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_620_B_31','20210319','TESTCORP','72','002','企业名称长度不能超过80个字符','企业名称长度不能超过80个字符','长度校验','人民银行','B_ENT_NAME','企业名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_620_B_31','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000201_620_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_620_B_32','20210319','TESTCORP','72','002','企业身份标识号码长度不能超过40个字符','企业身份标识号码长度不能超过40个字符','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_620_B_32','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000201_620_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_620_B_33','20210319','TESTCORP','72','002','审计事务所名称长度不能超过80个字符','审计事务所名称长度不能超过80个字符','长度校验','人民银行','B_AUDIT_FIRM_NAME','审计事务所名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_620_B_33','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000201_620_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_620_B_34','20210319','TESTCORP','72','002','审计人员名称不能超过30个字符','审计人员名称不能超过30个字符','长度校验','人民银行','B_AUDITOR_NAME','审计人员名称','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_620_B_34','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000201_620_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_620_B_35','20210319','TESTCORP','72','002','客户资料维护机构代码长度必须等于14位','客户资料维护机构代码长度必须等于14位','长度校验','人民银行','B_CIMOC','客户资料维护机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_620_B_35','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000201_620_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_620_B_36','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_620_B_36','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000201_620_B_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_620_B_37','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_620_B_37','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000201_620_B_37','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_620_B_38','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_620_B_38','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000201_620_B_38','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_630_B_31','20210319','TESTCORP','72','002','企业名称长度不能超过80个字符','企业名称长度不能超过80个字符','长度校验','人民银行','B_ENT_NAME','企业名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_630_B_31','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000201_630_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_630_B_32','20210319','TESTCORP','72','002','企业身份标识号码长度不能超过40个字符','企业身份标识号码长度不能超过40个字符','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_630_B_32','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000201_630_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_630_B_33','20210319','TESTCORP','72','002','审计事务所名称长度不能超过80个字符','审计事务所名称长度不能超过80个字符','长度校验','人民银行','B_AUDIT_FIRM_NAME','审计事务所名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_630_B_33','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000201_630_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_630_B_34','20210319','TESTCORP','72','002','审计人员名称不能超过30个字符','审计人员名称不能超过30个字符','长度校验','人民银行','B_AUDITOR_NAME','审计人员名称','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_630_B_34','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000201_630_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_630_B_35','20210319','TESTCORP','72','002','客户资料维护机构代码长度必须等于14位','客户资料维护机构代码长度必须等于14位','长度校验','人民银行','B_CIMOC','客户资料维护机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_630_B_35','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000201_630_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_630_B_36','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_630_B_36','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000201_630_B_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_630_B_37','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_630_B_37','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000201_630_B_37','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_630_B_38','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_630_B_38','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000201_630_B_38','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_640_B_31','20210319','TESTCORP','72','002','企业名称长度不能超过80个字符','企业名称长度不能超过80个字符','长度校验','人民银行','B_ENT_NAME','企业名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_640_B_31','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000201_640_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_640_B_32','20210319','TESTCORP','72','002','企业身份标识号码长度不能超过40个字符','企业身份标识号码长度不能超过40个字符','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_640_B_32','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000201_640_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_640_B_33','20210319','TESTCORP','72','002','审计事务所名称长度不能超过80个字符','审计事务所名称长度不能超过80个字符','长度校验','人民银行','B_AUDIT_FIRM_NAME','审计事务所名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_640_B_33','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000201_640_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_640_B_34','20210319','TESTCORP','72','002','审计人员名称不能超过30个字符','审计人员名称不能超过30个字符','长度校验','人民银行','B_AUDITOR_NAME','审计人员名称','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_640_B_34','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000201_640_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_640_B_35','20210319','TESTCORP','72','002','客户资料维护机构代码长度必须等于14位','客户资料维护机构代码长度必须等于14位','长度校验','人民银行','B_CIMOC','客户资料维护机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_640_B_35','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000201_640_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_640_B_36','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_640_B_36','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000201_640_B_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_640_B_37','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_640_B_37','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000201_640_B_37','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_640_B_38','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_640_B_38','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000201_640_B_38','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_650_B_31','20210319','TESTCORP','72','002','企业名称长度不能超过80个字符','企业名称长度不能超过80个字符','长度校验','人民银行','B_ENT_NAME','企业名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_650_B_31','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000201_650_B_31','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_650_B_32','20210319','TESTCORP','72','002','企业身份标识号码长度不能超过40个字符','企业身份标识号码长度不能超过40个字符','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','1','40','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_650_B_32','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000201_650_B_32','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_650_B_33','20210319','TESTCORP','72','002','审计事务所名称长度不能超过80个字符','审计事务所名称长度不能超过80个字符','长度校验','人民银行','B_AUDIT_FIRM_NAME','审计事务所名称','R','Y','1','80','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_650_B_33','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000201_650_B_33','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_650_B_34','20210319','TESTCORP','72','002','审计人员名称不能超过30个字符','审计人员名称不能超过30个字符','长度校验','人民银行','B_AUDITOR_NAME','审计人员名称','R','Y','1','30','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_650_B_34','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000201_650_B_34','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_650_B_35','20210319','TESTCORP','72','002','客户资料维护机构代码长度必须等于14位','客户资料维护机构代码长度必须等于14位','长度校验','人民银行','B_CIMOC','客户资料维护机构代码','R','Y','14','14','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_650_B_35','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000201_650_B_35','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_650_B_36','20210319','TESTCORP','72','002','组织机构代码长度必须等于9位','组织机构代码长度必须等于9位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''30'') {
    if ($value.length() < 9 || $value.length() > 9) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_650_B_36','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000201_650_B_36','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_650_B_37','20210319','TESTCORP','72','002','统一社会信用代码长度必须等于18位','统一社会信用代码长度必须等于18位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''20'') {
    if ($value.length() < 18 || $value.length() > 18) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_650_B_37','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000201_650_B_37','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,min_length,max_length,script,rsv2,DATA_CRT_USER)values('I0000201_650_B_38','20210319','TESTCORP','72','002','中征码长度必须等于16位','中征码长度必须等于16位','长度校验','人民银行','B_ENT_CERT_NUM','企业身份标识号码','R','Y','','','if (!isEmpty(B_ENT_CERT_TYPE) && B_ENT_CERT_TYPE==''10'') {
    if ($value.length() < 16 || $value.length() > 16) {
        return false
    }
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000201_650_B_38','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000201_650_B_38','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_21X_C_01','20210319','TESTCORP','72','002','个人借贷账户信息记录的信息报告日期应不早于开户日期','个人借贷账户信息记录的信息报告日期应不早于开户日期','表内逻辑校验','人民银行','C_OPEN_DATE','开户日期','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(C_OPEN_DATE)) {
    if (C_OPEN_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_21X_C_01','20210415','TESTCORP','72','002','MBT_PM_210_C','I0000501_21X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_212_C_01','20210415','TESTCORP','72','002','MBT_PM_212_C','I0000501_21X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_21X_H_01','20210319','TESTCORP','72','002','个人借贷账户信息记录的信息报告日期应不早于结算/应还款日期','个人借贷账户信息记录的信息报告日期应不早于结算/应还款日期','表内逻辑校验','人民银行','H_SETT_DATE','结算/应还款日','R','Y','','if (!isEmpty(H_SETT_DATE) && !isEmpty(B_RPT_DATE)) {
    if (H_SETT_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000501_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000501_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_21X_H_02','20210319','TESTCORP','72','002','个人借贷账户信息记录的信息报告日期应不早于五级分类认定日期','个人借贷账户信息记录的信息报告日期应不早于五级分类认定日期','表内逻辑校验','人民银行','H_FIVE_CATE_ADJ_DATE','五级分类认定日期','R','Y','','if (!isEmpty(H_FIVE_CATE_ADJ_DATE) && !isEmpty(B_RPT_DATE)) {
    if (H_FIVE_CATE_ADJ_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_21X_H_02','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000501_21X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_212_H_02','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000501_21X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_21X_H_03','20210319','TESTCORP','72','002','个人借贷账户信息记录的信息报告日期应不早于最近一次实际还款日期','个人借贷账户信息记录的信息报告日期应不早于最近一次实际还款日期','表内逻辑校验','人民银行','H_LAT_RPY_DATE','最近一次实际还款日期','R','Y','','if (!isEmpty(H_LAT_RPY_DATE) && !isEmpty(B_RPT_DATE)) {
    if (H_LAT_RPY_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_21X_H_03','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000501_21X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_212_H_03','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000501_21X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_21X_H_04','20210319','TESTCORP','72','002','个人借贷账户信息记录的信息报告日期应不早于账户关闭日期','个人借贷账户信息记录的信息报告日期应不早于账户关闭日期','表内逻辑校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(H_CLOSE_DATE)) {
    if (H_CLOSE_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_21X_H_04','20210415','TESTCORP','72','002','MBT_PM_210_H','I0000501_21X_H_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_212_H_04','20210415','TESTCORP','72','002','MBT_PM_212_H','I0000501_21X_H_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_21X_I_01','20210319','TESTCORP','72','002','个人借贷账户信息记录的信息报告日期应不早于分期额度生效日期','个人借贷账户信息记录的信息报告日期应不早于分期额度生效日期','表内逻辑校验','人民银行','I_SPEC_EFCT_DATE','分期额度生效日期','R','Y','','if (!isEmpty(I_SPEC_EFCT_DATE) && !isEmpty(B_RPT_DATE)) {
    if (I_SPEC_EFCT_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_21X_I_01','20210415','TESTCORP','72','002','MBT_PM_210_I','I0000501_21X_I_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_212_I_01','20210415','TESTCORP','72','002','MBT_PM_212_I','I0000501_21X_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_21X_J_01','20210319','TESTCORP','72','002','个人借贷账户信息记录的信息报告日期应不早于五级分类认定日期','个人借贷账户信息记录的信息报告日期应不早于五级分类认定日期','表内逻辑校验','人民银行','J_FIVE_CATE_ADJ_DATE','五级分类认定日期','R','Y','','if (!isEmpty(J_FIVE_CATE_ADJ_DATE) && !isEmpty(B_RPT_DATE)) {
    if (J_FIVE_CATE_ADJ_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_21X_J_01','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000501_21X_J_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_212_J_01','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000501_21X_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_21X_J_02','20210319','TESTCORP','72','002','个人借贷账户信息记录的信息报告日期应不早于最近一次实际还款日期','个人借贷账户信息记录的信息报告日期应不早于最近一次实际还款日期','表内逻辑校验','人民银行','J_LAT_RPY_DATE','最近一次实际还款日期','R','Y','','if (!isEmpty(J_LAT_RPY_DATE) && !isEmpty(B_RPT_DATE)) {
    if (J_LAT_RPY_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_21X_J_02','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000501_21X_J_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_212_J_02','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000501_21X_J_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_21X_J_03','20210319','TESTCORP','72','002','个人借贷账户信息记录的信息报告日期应不早于账户关闭日期','个人借贷账户信息记录的信息报告日期应不早于账户关闭日期','表内逻辑校验','人民银行','J_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(J_CLOSE_DATE)) {
    if (J_CLOSE_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_21X_J_03','20210415','TESTCORP','72','002','MBT_PM_210_J','I0000501_21X_J_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_212_J_03','20210415','TESTCORP','72','002','MBT_PM_212_J','I0000501_21X_J_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_21X_K_01','20210319','TESTCORP','72','002','个人借贷账户信息记录的信息报告日期应不早于交易日期','个人借贷账户信息记录的信息报告日期应不早于交易日期','表内逻辑校验','人民银行','K_TRAN_DATE','交易日期','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(K_TRAN_DATE)) {
    if (K_TRAN_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_21X_K_01','20210415','TESTCORP','72','002','MBT_PM_210_K','I0000501_21X_K_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_212_K_01','20210415','TESTCORP','72','002','MBT_PM_212_K','I0000501_21X_K_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100C02_21X_C_01','20210319','TESTCORP','72','002','若“还款方式”为“90-汇总报送，不区分还款方式”，则“还款频率”为“03-月”。','若“还款方式”为“90-汇总报送，不区分还款方式”，则“还款频率”为“03-月”。','表内逻辑校验','人民银行','C_REPAY_FREQCY','还款频率','R','Y','','if (!isEmpty(C_REPAY_FREQCY) && !isEmpty(C_REPAY_MODE) && C_REPAY_MODE==''90'') {
    if (C_REPAY_FREQCY==''03'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C02_21X_C_01','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100C02_21X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C02_212_C_01','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100C02_21X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100C03_21X_C_01','20210319','TESTCORP','72','002','“卡片标识号”除“NULL”“MULT”外，必须为四位数字。','“卡片标识号”除“NULL”“MULT”外，必须为四位数字。','表内逻辑校验','人民银行','C_CREDIT_ID','卡片标识号','R','Y','','if (!isEmpty(C_CREDIT_ID) && !isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R2'',''R3'']) {
    if (C_CREDIT_ID ==''NULL'' || C_CREDIT_ID ==''MULT'' || ((C_CREDIT_ID as BigDecimal)>=1000) && (C_CREDIT_ID as BigDecimal) <=9999) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C03_21X_C_01','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100C03_21X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C03_212_C_01','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100C03_21X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100C05_21X_C_01','20210319','TESTCORP','72','002','若“还款方式”代码以“2”开头，则“还款期数”必须为0','若“还款方式”代码以“2”开头，则“还款期数”必须为0','表内逻辑校验','人民银行','C_REPAY_PRD','还款期数','R','Y','','if (!isEmpty(C_REPAY_PRD) && C_REPAY_MODE.startsWith(''2'')) {
    if ((C_REPAY_PRD as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C05_21X_C_01','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100C05_21X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C05_212_C_01','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100C05_21X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100C06_21X_C_01','20210319','TESTCORP','72','002','“开户日期”应不晚于“到期日期”。','“开户日期”应不晚于“到期日期”。','表内逻辑校验','人民银行','C_OPEN_DATE','开户日期','R','Y','','if (!isEmpty(C_DUE_DATE) && !isEmpty(C_OPEN_DATE) && !isEmpty(C_DUE_DATE) && !isEmpty(C_DUE_DATE)) {
    if (C_OPEN_DATE<=C_DUE_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C06_21X_C_01','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100C06_21X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100C06_212_C_01','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100C06_21X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H01_21X_H_01','20210319','TESTCORP','72','002','对于R2账户，“当前还款状态”为“*-当月未使用额度且不需要还款”时，“实际还款百分比”应为空值。','对于R2账户，“当前还款状态”为“*-当月未使用额度且不需要还款”时，“实际还款百分比”应为空值。','表内逻辑校验','人民银行','H_RPY_PRCT','实际还款百分比','R','Y','','if (!isEmpty(H_RPY_PRCT) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_RPY_STATUS) && B_ACCT_TYPE==''R2''  &&  H_RPY_STATUS==''*'') {
    if (isEmpty(H_RPY_PRCT)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H01_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H01_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H01_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H01_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H02_21X_H_01','20210319','TESTCORP','72','002','“结算/应还款日”与“月份”中的年、月必须保持一致。','“结算/应还款日”与“月份”中的年、月必须保持一致。','表内逻辑校验','人民银行','H_SETT_DATE','结算/应还款日','R','Y','','return H_SETT_DATE.startsWith(H_MONTH)','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H02_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H02_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H02_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H02_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H03_21X_H_01','20210319','TESTCORP','72','002','若账户信息记录中的“账户状态”为“41-呆账（进入核销认定程序，等待核销）”/“51-呆账（进入核销认定程序，等待核销）”、“42-呆账（已核销）”/“52-呆账（已核销）”时，“当前逾期总额”不能为0。','若账户信息记录中的“账户状态”为“41-呆账（进入核销认定程序，等待核销）”/“51-呆账（进入核销认定程序，等待核销）”、“42-呆账（已核销）”/“52-呆账（已核销）”时，“当前逾期总额”不能为0。','表内逻辑校验','人民银行','H_TOT_OVERD','当前逾期总额','R','Y','','if (!isEmpty(H_TOT_OVERD) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS in [''41'',''42'',''51'',''52'']) {
    if ((H_TOT_OVERD as BigDecimal) >0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H03_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H03_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H03_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H03_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H04_21X_H_01','20210319','TESTCORP','72','002','若“账户状态”为“6-未激活”时，则“余额”必须为0','若“账户状态”为“6-未激活”时，则“余额”必须为0','表内逻辑校验','人民银行','H_ACCT_BAL','余额','R','Y','','if (!isEmpty(H_ACCT_BAL) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS==''6'') {
    if ((H_ACCT_BAL as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H04_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H04_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H04_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H04_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H04_21X_H_02','20210319','TESTCORP','72','002','若“账户状态”为“6-未激活”时，则“当前还款状态”必须为“*”','若“账户状态”为“6-未激活”时，则“当前还款状态”必须为“*”','表内逻辑校验','人民银行','H_RPY_STATUS','当前还款状态','R','Y','','if (!isEmpty(H_RPY_STATUS) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS==''6'') {
    if (H_RPY_STATUS==''*'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H04_21X_H_02','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H04_21X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H04_212_H_02','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H04_21X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H04_21X_H_03','20210319','TESTCORP','72','002','若“账户状态”为“6-未激活”时，则“当前逾期期数”必须为0
（若此账户没有上述数据项，则不校验此数据项）','若“账户状态”为“6-未激活”时，则“当前逾期期数”必须为0
（若此账户没有上述数据项，则不校验此数据项）','表内逻辑校验','人民银行','H_OVERD_PRD','当前逾期期数','R','Y','','if (!isEmpty(H_OVERD_PRD) && !isEmpty(H_ACCT_STATUS) && !isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''R3''  &&  H_ACCT_STATUS==''6'') {
    if ((H_OVERD_PRD as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H04_21X_H_03','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H04_21X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H04_212_H_03','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H04_21X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H04_21X_H_04','20210319','TESTCORP','72','002','若“账户状态”为“6-未激活”时，则“当前逾期总额”必须为0
（若此账户没有上述数据项，则不校验此数据项）','若“账户状态”为“6-未激活”时，则“当前逾期总额”必须为0
（若此账户没有上述数据项，则不校验此数据项）','表内逻辑校验','人民银行','H_TOT_OVERD','当前逾期总额','R','Y','','if (!isEmpty(H_TOT_OVERD) && !isEmpty(H_ACCT_STATUS) && !isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''R3''  &&  H_ACCT_STATUS==''6'') {
    if ((H_TOT_OVERD as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H04_21X_H_04','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H04_21X_H_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H04_212_H_04','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H04_21X_H_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H05_21X_H_01','20210319','TESTCORP','72','002','若“当前还款状态”为“*”，则“本月应还款金额”必须为0（若此账户没有上述数据项，则不校验此数据项）。','若“当前还款状态”为“*”，则“本月应还款金额”必须为0（若此账户没有上述数据项，则不校验此数据项）。','表内逻辑校验','人民银行','H_CUR_RPY_AMT','本月应还款金额','R','Y','','if (!isEmpty(H_CUR_RPY_AMT) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_RPY_STATUS) && B_ACCT_TYPE!=''R3''  &&  H_RPY_STATUS==''*'') {
    if ((H_CUR_RPY_AMT as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H05_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H05_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H05_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H05_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H05_21X_H_02','20210319','TESTCORP','72','002','若“当前还款状态”为“*”，则“当前逾期期数”必须为0（若此账户没有上述数据项，则不校验此数据项）。','若“当前还款状态”为“*”，则“当前逾期期数”必须为0（若此账户没有上述数据项，则不校验此数据项）。','表内逻辑校验','人民银行','H_OVERD_PRD','当前逾期期数','R','Y','','if (!isEmpty(H_OVERD_PRD) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_RPY_STATUS) && B_ACCT_TYPE!=''R3''  &&  H_RPY_STATUS==''*'') {
    if ((H_OVERD_PRD as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H05_21X_H_02','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H05_21X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H05_212_H_02','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H05_21X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H05_21X_H_03','20210319','TESTCORP','72','002','若“当前还款状态”为“*”，则“本期账单余额”必须为0（若此账户没有上述数据项，则不校验此数据项）。','若“当前还款状态”为“*”，则“本期账单余额”必须为0（若此账户没有上述数据项，则不校验此数据项）。','表内逻辑校验','人民银行','H_PRID_ACCT_BAL','本期账单余额','R','Y','','if (!isEmpty(H_PRID_ACCT_BAL) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_RPY_STATUS) && B_ACCT_TYPE==''R2'' &&  H_RPY_STATUS==''*'') {
    if ((H_PRID_ACCT_BAL as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H05_21X_H_03','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H05_21X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H05_212_H_03','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H05_21X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H05_21X_H_04','20210319','TESTCORP','72','002','若“当前还款状态”为“*”，则“当前逾期总额”必须为0（若此账户没有上述数据项，则不校验此数据项）。','若“当前还款状态”为“*”，则“当前逾期总额”必须为0（若此账户没有上述数据项，则不校验此数据项）。','表内逻辑校验','人民银行','H_TOT_OVERD','当前逾期总额','R','Y','','if (!isEmpty(H_TOT_OVERD) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_RPY_STATUS) && B_ACCT_TYPE!=''R3''  &&  H_RPY_STATUS==''*'') {
    if ((H_TOT_OVERD as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H05_21X_H_04','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H05_21X_H_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H05_212_H_04','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H05_21X_H_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H07_21X_H_01','20210319','TESTCORP','72','002','若“当前还款状态”为“N”或“M”，则“当前逾期期数”必须为0（若此账户没有上述数据项，则不校验此数据项）。','若“当前还款状态”为“N”或“M”，则“当前逾期期数”必须为0（若此账户没有上述数据项，则不校验此数据项）。','表内逻辑校验','人民银行','H_OVERD_PRD','当前逾期期数','R','Y','','if (!isEmpty(H_OVERD_PRD) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_RPY_STATUS) && B_ACCT_TYPE!=''R3''  &&  H_RPY_STATUS in [''N'',''M'']) {
    if ((H_OVERD_PRD as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H07_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H07_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H07_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H07_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H07_21X_H_02','20210319','TESTCORP','72','002','若“当前还款状态”为“N”或“M”，则“当前逾期总额”必须为0（若此账户没有上述数据项，则不校验此数据项）。','若“当前还款状态”为“N”或“M”，则“当前逾期总额”必须为0（若此账户没有上述数据项，则不校验此数据项）。','表内逻辑校验','人民银行','H_TOT_OVERD','当前逾期总额','R','Y','','if (!isEmpty(H_TOT_OVERD) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_RPY_STATUS) && B_ACCT_TYPE!=''R3''  &&  H_RPY_STATUS in [''N'',''M'']) {
    if ((H_TOT_OVERD as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H07_21X_H_02','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H07_21X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H07_212_H_02','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H07_21X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H09_21X_H_01','20210319','TESTCORP','72','002','若“当前还款状态”为数字“1-7”，则“当前逾期期数”必须大于0（若此账户没有上述数据项，则不校验此数据项）。','若“当前还款状态”为数字“1-7”，则“当前逾期期数”必须大于0（若此账户没有上述数据项，则不校验此数据项）。','表内逻辑校验','人民银行','H_OVERD_PRD','当前逾期期数','R','Y','','if (!isEmpty(H_OVERD_PRD) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_RPY_STATUS) && B_ACCT_TYPE!=''R3''  &&  H_RPY_STATUS in [''1'',''2'',''3'',''4'',''5'',''6'',''7'']) {
    if ((H_OVERD_PRD as BigDecimal) >0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H09_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H09_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H09_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H09_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H09_21X_H_02','20210319','TESTCORP','72','002','若“当前还款状态”为数字“1-7”，则“当前逾期总额”必须大于0（若此账户没有上述数据项，则不校验此数据项）。','若“当前还款状态”为数字“1-7”，则“当前逾期总额”必须大于0（若此账户没有上述数据项，则不校验此数据项）。','表内逻辑校验','人民银行','H_TOT_OVERD','当前逾期总额','R','Y','','if (!isEmpty(H_TOT_OVERD) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_RPY_STATUS) && B_ACCT_TYPE!=''R3''  &&  H_RPY_STATUS in [''1'',''2'',''3'',''4'',''5'',''6'',''7'']) {
    if ((H_TOT_OVERD as BigDecimal) >0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H09_21X_H_02','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H09_21X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H09_212_H_02','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H09_21X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H10_21X_H_01','20210319','TESTCORP','72','002','对于D1/R1/R4账户，信息记录中“当前逾期本金”必须小于等于“当前逾期总额”。','对于D1/R1/R4账户，信息记录中“当前逾期本金”必须小于等于“当前逾期总额”。','表内逻辑校验','人民银行','H_OVAER_PRINC','当前逾期本金','R','Y','','if (!isEmpty(H_OVAER_PRINC) && !isEmpty(H_TOT_OVERD) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_TOT_OVERD) && B_ACCT_TYPE in [''D1'',''R1'',''R4'']  &&  !isEmpty(H_TOT_OVERD)) {
    if ((H_OVAER_PRINC as BigDecimal)<=(H_TOT_OVERD as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H10_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H10_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H10_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H10_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H11_21X_H_01','20210319','TESTCORP','72','002','若“账户状态”为“3-关闭”/“4-销户”，“余额”应为0。','若“账户状态”为“3-关闭”/“4-销户”，“余额”应为0。','表内逻辑校验','人民银行','H_ACCT_BAL','余额','R','Y','','if (!isEmpty(H_ACCT_BAL) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS in [''3'',''4'']) {
    if ((H_ACCT_BAL as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H11_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H11_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H11_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H11_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H12_21X_H_01','20210319','TESTCORP','72','002','“账户状态”和“当前还款状态”需要保持一致：“账户状态”为“3-关闭”/“4-销户”时，“当前还款状态”应为“C-结清”/“C-销户”、“G-结束”。','“账户状态”和“当前还款状态”需要保持一致：“账户状态”为“3-关闭”/“4-销户”时，“当前还款状态”应为“C-结清”/“C-销户”、“G-结束”。','表内逻辑校验','人民银行','H_RPY_STATUS','当前还款状态','R','Y','','if (!isEmpty(H_RPY_STATUS) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS in [''3'',''4'']) {
    if (H_RPY_STATUS in [''C'',''G'']) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H12_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H12_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H12_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H12_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H13_21X_H_01','20210319','TESTCORP','72','002','若“账户关闭日期”数据项不为空，则“账户关闭日期”应不早于“结算/应还款日”。','若“账户关闭日期”数据项不为空，则“账户关闭日期”应不早于“结算/应还款日”。','表内逻辑校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(H_SETT_DATE) && !isEmpty(H_CLOSE_DATE) && !isEmpty(H_SETT_DATE) && !isEmpty(H_SETT_DATE)) {
    if (H_CLOSE_DATE>=H_SETT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H13_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H13_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H13_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H13_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H13_21X_H_02','20210319','TESTCORP','72','002','若“账户关闭日期”数据项不为空，则“账户关闭日期”应不早于“最近一次实际还款日期”。','若“账户关闭日期”数据项不为空，则“账户关闭日期”应不早于“最近一次实际还款日期”。','表内逻辑校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(H_LAT_RPY_DATE) && !isEmpty(H_CLOSE_DATE) && !isEmpty(H_LAT_RPY_DATE) && !isEmpty(H_LAT_RPY_DATE)) {
    if (H_CLOSE_DATE>=H_LAT_RPY_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H13_21X_H_02','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H13_21X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H13_212_H_02','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H13_21X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H13_21X_H_03','20210319','TESTCORP','72','002','若“账户关闭日期”数据项不为空，则“账户关闭日期”应不早于“五级分类认定日期”。','若“账户关闭日期”数据项不为空，则“账户关闭日期”应不早于“五级分类认定日期”。','表内逻辑校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(H_FIVE_CATE_ADJ_DATE) && !isEmpty(H_CLOSE_DATE) && !isEmpty(H_FIVE_CATE_ADJ_DATE) && !isEmpty(H_FIVE_CATE_ADJ_DATE)) {
    if (H_CLOSE_DATE>=H_FIVE_CATE_ADJ_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H13_21X_H_03','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H13_21X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H13_212_H_03','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H13_21X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H15_21X_H_01','20210319','TESTCORP','72','002','当账户状态为“关闭”/“销户”时，“当前逾期总额”应为0。','当账户状态为“关闭”/“销户”时，“当前逾期总额”应为0。','表内逻辑校验','人民银行','H_OVERD_PRD','当前逾期期数','R','Y','','if (!isEmpty(H_OVERD_PRD) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS in [''3'',''4'']) {
    if ((H_OVERD_PRD as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H15_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H15_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H15_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H15_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100H15_21X_H_02','20210319','TESTCORP','72','002','当账户状态为“关闭”/“销户”时，“当前逾期期数”应为0。','当账户状态为“关闭”/“销户”时，“当前逾期期数”应为0。','表内逻辑校验','人民银行','H_TOT_OVERD','当前逾期总额','R','Y','','if (!isEmpty(H_TOT_OVERD) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS in [''3'',''4'']) {
    if ((H_TOT_OVERD as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H15_21X_H_02','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100H15_21X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100H15_212_H_02','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100H15_21X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100I01_21X_I_01','20210319','TESTCORP','72','002','“分期额度生效日期”应不晚于“分期额度到期日期”。','“分期额度生效日期”应不晚于“分期额度到期日期”。','表内逻辑校验','人民银行','I_SPEC_EFCT_DATE','分期额度生效日期','R','Y','','if (!isEmpty(I_SPEC_EFCT_DATE) && !isEmpty(I_SPEC_END_DATE) && !isEmpty(I_SPEC_END_DATE) && !isEmpty(I_SPEC_END_DATE)) {
    if (I_SPEC_EFCT_DATE<=I_SPEC_END_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100I01_21X_I_01','20210415','TESTCORP','72','002','MBT_PM_210_I','I2100I01_21X_I_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100I01_212_I_01','20210415','TESTCORP','72','002','MBT_PM_212_I','I2100I01_21X_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100J02_21X_J_01','20210319','TESTCORP','72','002','非月度表现信息段的“当前还款状态”只能为“N-正常”。','非月度表现信息段的“当前还款状态”只能为“N-正常”。','表内逻辑校验','人民银行','J_RPY_STATUS','当前还款状态','R','Y','','if (!isEmpty(J_RPY_STATUS) && !isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''C1'') {
    if (J_RPY_STATUS ==''N'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J02_21X_J_01','20210415','TESTCORP','72','002','MBT_PM_210_J','I2100J02_21X_J_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J02_212_J_01','20210415','TESTCORP','72','002','MBT_PM_212_J','I2100J02_21X_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100J03_21X_J_01','20210319','TESTCORP','72','002','若“账户关闭日期”数据项不为空，则“账户关闭日期”应不早于“最近一次实际还款日期”。','若“账户关闭日期”数据项不为空，则“账户关闭日期”应不早于“最近一次实际还款日期”。','表内逻辑校验','人民银行','J_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(J_LAT_RPY_DATE) && !isEmpty(J_CLOSE_DATE) && !isEmpty(J_LAT_RPY_DATE) && !isEmpty(J_LAT_RPY_DATE)) {
    if (J_CLOSE_DATE>=J_LAT_RPY_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J03_21X_J_01','20210415','TESTCORP','72','002','MBT_PM_210_J','I2100J03_21X_J_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J03_212_J_01','20210415','TESTCORP','72','002','MBT_PM_212_J','I2100J03_21X_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100J03_21X_J_02','20210319','TESTCORP','72','002','若“账户关闭日期”数据项不为空，则“账户关闭日期”应不早于“五级分类认定日期”。','若“账户关闭日期”数据项不为空，则“账户关闭日期”应不早于“五级分类认定日期”。','表内逻辑校验','人民银行','J_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(J_FIVE_CATE_ADJ_DATE) && !isEmpty(J_CLOSE_DATE) && !isEmpty(J_FIVE_CATE_ADJ_DATE) && !isEmpty(J_FIVE_CATE_ADJ_DATE)) {
    if (J_CLOSE_DATE>=J_FIVE_CATE_ADJ_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J03_21X_J_02','20210415','TESTCORP','72','002','MBT_PM_210_J','I2100J03_21X_J_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J03_212_J_02','20210415','TESTCORP','72','002','MBT_PM_212_J','I2100J03_21X_J_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100J05_21X_J_01','20210319','TESTCORP','72','002','若“账户状态”为“2-结束”，则“余额”应为0','若“账户状态”为“2-结束”，则“余额”应为0','表内逻辑校验','人民银行','J_ACCT_BAL','余额','R','Y','','if (!isEmpty(J_ACCT_BAL) && !isEmpty(J_ACCT_STATUS) && !isEmpty(B_ACCT_TYPE) && J_ACCT_STATUS ==''2''  &&  B_ACCT_TYPE==''C1'') {
    if ((J_ACCT_BAL as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J05_21X_J_01','20210415','TESTCORP','72','002','MBT_PM_210_J','I2100J05_21X_J_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J05_212_J_01','20210415','TESTCORP','72','002','MBT_PM_212_J','I2100J05_21X_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100J06_21X_J_01','20210319','TESTCORP','72','002','若“当前还款状态”为“N”或“M”，则“当前逾期期数”、“当前逾期总额”必须为0（若此账户没有上述数据项，则不校验此数据项）。','若“当前还款状态”为“N”或“M”，则“当前逾期期数”、“当前逾期总额”必须为0（若此账户没有上述数据项，则不校验此数据项）。','表内逻辑校验','人民银行','J_OVERD_PRD','当前逾期期数','R','Y','','if (!isEmpty(J_OVERD_PRD) && !(!isEmpty(B_ACCT_TYPE) && !isEmpty(J_RPY_STATUS) && B_ACCT_TYPE in [''R3'',''C1''])  &&  J_RPY_STATUS in [''N'',''M'']) {
    if ((J_OVERD_PRD as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J06_21X_J_01','20210415','TESTCORP','72','002','MBT_PM_210_J','I2100J06_21X_J_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J06_212_J_01','20210415','TESTCORP','72','002','MBT_PM_212_J','I2100J06_21X_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100J06_21X_J_02','20210319','TESTCORP','72','002','若“当前还款状态”为“N”或“M”，则“当前逾期总额”必须为0（若此账户没有上述数据项，则不校验此数据项）。','若“当前还款状态”为“N”或“M”，则“当前逾期总额”必须为0（若此账户没有上述数据项，则不校验此数据项）。','表内逻辑校验','人民银行','J_TOT_OVERD','当前逾期总额','R','Y','','if (!isEmpty(J_TOT_OVERD) && !(!isEmpty(B_ACCT_TYPE) && !isEmpty(J_RPY_STATUS) && B_ACCT_TYPE in [''R3'',''C1''])  &&  J_RPY_STATUS in [''N'',''M'']) {
    if ((J_TOT_OVERD as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J06_21X_J_02','20210415','TESTCORP','72','002','MBT_PM_210_J','I2100J06_21X_J_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100J06_212_J_02','20210415','TESTCORP','72','002','MBT_PM_212_J','I2100J06_21X_J_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100A01_21X_H_01','20210319','TESTCORP','72','002','当账户信息记录中“账户类型”为“R3”时，“透支180天以上未还余额”应该小于等于“余额”。','当账户信息记录中“账户类型”为“R3”时，“透支180天以上未还余额”应该小于等于“余额”。','表内逻辑校验','人民银行','H_OVERD_RAW_BA_OVE180','透支180天以上未还余额','R','Y','','if (!isEmpty(H_OVERD_RAW_BA_OVE180) && !isEmpty(H_ACCT_BAL) && !isEmpty(H_ACCT_BAL) && !isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE==''R3''  &&  !isEmpty(H_ACCT_BAL)) {
    if ((H_OVERD_RAW_BA_OVE180 as BigDecimal)<=(H_ACCT_BAL as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A01_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100A01_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A01_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100A01_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100A02_21X_H_01','20210319','TESTCORP','72','002','当账户信息记录中“账户类型”为“R3”时，“当前还款状态”为“*”时，“余额”必须为0','当账户信息记录中“账户类型”为“R3”时，“当前还款状态”为“*”时，“余额”必须为0','表内逻辑校验','人民银行','H_ACCT_BAL','余额','R','Y','','if (!isEmpty(H_ACCT_BAL) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_RPY_STATUS) && B_ACCT_TYPE==''R3'' &&  H_RPY_STATUS==''*'') {
    if ((H_ACCT_BAL as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A02_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100A02_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A02_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100A02_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100A04_21X_H_01','20210319','TESTCORP','72','002','当账户信息记录中“账户类型”为“R3”时，“当前还款状态”为数字“1-7”时，“余额”必须大于0。','当账户信息记录中“账户类型”为“R3”时，“当前还款状态”为数字“1-7”时，“余额”必须大于0。','表内逻辑校验','人民银行','H_ACCT_BAL','余额','R','Y','','if (!isEmpty(H_ACCT_BAL) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_RPY_STATUS) && B_ACCT_TYPE==''R3''  &&  H_RPY_STATUS in [''1'',''2'',''3'',''4'',''5'',''6'',''7'']) {
    if ((H_ACCT_BAL as BigDecimal) >0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A04_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100A04_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A04_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100A04_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100A07_21X_C_01','20210319','TESTCORP','72','002','当“账户类型”为“C1”时，“借贷业务大类”只能为“5-资产处置”、“6-垫款”。','当“账户类型”为“C1”时，“借贷业务大类”只能为“5-资产处置”、“6-垫款”。','表内逻辑校验','人民银行','C_BUSI_LINES','借贷业务大类','R','Y','','if (!isEmpty(C_BUSI_LINES) && !isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE==''C1'') {
    if (C_BUSI_LINES in [''5'',''6'']) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A07_21X_C_01','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100A07_21X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A07_212_C_01','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100A07_21X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100A07_21X_C_02','20210319','TESTCORP','72','002','当“账户类型”为“R2/R3”时，“借贷业务大类”只能为“2-信用卡”。','当“账户类型”为“R2/R3”时，“借贷业务大类”只能为“2-信用卡”。','表内逻辑校验','人民银行','C_BUSI_LINES','借贷业务大类','R','Y','','if (!isEmpty(C_BUSI_LINES) && !isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R2'',''R3'']) {
    if (C_BUSI_LINES==''2'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A07_21X_C_02','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100A07_21X_C_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A07_212_C_02','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100A07_21X_C_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100A13_21X_H_01','20210319','TESTCORP','72','002','信息报告日期所在月与月份应在同一个月或相差一个月。','信息报告日期所在月与月份应在同一个月或相差一个月。','表内逻辑校验','人民银行','H_MONTH','月份','R','Y','','if (!isEmpty(H_MONTH) && !isEmpty(B_RPT_DATE) && B_RPT_DATE.length()>=6 && H_MONTH.length()>=6) {
    if (((B_RPT_DATE.substring(0,4).toBigDecimal()-H_MONTH.substring(0,4).toBigDecimal())*12 + (B_RPT_DATE.substring(4,6).toBigDecimal()-H_MONTH.substring(4,6).toBigDecimal())).abs()<=1) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A13_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100A13_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A13_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100A13_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100A14_21X_J_01','20210319','TESTCORP','72','002','对于除C1以外的其他账户，非月度表现信息段中的“最近一次实际还款日期”必须和“信息报告日期”保持一致。','对于除C1以外的其他账户，非月度表现信息段中的“最近一次实际还款日期”必须和“信息报告日期”保持一致。','表内逻辑校验','人民银行','J_LAT_RPY_DATE','最近一次实际还款日期','R','Y','','if (!isEmpty(J_LAT_RPY_DATE) && !isEmpty(B_RPT_DATE) && !isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''C1'') {
    if (J_LAT_RPY_DATE==B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A14_21X_J_01','20210415','TESTCORP','72','002','MBT_PM_210_J','I2100A14_21X_J_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A14_212_J_01','20210415','TESTCORP','72','002','MBT_PM_212_J','I2100A14_21X_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100A16_21X_J_01','20210319','TESTCORP','72','002','对于C1外的其他账户，非月度表现中的“账户状态”不应为“关闭”或“销户”','对于C1外的其他账户，非月度表现中的“账户状态”不应为“关闭”或“销户”','表内逻辑校验','人民银行','J_ACCT_STATUS','账户状态','R','Y','','if (!isEmpty(J_ACCT_STATUS) && !isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE!=''C1'') {
    if (!(J_ACCT_STATUS in [''3'',''4''])) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A16_21X_J_01','20210415','TESTCORP','72','002','MBT_PM_210_J','I2100A16_21X_J_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A16_212_J_01','20210415','TESTCORP','72','002','MBT_PM_212_J','I2100A16_21X_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('R2100103_210_B_01','20210319','TESTCORP','72','002','当“报告时点说明代码”为“31-月结日首次上报存量账户”时， “账户类型”不能为“C1”。','当“报告时点说明代码”为“31-月结日首次上报存量账户”时， “账户类型”不能为“C1”。','表内逻辑校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','','if (!isEmpty(B_ACCT_TYPE) && !isEmpty(B_RPT_DATE_CODE) && B_RPT_DATE_CODE==''31'') {
    if (B_ACCT_TYPE!=''C1'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100103_210_B_01','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100103_210_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('R2100107_210_B_01','20210319','TESTCORP','72','002','当“报告时点说明代码”为“30-月度结算”时，“账户类型”不能为“C1”。','当“报告时点说明代码”为“30-月度结算”时，“账户类型”不能为“C1”。','表内逻辑校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','','if (!isEmpty(B_ACCT_TYPE) && !isEmpty(B_RPT_DATE_CODE) && B_RPT_DATE_CODE==''30'') {
    if (B_ACCT_TYPE!=''C1'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100107_210_B_01','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100107_210_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('R2100109_210_B_01','20210319','TESTCORP','72','002','当“报告时点说明代码”为“40-收回逾期款项”时，账户类型不能为“R3”。','当“报告时点说明代码”为“40-收回逾期款项”时，账户类型不能为“R3”。','表内逻辑校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','','if (!isEmpty(B_ACCT_TYPE) && !isEmpty(B_RPT_DATE_CODE) && B_RPT_DATE_CODE==''40'') {
    if (B_ACCT_TYPE!=''R3'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100109_210_B_01','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100109_210_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('R2100113_210_B_01','20210319','TESTCORP','72','002','当“报告时点说明代码”为“32-月结日账户关闭”时， “账户类型”不能为“C1”。','当“报告时点说明代码”为“32-月结日账户关闭”时， “账户类型”不能为“C1”。','表内逻辑校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','','if (!isEmpty(B_ACCT_TYPE) && !isEmpty(B_RPT_DATE_CODE) && B_RPT_DATE_CODE==''32'') {
    if (B_ACCT_TYPE!=''C1'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100113_210_B_01','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100113_210_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_510_C_01','20210319','TESTCORP','72','002','抵质押合同记录中的信息报告日期应不早于抵（质）押合同生效日期。','抵质押合同记录中的信息报告日期应不早于抵（质）押合同生效日期。','表内逻辑校验','人民银行','C_CC_VAL_DATE','抵（质）押合同生效日期','R','Y','','if (!isEmpty(C_CC_VAL_DATE) && !isEmpty(B_RPT_DATE)) {
    if (C_CC_VAL_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_510_C_01','20210415','TESTCORP','72','002','MBT_PM_510_C','I0000501_510_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_510_E_01','20210319','TESTCORP','72','002','抵质押合同记录中的信息报告日期应不早于抵押物评估日期。','抵质押合同记录中的信息报告日期应不早于抵押物评估日期。','表内逻辑校验','人民银行','E_VAL_DATE','抵押物评估日期','R','Y','','if (!isEmpty(E_VAL_DATE) && !isEmpty(B_RPT_DATE)) {
    if (E_VAL_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_510_E_01','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000501_510_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I5100C01_510_C_01','20210319','TESTCORP','72','002','抵（质）押合同信息记录中“抵（质）押合同生效日期”不晚于“抵（质）押合同到期日期”。','抵（质）押合同信息记录中“抵（质）押合同生效日期”不晚于“抵（质）押合同到期日期”。','表内逻辑校验','人民银行','C_CC_VAL_DATE','抵（质）押合同生效日期','R','Y','','if (!isEmpty(C_CC_VAL_DATE) && !isEmpty(C_CC_EXP_DATE) && !isEmpty(C_CC_EXP_DATE) && !isEmpty(C_CC_EXP_DATE)) {
    if (C_CC_VAL_DATE<=C_CC_EXP_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I5100C01_510_C_01','20210415','TESTCORP','72','002','MBT_PM_510_C','I5100C01_510_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2150B01_215_B_01','20210319','TESTCORP','72','002','个人借贷账户特殊事件说明记录的“信息报告日期”与“发生月份”中的年、月相等。','个人借贷账户特殊事件说明记录的“信息报告日期”与“发生月份”中的年、月相等。','表内逻辑校验','人民银行','MONTH','发生月份','R','Y','','return B_RPT_DATE.startsWith(MONTH)','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2150B01_215_B_01','20210415','TESTCORP','72','002','MBT_PM_215_B','I2150B01_215_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_22X_D_01','20210319','TESTCORP','72','002','个人授信协议信息记录的信息报告日期应不早于额度生效日期。','个人授信协议信息记录的信息报告日期应不早于额度生效日期。','表内逻辑校验','人民银行','D_CON_EFF_DATE','额度生效日期','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(D_CON_EFF_DATE)) {
    if (D_CON_EFF_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_22X_D_01','20210415','TESTCORP','72','002','MBT_PM_220_D','I0000501_22X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_222_D_01','20210415','TESTCORP','72','002','MBT_PM_222_D','I0000501_22X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2200D01_22X_D_01','20210319','TESTCORP','72','002','“额度生效日期”应不晚于“额度到期日期”。','“额度生效日期”应不晚于“额度到期日期”。','表内逻辑校验','人民银行','D_CON_EFF_DATE','额度生效日期','R','Y','','if (!isEmpty(D_CON_EXP_DATE) && !isEmpty(D_CON_EFF_DATE) && !isEmpty(D_CON_EXP_DATE) && !isEmpty(D_CON_EXP_DATE)) {
    if (D_CON_EFF_DATE<=D_CON_EXP_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2200D01_22X_D_01','20210415','TESTCORP','72','002','MBT_PM_220_D','I2200D01_22X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2200D01_222_D_01','20210415','TESTCORP','72','002','MBT_PM_222_D','I2200D01_22X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2200D02_22X_D_01','20210319','TESTCORP','72','002','“授信限额编号”、“授信限额”其中之一不为空时，另一个应不为空。','“授信限额编号”、“授信限额”其中之一不为空时，另一个应不为空。','表内逻辑校验','人民银行','D_CREDIT_REST','授信限额','R','Y','','if (!isEmpty(D_CREDIT_REST_CODE)) {
    if (!isEmpty(D_CREDIT_REST_CODE)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2200D02_22X_D_01','20210415','TESTCORP','72','002','MBT_PM_220_D','I2200D02_22X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2200D02_222_D_01','20210415','TESTCORP','72','002','MBT_PM_222_D','I2200D02_22X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2200D02_22X_D_02','20210319','TESTCORP','72','002','“授信限额编号”、“授信限额”其中之一不为空时，另一个应不为空。','“授信限额编号”、“授信限额”其中之一不为空时，另一个应不为空。','表内逻辑校验','人民银行','D_CREDIT_REST_CODE','授信限额编号','R','Y','','if (!isEmpty(D_CREDIT_REST)) {
    if (!isEmpty(D_CREDIT_REST)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2200D02_22X_D_02','20210415','TESTCORP','72','002','MBT_PM_220_D','I2200D02_22X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2200D02_222_D_02','20210415','TESTCORP','72','002','MBT_PM_222_D','I2200D02_22X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_130_B_01','20210319','TESTCORP','72','002','个人证件有效期信息记录的“信息报告日期”应不早于证件有效期起始日期。','个人证件有效期信息记录的“信息报告日期”应不早于证件有效期起始日期。','表内逻辑校验','人民银行','ID_EFCT_DATE','证件有效期起始日期','R','Y','','if (!isEmpty(ID_EFCT_DATE) && !isEmpty(B_RPT_DATE)) {
    if (ID_EFCT_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_130_B_01','20210415','TESTCORP','72','002','MBT_PM_130_B','I0000501_130_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_110_C_01','20210319','TESTCORP','72','002','个人基本信息记录的“信息报告日期”应不早于其他标识信息段信息更新日期。','个人基本信息记录的“信息报告日期”应不早于其他标识信息段信息更新日期。','表内逻辑校验','人民银行','ID_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(ID_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (ID_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_110_C_01','20210415','TESTCORP','72','002','MBT_PM_110_C','I0000501_110_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_110_D_01','20210319','TESTCORP','72','002','个人基本信息记录的“信息报告日期”应不早于基本概况信息段信息更新日期。','个人基本信息记录的“信息报告日期”应不早于基本概况信息段信息更新日期。','表内逻辑校验','人民银行','D_FCS_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(D_FCS_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (D_FCS_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_110_D_01','20210415','TESTCORP','72','002','MBT_PM_110_D','I0000501_110_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_110_D_02','20210319','TESTCORP','72','002','个人基本信息记录的“信息报告日期”应不早于出生日期。','个人基本信息记录的“信息报告日期”应不早于出生日期。','表内逻辑校验','人民银行','D_DOB','出生日期','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(D_DOB)) {
    if (D_DOB<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_110_D_02','20210415','TESTCORP','72','002','MBT_PM_110_D','I0000501_110_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_110_E_01','20210319','TESTCORP','72','002','个人基本信息记录的“信息报告日期”应不早于婚姻信息段信息更新日期。','个人基本信息记录的“信息报告日期”应不早于婚姻信息段信息更新日期。','表内逻辑校验','人民银行','E_SPS_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(E_SPS_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (E_SPS_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_110_E_01','20210415','TESTCORP','72','002','MBT_PM_110_E','I0000501_110_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_110_F_01','20210319','TESTCORP','72','002','个人基本信息记录的“信息报告日期”应不早于教育信息段信息更新日期。','个人基本信息记录的“信息报告日期”应不早于教育信息段信息更新日期。','表内逻辑校验','人民银行','F_EDU_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(F_EDU_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (F_EDU_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_110_F_01','20210415','TESTCORP','72','002','MBT_PM_110_F','I0000501_110_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_110_G_01','20210319','TESTCORP','72','002','个人基本信息记录的“信息报告日期”应不早于职业信息段信息更新日期。','个人基本信息记录的“信息报告日期”应不早于职业信息段信息更新日期。','表内逻辑校验','人民银行','G_OCTPN_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(G_OCTPN_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (G_OCTPN_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_110_G_01','20210415','TESTCORP','72','002','MBT_PM_110_G','I0000501_110_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_110_H_01','20210319','TESTCORP','72','002','个人基本信息记录的“信息报告日期”应不早于居住地址段信息更新日期。','个人基本信息记录的“信息报告日期”应不早于居住地址段信息更新日期。','表内逻辑校验','人民银行','H_RESI_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(H_RESI_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (H_RESI_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_110_H_01','20210415','TESTCORP','72','002','MBT_PM_110_H','I0000501_110_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_110_I_01','20210319','TESTCORP','72','002','个人基本信息记录的“信息报告日期”应不早于通讯信息段信息更新日期。','个人基本信息记录的“信息报告日期”应不早于通讯信息段信息更新日期。','表内逻辑校验','人民银行','I_MLG_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(I_MLG_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (I_MLG_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_110_I_01','20210415','TESTCORP','72','002','MBT_PM_110_I','I0000501_110_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_110_J_01','20210319','TESTCORP','72','002','个人基本信息记录的“信息报告日期”应不早于收入信息段信息更新日期。','个人基本信息记录的“信息报告日期”应不早于收入信息段信息更新日期。','表内逻辑校验','人民银行','J_INC_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(J_INC_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (J_INC_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_110_J_01','20210415','TESTCORP','72','002','MBT_PM_110_J','I0000501_110_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I1100D01_110_D_01','20210319','TESTCORP','72','002','“出生日期”应不晚于“信息更新日期”。','“出生日期”应不晚于“信息更新日期”。','表内逻辑校验','人民银行','D_DOB','出生日期','R','Y','','if (!isEmpty(D_FCS_INFO_UP_DATE) && !isEmpty(D_DOB)) {
    if (D_DOB<=D_FCS_INFO_UP_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I1100D01_110_D_01','20210415','TESTCORP','72','002','MBT_PM_110_D','I1100D01_110_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I1100G04_110_G_01','20210319','TESTCORP','72','002','当“单位性质”为“30-外资企业”、“40-个体、私营企业”、“50-其他（包括三资企业、民营企业、民间团体等）”时，“职业”不能为“X-军人”。','当“单位性质”为“30-外资企业”、“40-个体、私营企业”、“50-其他（包括三资企业、民营企业、民间团体等）”时，“职业”不能为“X-军人”。','表内逻辑校验','人民银行','G_OCCUPATION','职业','R','Y','','if (!isEmpty(G_OCCUPATION) && !isEmpty(G_CPN_TYPE) && G_CPN_TYPE in [''30'',''40'',''50'']) {
    if (G_OCCUPATION!=''X'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I1100G04_110_G_01','20210415','TESTCORP','72','002','MBT_PM_110_G','I1100G04_110_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I1100A01_110_C_01','20210319','TESTCORP','72','002','其他标识段中的“证件类型”、“证件号码”不能与基础段中的“证件类型”、“证件号码”完全相同。','其他标识段中的“证件类型”、“证件号码”不能与基础段中的“证件类型”、“证件号码”完全相同。','表内逻辑校验','人民银行','OTH_ID_NUM','证件号码（其他）','R','Y','','if (!isEmpty(OTH_ID_NUM) && !isEmpty(B_ID_NUM)) {
    if (OTH_ID_NUM!= B_ID_NUM) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I1100A01_110_C_01','20210415','TESTCORP','72','002','MBT_PM_110_C','I1100A01_110_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I1100A02_110_E_01','20210319','TESTCORP','72','002','婚姻信息段中的“证件类型”、“证件号码”和基础段中“证件类型”、“证件号码”不能完全相同。','婚姻信息段中的“证件类型”、“证件号码”和基础段中“证件类型”、“证件号码”不能完全相同。','表内逻辑校验','人民银行','E_SPO_ID_NUM','配偶证件号码','R','Y','','if (!isEmpty(E_SPO_ID_NUM) && !isEmpty(B_ID_NUM)) {
    if (E_SPO_ID_NUM != B_ID_NUM) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I1100A02_110_E_01','20210415','TESTCORP','72','002','MBT_PM_110_E','I1100A02_110_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_310_C_01','20210319','TESTCORP','72','002','企业基本信息记录的“信息报告日期”应不早于其他标识信息段信息更新日期','企业基本信息记录的“信息报告日期”应不早于其他标识信息段信息更新日期','表内逻辑校验','人民银行','ID_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(ID_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (ID_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_310_C_01','20210415','TESTCORP','72','002','MBT_PM_310_C','I0000501_310_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_310_D_01','20210319','TESTCORP','72','002','企业基本信息记录的“信息报告日期”应不早于基本概况信息段信息更新日期','企业基本信息记录的“信息报告日期”应不早于基本概况信息段信息更新日期','表内逻辑校验','人民银行','D_FCS_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(D_FCS_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (D_FCS_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_310_D_01','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000501_310_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_310_D_02','20210319','TESTCORP','72','002','企业基本信息记录的“信息报告日期”应不早于成立日期','企业基本信息记录的“信息报告日期”应不早于成立日期','表内逻辑校验','人民银行','D_ESTABLISH_DATE','成立日期','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(D_ESTABLISH_DATE)) {
    if (D_ESTABLISH_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_310_D_02','20210415','TESTCORP','72','002','MBT_PM_310_D','I0000501_310_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_310_E_01','20210319','TESTCORP','72','002','企业基本信息记录的“信息报告日期”应不早于主要组成人员段信息更新日期','企业基本信息记录的“信息报告日期”应不早于主要组成人员段信息更新日期','表内逻辑校验','人民银行','MN_MMB_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(MN_MMB_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (MN_MMB_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_310_E_01','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000501_310_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_310_F_01','20210319','TESTCORP','72','002','企业基本信息记录的“信息报告日期”应不早于注册资本及主要出资人段信息更新日期','企业基本信息记录的“信息报告日期”应不早于注册资本及主要出资人段信息更新日期','表内逻辑校验','人民银行','F_MN_SHA_HOD_INFO_DATE','信息更新日期','R','Y','','if (!isEmpty(F_MN_SHA_HOD_INFO_DATE) && !isEmpty(B_RPT_DATE)) {
    if (F_MN_SHA_HOD_INFO_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_310_F_01','20210415','TESTCORP','72','002','MBT_PM_310_F','I0000501_310_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_310_G_01','20210319','TESTCORP','72','002','企业基本信息记录的“信息报告日期”应不早于实际控制人段信息更新日期','企业基本信息记录的“信息报告日期”应不早于实际控制人段信息更新日期','表内逻辑校验','人民银行','ACTU_COTRL_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(ACTU_COTRL_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (ACTU_COTRL_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_310_G_01','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000501_310_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_310_H_01','20210319','TESTCORP','72','002','企业基本信息记录的“信息报告日期”应不早于上级机构段信息更新日期','企业基本信息记录的“信息报告日期”应不早于上级机构段信息更新日期','表内逻辑校验','人民银行','H_SUP_ORG_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(H_SUP_ORG_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (H_SUP_ORG_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_310_H_01','20210415','TESTCORP','72','002','MBT_PM_310_H','I0000501_310_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_310_I_01','20210319','TESTCORP','72','002','企业基本信息记录的“信息报告日期”应不早于联系方式段信息更新日期','企业基本信息记录的“信息报告日期”应不早于联系方式段信息更新日期','表内逻辑校验','人民银行','I_COTA_INFO_UP_DATE','信息更新日期','R','Y','','if (!isEmpty(I_COTA_INFO_UP_DATE) && !isEmpty(B_RPT_DATE)) {
    if (I_COTA_INFO_UP_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_310_I_01','20210415','TESTCORP','72','002','MBT_PM_310_I','I0000501_310_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I3100D02_310_D_01','20210319','TESTCORP','72','002','基本概况信息段中的“成立日期”要不晚于信息更新日期。','基本概况信息段中的“成立日期”要不晚于信息更新日期。','表内逻辑校验','人民银行','D_ESTABLISH_DATE','成立日期','R','Y','','if (!isEmpty(D_FCS_INFO_UP_DATE) && !isEmpty(D_ESTABLISH_DATE)) {
    if (D_ESTABLISH_DATE<=D_FCS_INFO_UP_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I3100D02_310_D_01','20210415','TESTCORP','72','002','MBT_PM_310_D','I3100D02_310_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I3100E01_310_E_01','20210319','TESTCORP','72','002','报送主要组成人员信息段时，法定代表人/非法人组织负责人只能报一个人。','报送主要组成人员信息段时，法定代表人/非法人组织负责人只能报一个人。','表内逻辑校验','人民银行','MMB_PSTN','主要组成人员职位','R','Y','select 1 from (select count(*) as tcnt from mbt_pm_310_e where DATA_DATE=:DATA_DATE and B_ENT_CERT = :B_ENT_CERT and B_ENT_CERT_NUM = :B_ENT_CERT_NUM and B_INF_SURC_CODE = :B_INF_SURC_CODE and MMB_PSTN = ''1'') where tcnt <= 1','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I3100E01_310_E_01','20210415','TESTCORP','72','002','MBT_PM_310_E','I3100E01_310_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I3100E01_310_E_02','20210319','TESTCORP','72','002','报送主要组成人员信息段时，董事长只能报一个人。','报送主要组成人员信息段时，董事长只能报一个人。','表内逻辑校验','人民银行','MMB_PSTN','主要组成人员职位','R','Y','select 1 from (select count(*) as tcnt from mbt_pm_310_e where DATA_DATE=:DATA_DATE and B_ENT_CERT = :B_ENT_CERT and B_ENT_CERT_NUM = :B_ENT_CERT_NUM and B_INF_SURC_CODE = :B_INF_SURC_CODE and MMB_PSTN = ''4'') where tcnt <= 1','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I3100E01_310_E_02','20210415','TESTCORP','72','002','MBT_PM_310_E','I3100E01_310_E_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I3100E01_310_E_03','20210319','TESTCORP','72','002','报送主要组成人员信息段时，监事长只能报一个人。','报送主要组成人员信息段时，监事长只能报一个人。','表内逻辑校验','人民银行','MMB_PSTN','主要组成人员职位','R','Y','select 1 from (select count(*) as tcnt from mbt_pm_310_e where DATA_DATE=:DATA_DATE and B_ENT_CERT = :B_ENT_CERT and B_ENT_CERT_NUM = :B_ENT_CERT_NUM and B_INF_SURC_CODE = :B_INF_SURC_CODE and MMB_PSTN = ''5'') where tcnt <= 1','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I3100E01_310_E_03','20210415','TESTCORP','72','002','MBT_PM_310_E','I3100E01_310_E_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I3100F02_310_F_01','20210319','TESTCORP','72','002','注册资本及主要出资人段中的出资比例大于0，小于或等于100。','注册资本及主要出资人段中的出资比例大于0，小于或等于100。','表内逻辑校验','人民银行','INV_RATIO','出资比例','R','Y','','if (isEmpty(INV_RATIO)) {
    return false
}
return (INV_RATIO as BigDecimal)>0  &&  (INV_RATIO as BigDecimal)<=100','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I3100F02_310_F_01','20210415','TESTCORP','72','002','MBT_PM_310_FF','I3100F02_310_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I3100A07_310_C_01','20210319','TESTCORP','72','002','其他标识段中的“企业身份标识类型”、“企业身份标识号码”不能与基础段中的“企业身份标识类型”、“企业身份标识号码”完全相同。','其他标识段中的“企业身份标识类型”、“企业身份标识号码”不能与基础段中的“企业身份标识类型”、“企业身份标识号码”完全相同。','表内逻辑校验','人民银行','OTH_ENT_CERT_NUM','企业身份标识号码（其他）','R','Y','','if (!isEmpty(OTH_ENT_CERT_NUM) && !isEmpty(B_ENT_CERT_NUM)) {
    if (OTH_ENT_CERT_NUM!= B_ENT_CERT_NUM) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I3100A07_310_C_01','20210415','TESTCORP','72','002','MBT_PM_310_C','I3100A07_310_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_41X_C_01','20210319','TESTCORP','72','002','企业借贷账户信息记录的信息报告日期应不早于开户日期','企业借贷账户信息记录的信息报告日期应不早于开户日期','表内逻辑校验','人民银行','C_OPEN_DATE','开户日期','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(C_OPEN_DATE)) {
    if (C_OPEN_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_41X_C_01','20210415','TESTCORP','72','002','MBT_PM_410_C','I0000501_41X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_412_C_01','20210415','TESTCORP','72','002','MBT_PM_412_C','I0000501_41X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_41X_H_01','20210319','TESTCORP','72','002','企业借贷账户信息记录的信息报告日期应不早于余额变化日期','企业借贷账户信息记录的信息报告日期应不早于余额变化日期','表内逻辑校验','人民银行','H_BAL_CHG_DATE','余额变化日期','R','Y','','if (!isEmpty(H_BAL_CHG_DATE) && !isEmpty(B_RPT_DATE)) {
    if (H_BAL_CHG_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000501_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000501_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_41X_H_02','20210319','TESTCORP','72','002','企业借贷账户信息记录的信息报告日期应不早于五级分类认定日期','企业借贷账户信息记录的信息报告日期应不早于五级分类认定日期','表内逻辑校验','人民银行','H_FIVE_CATE_ADJ_DATE','五级分类认定日期','R','Y','','if (!isEmpty(H_FIVE_CATE_ADJ_DATE) && !isEmpty(B_RPT_DATE)) {
    if (H_FIVE_CATE_ADJ_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_41X_H_02','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000501_41X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_412_H_02','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000501_41X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_41X_H_03','20210319','TESTCORP','72','002','企业借贷账户信息记录的信息报告日期应不早于最近一次实际还款日期','企业借贷账户信息记录的信息报告日期应不早于最近一次实际还款日期','表内逻辑校验','人民银行','H_LAT_RPY_DATE','最近一次实际还款日期','R','Y','','if (!isEmpty(H_LAT_RPY_DATE) && !isEmpty(B_RPT_DATE)) {
    if (H_LAT_RPY_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_41X_H_03','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000501_41X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_412_H_03','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000501_41X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_41X_H_04','20210319','TESTCORP','72','002','企业借贷账户信息记录的信息报告日期应不早于最近一次约定还款日期','企业借贷账户信息记录的信息报告日期应不早于最近一次约定还款日期','表内逻辑校验','人民银行','H_LAT_AGRR_RPY_DATE','最近一次约定还款日','R','Y','','if (!isEmpty(H_LAT_AGRR_RPY_DATE) && !isEmpty(B_RPT_DATE)) {
    if (H_LAT_AGRR_RPY_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_41X_H_04','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000501_41X_H_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_412_H_04','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000501_41X_H_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_41X_H_05','20210319','TESTCORP','72','002','企业借贷账户信息记录的信息报告日期应不早于账户关闭日期','企业借贷账户信息记录的信息报告日期应不早于账户关闭日期','表内逻辑校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(H_CLOSE_DATE)) {
    if (H_CLOSE_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_41X_H_05','20210415','TESTCORP','72','002','MBT_PM_410_H','I0000501_41X_H_05','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_412_H_05','20210415','TESTCORP','72','002','MBT_PM_412_H','I0000501_41X_H_05','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_41X_I_01','20210319','TESTCORP','72','002','企业借贷账户信息记录的信息报告日期应不早于交易日期','企业借贷账户信息记录的信息报告日期应不早于交易日期','表内逻辑校验','人民银行','I_TRAN_DATE','交易日期','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(I_TRAN_DATE)) {
    if (I_TRAN_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_41X_I_01','20210415','TESTCORP','72','002','MBT_PM_410_I','I0000501_41X_I_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_412_I_01','20210415','TESTCORP','72','002','MBT_PM_412_I','I0000501_41X_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100C02_41X_C_01','20210319','TESTCORP','72','002','“开户日期”应不晚于“到期日期”。','“开户日期”应不晚于“到期日期”。','表内逻辑校验','人民银行','C_OPEN_DATE','开户日期','R','Y','','if (!isEmpty(C_DUE_DATE) && !isEmpty(C_OPEN_DATE) && !isEmpty(C_DUE_DATE) && !isEmpty(C_DUE_DATE)) {
    if (C_OPEN_DATE<=C_DUE_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100C02_41X_C_01','20210415','TESTCORP','72','002','MBT_PM_410_C','I4100C02_41X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100C02_412_C_01','20210415','TESTCORP','72','002','MBT_PM_412_C','I4100C02_41X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100C03_41X_C_01','20210319','TESTCORP','72','002','若账户基本信息段中的“还款方式”为“90-汇总报送，不区分还款方式”，则“还款频率”为“10-月”。','若账户基本信息段中的“还款方式”为“90-汇总报送，不区分还款方式”，则“还款频率”为“10-月”。','表内逻辑校验','人民银行','C_REPAY_FREQCY','还款频率','R','Y','','if (!isEmpty(C_REPAY_FREQCY) && !isEmpty(C_REPAY_MODE) && C_REPAY_MODE==''90'') {
    if (C_REPAY_FREQCY==''10'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100C03_41X_C_01','20210415','TESTCORP','72','002','MBT_PM_410_C','I4100C03_41X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100C03_412_C_01','20210415','TESTCORP','72','002','MBT_PM_412_C','I4100C03_41X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100C04_41X_C_01','20210319','TESTCORP','72','002','若账户基本信息段中的“还款方式”以“2”开头，则“还款频率”为“99-其他”。','若账户基本信息段中的“还款方式”以“2”开头，则“还款频率”为“99-其他”。','表内逻辑校验','人民银行','C_REPAY_FREQCY','还款频率','R','Y','','if (!isEmpty(C_REPAY_FREQCY) && C_REPAY_MODE.startsWith(''2'')) {
    if (C_REPAY_FREQCY==''99'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100C04_41X_C_01','20210415','TESTCORP','72','002','MBT_PM_410_C','I4100C04_41X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100C04_412_C_01','20210415','TESTCORP','72','002','MBT_PM_412_C','I4100C04_41X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100D01_41X_D_00','20210319','TESTCORP','72','002','相关还款责任人段中“还款责任人类型”为“1-共同借款人”时，“还款责任金额”为空。','相关还款责任人段中“还款责任人类型”为“1-共同借款人”时，“还款责任金额”为空。','表内逻辑校验','人民银行','D_ARLP_AMT','还款责任金额','R','Y','','if (!isEmpty(D_ARLP_AMT) && !isEmpty(D_ARLP_TYPE) && D_ARLP_TYPE==''1'') {
    if (isEmpty(D_ARLP_AMT)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D01_41X_D_00','20210415','TESTCORP','72','002','MBT_PM_410_D','I4100D01_41X_D_00','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100D01_412_D_00','20210415','TESTCORP','72','002','MBT_PM_412_D','I4100D01_41X_D_00','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H02_41X_H_01','20210319','TESTCORP','72','002','当“账户状态”为“21-关闭”时，“余额”必须为0','当“账户状态”为“21-关闭”时，“余额”必须为0','表内逻辑校验','人民银行','H_ACCT_BAL','余额','R','Y','','if (!isEmpty(H_ACCT_BAL) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS==''21'') {
    if ((H_ACCT_BAL as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H02_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H02_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H02_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H02_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H04_41X_H_01','20210319','TESTCORP','72','002','若“账户状态”为“31-呆账（已核销）”、“32-呆账（进入核销认定程序，等待核销）”时，“当前逾期总额”不能为0。','若“账户状态”为“31-呆账（已核销）”、“32-呆账（进入核销认定程序，等待核销）”时，“当前逾期总额”不能为0。','表内逻辑校验','人民银行','H_TOT_OVERD','当前逾期总额','R','Y','','if (!isEmpty(H_TOT_OVERD) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS in [''31'',''32'']) {
    if (H_TOT_OVERD!=0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H04_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H04_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H04_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H04_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H05_41X_H_01','20210319','TESTCORP','72','002','若“账户状态”为“21-关闭”时，“当前逾期总额”必须为0','若“账户状态”为“21-关闭”时，“当前逾期总额”必须为0','表内逻辑校验','人民银行','H_TOT_OVERD','当前逾期总额','R','Y','','if (!isEmpty(H_TOT_OVERD) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS==''21'') {
    if ((H_TOT_OVERD as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H05_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H05_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H05_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H05_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H05_41X_H_02','20210319','TESTCORP','72','002','若“账户状态”为“21-关闭”时，“当前逾期本金”必须为0','若“账户状态”为“21-关闭”时，“当前逾期本金”必须为0','表内逻辑校验','人民银行','H_OVERD_PRINC','当前逾期本金','R','Y','','if (!isEmpty(H_OVERD_PRINC) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS==''21'') {
    if ((H_OVERD_PRINC as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H05_41X_H_02','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H05_41X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H05_412_H_02','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H05_41X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H05_41X_H_03','20210319','TESTCORP','72','002','若“账户状态”为“21-关闭”时，“当前逾期天数”必须为0','若“账户状态”为“21-关闭”时，“当前逾期天数”必须为0','表内逻辑校验','人民银行','H_OVERD_DY','当前逾期天数','R','Y','','if (!isEmpty(H_OVERD_DY) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS==''21'') {
    if ((H_OVERD_DY as BigDecimal) ==0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H05_41X_H_03','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H05_41X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H05_412_H_03','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H05_41X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H07_41X_H_01','20210319','TESTCORP','72','002','“最近一次实际归还本金”必须小于等于“最近一次实际还款金额”。','“最近一次实际归还本金”必须小于等于“最近一次实际还款金额”。','表内逻辑校验','人民银行','H_LAT_RPY_PRINC_AMT','最近一次实际归还本金','R','Y','','if (!isEmpty(H_LAT_RPY_PRINC_AMT) && !isEmpty(H_LAT_RPY_AMT) && !isEmpty(H_LAT_RPY_AMT) && !isEmpty(H_LAT_RPY_AMT)) {
    if ((H_LAT_RPY_PRINC_AMT as BigDecimal)<=(H_LAT_RPY_AMT as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H07_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H07_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H07_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H07_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H08_41X_H_01','20210319','TESTCORP','72','002','当且仅当“当前逾期总额”大于0，则“当前逾期天数”不为0。','当且仅当“当前逾期总额”大于0，则“当前逾期天数”不为0。','表内逻辑校验','人民银行','H_OVERD_DY','当前逾期天数','R','Y','','if (!isEmpty(H_TOT_OVERD) && !isEmpty(H_OVERD_DY) && (H_TOT_OVERD as BigDecimal)>0) {
    if ((H_OVERD_DY as BigDecimal) !=0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H08_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H08_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H08_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H08_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H09_41X_H_01','20210319','TESTCORP','72','002','当“账户关闭日”不为空时，则必须不早于“余额变化日期”。','当“账户关闭日”不为空时，则必须不早于“余额变化日期”。','表内逻辑校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(H_BAL_CHG_DATE) && !isEmpty(H_CLOSE_DATE) && !isEmpty(H_BAL_CHG_DATE) && !isEmpty(H_BAL_CHG_DATE)) {
    if (H_CLOSE_DATE>=H_BAL_CHG_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H09_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H09_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H09_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H09_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H09_41X_H_02','20210319','TESTCORP','72','002','当“账户关闭日”不为空时，则必须不早于“最近一次实际还款日期”。','当“账户关闭日”不为空时，则必须不早于“最近一次实际还款日期”。','表内逻辑校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(H_LAT_RPY_DATE) && !isEmpty(H_CLOSE_DATE) && !isEmpty(H_LAT_RPY_DATE) && !isEmpty(H_LAT_RPY_DATE)) {
    if (H_CLOSE_DATE>=H_LAT_RPY_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H09_41X_H_02','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H09_41X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H09_412_H_02','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H09_41X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H09_41X_H_03','20210319','TESTCORP','72','002','当“账户关闭日”不为空时，则必须不早于“最近一次约定还款日期”。','当“账户关闭日”不为空时，则必须不早于“最近一次约定还款日期”。','表内逻辑校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(H_LAT_AGRR_RPY_DATE) && !isEmpty(H_CLOSE_DATE) && !isEmpty(H_LAT_AGRR_RPY_DATE) && !isEmpty(H_LAT_AGRR_RPY_DATE)) {
    if (H_CLOSE_DATE>=H_LAT_AGRR_RPY_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H09_41X_H_03','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H09_41X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H09_412_H_03','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H09_41X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H09_41X_H_04','20210319','TESTCORP','72','002','当“账户关闭日”不为空时，则必须不早于“五级分类认定日期”。','当“账户关闭日”不为空时，则必须不早于“五级分类认定日期”。','表内逻辑校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(H_FIVE_CATE_ADJ_DATE) && !isEmpty(H_CLOSE_DATE) && !isEmpty(H_FIVE_CATE_ADJ_DATE) && !isEmpty(H_FIVE_CATE_ADJ_DATE)) {
    if (H_CLOSE_DATE>=H_FIVE_CATE_ADJ_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H09_41X_H_04','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H09_41X_H_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H09_412_H_04','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H09_41X_H_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H10_41X_H_01','20210319','TESTCORP','72','002','当“账户状态”为“21-关闭”时，则“下一次约定还款日期”必须为空。','当“账户状态”为“21-关闭”时，则“下一次约定还款日期”必须为空。','表内逻辑校验','人民银行','H_NXT_AGRR_RPY_DATE','下一次约定还款日期','R','Y','','if (!isEmpty(H_NXT_AGRR_RPY_DATE) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS==''21'') {
    if (isEmpty(H_NXT_AGRR_RPY_DATE)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H10_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H10_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H10_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H10_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H11_41X_H_01','20210319','TESTCORP','72','002','当“下一次约定还款日期”不为空时，则必须不早于“余额变化日期”。','当“下一次约定还款日期”不为空时，则必须不早于“余额变化日期”。','表内逻辑校验','人民银行','H_NXT_AGRR_RPY_DATE','下一次约定还款日期','R','Y','','if (!isEmpty(H_NXT_AGRR_RPY_DATE) && !isEmpty(H_BAL_CHG_DATE) && !isEmpty(H_BAL_CHG_DATE) && !isEmpty(H_BAL_CHG_DATE)) {
    if (H_NXT_AGRR_RPY_DATE>=H_BAL_CHG_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H11_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H11_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H11_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H11_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H11_41X_H_02','20210319','TESTCORP','72','002','当“下一次约定还款日期”不为空时，则必须不早于“最近一次实际还款日期”。','当“下一次约定还款日期”不为空时，则必须不早于“最近一次实际还款日期”。','表内逻辑校验','人民银行','H_NXT_AGRR_RPY_DATE','下一次约定还款日期','R','Y','','if (!isEmpty(H_LAT_RPY_DATE) && !isEmpty(H_NXT_AGRR_RPY_DATE) && !isEmpty(H_LAT_RPY_DATE) && !isEmpty(H_LAT_RPY_DATE)) {
    if (H_NXT_AGRR_RPY_DATE>=H_LAT_RPY_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H11_41X_H_02','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H11_41X_H_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H11_412_H_02','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H11_41X_H_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H11_41X_H_03','20210319','TESTCORP','72','002','当“下一次约定还款日期”不为空时，则必须不早于“最近一次约定还款日期”。','当“下一次约定还款日期”不为空时，则必须不早于“最近一次约定还款日期”。','表内逻辑校验','人民银行','H_NXT_AGRR_RPY_DATE','下一次约定还款日期','R','Y','','if (!isEmpty(H_LAT_AGRR_RPY_DATE) && !isEmpty(H_NXT_AGRR_RPY_DATE) && !isEmpty(H_LAT_AGRR_RPY_DATE) && !isEmpty(H_LAT_AGRR_RPY_DATE)) {
    if (H_NXT_AGRR_RPY_DATE>=H_LAT_AGRR_RPY_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H11_41X_H_03','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H11_41X_H_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H11_412_H_03','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H11_41X_H_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H11_41X_H_04','20210319','TESTCORP','72','002','当“下一次约定还款日期”不为空时，则必须不早于“五级分类认定日期”。','当“下一次约定还款日期”不为空时，则必须不早于“五级分类认定日期”。','表内逻辑校验','人民银行','H_NXT_AGRR_RPY_DATE','下一次约定还款日期','R','Y','','if (!isEmpty(H_NXT_AGRR_RPY_DATE) && !isEmpty(H_FIVE_CATE_ADJ_DATE) && !isEmpty(H_FIVE_CATE_ADJ_DATE) && !isEmpty(H_FIVE_CATE_ADJ_DATE)) {
    if (H_NXT_AGRR_RPY_DATE>=H_FIVE_CATE_ADJ_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H11_41X_H_04','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H11_41X_H_04','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H11_412_H_04','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H11_41X_H_04','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H12_41X_H_01','20210319','TESTCORP','72','002','“信息报告日期”应不晚于同一条记录中“下一次约定还款日期”。','“信息报告日期”应不晚于同一条记录中“下一次约定还款日期”。','表内逻辑校验','人民银行','H_NXT_AGRR_RPY_DATE','下一次约定还款日期','R','Y','','if (!isEmpty(H_NXT_AGRR_RPY_DATE) && !isEmpty(B_RPT_DATE)) {
    if (H_NXT_AGRR_RPY_DATE>=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H12_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H12_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H12_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H12_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100I01_41X_I_01','20210319','TESTCORP','72','002','当账户信息记录中的“交易变更类型”为“11-展期”，“到期日期变更月数”>0。','当账户信息记录中的“交易变更类型”为“11-展期”，“到期日期变更月数”>0。','表内逻辑校验','人民银行','I_DUE_TRAN_MON','到期日期变更月数','R','Y','','if (!isEmpty(I_DUE_TRAN_MON) && !isEmpty(I_CHAN_TRAN_TYPE) && I_CHAN_TRAN_TYPE==''11'') {
    if ((I_DUE_TRAN_MON as BigDecimal) >0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100I01_41X_I_01','20210415','TESTCORP','72','002','MBT_PM_410_I','I4100I01_41X_I_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100I01_412_I_01','20210415','TESTCORP','72','002','MBT_PM_412_I','I4100I01_41X_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100A04_41X_C_01','20210319','TESTCORP','72','002','当账户类型为“C1”时，借贷业务大类只能为“51-资产处置”、“41-垫款”。','当账户类型为“C1”时，借贷业务大类只能为“51-资产处置”、“41-垫款”。','表内逻辑校验','人民银行','C_BUSI_LINES','借贷业务大类','R','Y','','if (!isEmpty(C_BUSI_LINES) && !isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE ==''C1'') {
    if (C_BUSI_LINES in [''51'',''41'']) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100A04_41X_C_01','20210415','TESTCORP','72','002','MBT_PM_410_C','I4100A04_41X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100A04_412_C_01','20210415','TESTCORP','72','002','MBT_PM_412_C','I4100A04_41X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100C05_41X_C_01','20210319','TESTCORP','72','002','若“账户类型”为R4、D1时，账户基本信息段中的“还款方式”必须不为“31”、“32”、“33”、“39”。','若“账户类型”为R4、D1时，账户基本信息段中的“还款方式”必须不为“31”、“32”、“33”、“39”。','表内逻辑校验','人民银行','C_REPAY_MODE','还款方式','R','Y','','if (!isEmpty(C_REPAY_MODE) && !isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''R4'',''D1'']) {
    if (!(C_REPAY_MODE in [''31'',''32'',''33'',''39''])) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100C05_41X_C_01','20210415','TESTCORP','72','002','MBT_PM_410_C','I4100C05_41X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100C05_412_C_01','20210415','TESTCORP','72','002','MBT_PM_412_C','I4100C05_41X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100C06_41X_C_01','20210319','TESTCORP','72','002','若“账户类型”为R1时，账户“基本信息段”中的“还款方式”必须不为“11”、“12”、“13”、“14”、“15”、“19”、“21”、“22”、“23”、“29”。','若“账户类型”为R1时，账户“基本信息段”中的“还款方式”必须不为“11”、“12”、“13”、“14”、“15”、“19”、“21”、“22”、“23”、“29”。','表内逻辑校验','人民银行','C_REPAY_MODE','还款方式','R','Y','','if (!isEmpty(C_REPAY_MODE) && !isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE ==''R1'') {
    if (!(C_REPAY_MODE in [''11'',''12'',''13'',''14'',''15'',''21'',''22'',''23'',''29''])) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100C06_41X_C_01','20210415','TESTCORP','72','002','MBT_PM_410_C','I4100C06_41X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100C06_412_C_01','20210415','TESTCORP','72','002','MBT_PM_412_C','I4100C06_41X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100H06_41X_H_01','20210319','TESTCORP','72','002','对于D1/D2/R1/R4账户，信息记录中“当前逾期本金”必须小于等于“当前逾期总额”。','对于D1/D2/R1/R4账户，信息记录中“当前逾期本金”必须小于等于“当前逾期总额”。','表内逻辑校验','人民银行','H_OVERD_PRINC','当前逾期本金','R','Y','','if (!isEmpty(H_OVERD_PRINC) && !isEmpty(H_TOT_OVERD) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_TOT_OVERD) && B_ACCT_TYPE in [''D1'',''D2'',''R1'',''R4'']  &&  !isEmpty(H_TOT_OVERD)) {
    if ((H_OVERD_PRINC as BigDecimal)<=(H_TOT_OVERD as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H06_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100H06_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100H06_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100H06_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('R4100105_410_B_01','20210319','TESTCORP','72','002','当“报送时点说明代码”为“31-开户后放款”时，账户类型不能为“D2/R1/R4/C1”','当“报送时点说明代码”为“31-开户后放款”时，账户类型不能为“D2/R1/R4/C1”','表内逻辑校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','','if (!isEmpty(B_ACCT_TYPE) && !isEmpty(B_RPT_DATE_CODE) && B_RPT_DATE_CODE==''31'') {
    if (!(B_ACCT_TYPE in [''D2'',''R1'',''R4'',''C1''])) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100105_410_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100105_410_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('R4100107_410_B_01','20210319','TESTCORP','72','002','当“报送时点说明代码”为“32-约定还款日结算”时，账户类型不能为“R1/C1”','当“报送时点说明代码”为“32-约定还款日结算”时，账户类型不能为“R1/C1”','表内逻辑校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','','if (!isEmpty(B_ACCT_TYPE) && !isEmpty(B_RPT_DATE_CODE) && B_RPT_DATE_CODE==''32'') {
    if (!(B_ACCT_TYPE in [''R1'',''C1''])) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100107_410_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100107_410_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('R4100109_410_B_01','20210319','TESTCORP','72','002','当“报送时点说明代码”为“33-实际还款”时，账户类型不能为“R1”','当“报送时点说明代码”为“33-实际还款”时，账户类型不能为“R1”','表内逻辑校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','','if (!isEmpty(B_ACCT_TYPE) && !isEmpty(B_RPT_DATE_CODE) && B_RPT_DATE_CODE==''33'') {
    if (B_ACCT_TYPE != ''R1'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100109_410_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100109_410_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('R4100111_410_B_01','20210319','TESTCORP','72','002','当“报送时点说明代码”为“41-五级分类调整”时，账户类型不能为“R1”','当“报送时点说明代码”为“41-五级分类调整”时，账户类型不能为“R1”','表内逻辑校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','','if (!isEmpty(B_ACCT_TYPE) && !isEmpty(B_RPT_DATE_CODE) && B_RPT_DATE_CODE==''41'') {
    if (B_ACCT_TYPE != ''R1'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100111_410_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100111_410_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('R4100113_410_B_01','20210319','TESTCORP','72','002','当“报送时点说明代码”为“42-展期发生”时，账户类型不能为“D2/R1/C1”','当“报送时点说明代码”为“42-展期发生”时，账户类型不能为“D2/R1/C1”','表内逻辑校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','','if (!isEmpty(B_ACCT_TYPE) && !isEmpty(B_RPT_DATE_CODE) && B_RPT_DATE_CODE==''42'') {
    if (!(B_ACCT_TYPE in [''D2'',''R1'',''C1''])) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100113_410_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100113_410_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4200D01_42X_D_01','20210319','TESTCORP','72','002','“额度生效日期”必须不晚于“额度到期日期”。','“额度生效日期”必须不晚于“额度到期日期”。','表内逻辑校验','人民银行','D_CON_EFF_DATE','额度生效日期','R','Y','','if (!isEmpty(D_CON_EXP_DATE) && !isEmpty(D_CON_EFF_DATE) && !isEmpty(D_CON_EXP_DATE) && !isEmpty(D_CON_EXP_DATE)) {
    if (D_CON_EFF_DATE<=D_CON_EXP_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4200D01_42X_D_01','20210415','TESTCORP','72','002','MBT_PM_420_D','I4200D01_42X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4200D01_422_D_01','20210415','TESTCORP','72','002','MBT_PM_422_D','I4200D01_42X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4200D02_42X_D_01','20210319','TESTCORP','72','002','“授信限额编号”、“授信限额”其中之一不为空时，另一个应不为空。','“授信限额编号”、“授信限额”其中之一不为空时，另一个应不为空。','表内逻辑校验','人民银行','D_CREDIT_REST','授信限额','R','Y','','if (!isEmpty(D_CREDIT_REST_CODE)) {
    if (!isEmpty(D_CREDIT_REST_CODE)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4200D02_42X_D_01','20210415','TESTCORP','72','002','MBT_PM_420_D','I4200D02_42X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4200D02_422_D_01','20210415','TESTCORP','72','002','MBT_PM_422_D','I4200D02_42X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4200D02_42X_D_02','20210319','TESTCORP','72','002','“授信限额编号”、“授信限额”其中之一不为空时，另一个应不为空。','“授信限额编号”、“授信限额”其中之一不为空时，另一个应不为空。','表内逻辑校验','人民银行','D_CREDIT_REST_CODE','授信限额编号','R','Y','','if (!isEmpty(D_CREDIT_REST)) {
    if (!isEmpty(D_CREDIT_REST)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4200D02_42X_D_02','20210415','TESTCORP','72','002','MBT_PM_420_D','I4200D02_42X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4200D02_422_D_02','20210415','TESTCORP','72','002','MBT_PM_422_D','I4200D02_42X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('C4200D01_42X_D_01','20210319','TESTCORP','72','002','当授信额度类型为黄金借贷时，请检查是否需要补录授信限额/授信限额编号(PendingForCheck)','当授信额度类型为黄金借贷时，请检查是否需要补录授信限额/授信限额编号(PendingForCheck)','表内逻辑校验','人民银行','D_CREDIT_REST_CODE','授信限额编号','R','Y','','if (!isEmpty(D_CREDIT_REST_CODE) && !isEmpty(D_CREDIT_LIM_TYPE) && D_CREDIT_LIM_TYPE==''31'') {
    if (!D_CREDIT_REST_CODE.contains(''%PendingForCheck'')'') {
        return true
    }
    return false
}
return true','N','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('C4200D01_42X_D_01','20210415','TESTCORP','72','002','MBT_PM_420_D','C4200D01_42X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('C4200D01_422_D_01','20210415','TESTCORP','72','002','MBT_PM_422_D','C4200D01_42X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_42X_D_01','20210319','TESTCORP','72','002','企业授信信息记录的信息报告日期应不早于额度生效日期','企业授信信息记录的信息报告日期应不早于额度生效日期','表内逻辑校验','人民银行','D_CON_EFF_DATE','额度生效日期','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(D_CON_EFF_DATE)) {
    if (D_CON_EFF_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_42X_D_01','20210415','TESTCORP','72','002','MBT_PM_420_D','I0000501_42X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_422_D_01','20210415','TESTCORP','72','002','MBT_PM_422_D','I0000501_42X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_44X_C_01','20210319','TESTCORP','72','002','企业担保账户信息记录的信息报告日期应不早于开户日期','企业担保账户信息记录的信息报告日期应不早于开户日期','表内逻辑校验','人民银行','C_OPEN_DATE','开户日期','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(C_OPEN_DATE)) {
    if (C_OPEN_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_44X_C_01','20210415','TESTCORP','72','002','MBT_PM_440_C','I0000501_44X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_442_C_01','20210415','TESTCORP','72','002','MBT_PM_442_C','I0000501_44X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_44X_D_01','20210319','TESTCORP','72','002','企业担保账户信息记录的信息报告日期应不早于余额变化日期','企业担保账户信息记录的信息报告日期应不早于余额变化日期','表内逻辑校验','人民银行','D_REPAY_PRD','余额变化日期','R','Y','','if (!isEmpty(D_REPAY_PRD) && !isEmpty(B_RPT_DATE)) {
    if (D_REPAY_PRD<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_44X_D_01','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000501_44X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_442_D_01','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000501_44X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_44X_D_02','20210319','TESTCORP','72','002','企业担保账户信息记录的信息报告日期应不早于五级分类认定日期','企业担保账户信息记录的信息报告日期应不早于五级分类认定日期','表内逻辑校验','人民银行','D_FIVE_CATE_ADJ_DATE','五级分类认定日期','R','Y','','if (!isEmpty(D_FIVE_CATE_ADJ_DATE) && !isEmpty(B_RPT_DATE)) {
    if (D_FIVE_CATE_ADJ_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_44X_D_02','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000501_44X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_442_D_02','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000501_44X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_44X_D_03','20210319','TESTCORP','72','002','企业担保账户信息记录的信息报告日期应不早于账户关闭日期','企业担保账户信息记录的信息报告日期应不早于账户关闭日期','表内逻辑校验','人民银行','D_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(D_CLOSE_DATE)) {
    if (D_CLOSE_DATE<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_44X_D_03','20210415','TESTCORP','72','002','MBT_PM_440_D','I0000501_44X_D_03','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_442_D_03','20210415','TESTCORP','72','002','MBT_PM_442_D','I0000501_44X_D_03','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4400C01_44X_C_01','20210319','TESTCORP','72','002','“开户日期”应不晚于“到期日期”。','“开户日期”应不晚于“到期日期”。','表内逻辑校验','人民银行','C_OPEN_DATE','开户日期','R','Y','','if (!isEmpty(C_DUE_DATE) && !isEmpty(C_OPEN_DATE)) {
    if (C_OPEN_DATE<=C_DUE_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C01_44X_C_01','20210415','TESTCORP','72','002','MBT_PM_440_C','I4400C01_44X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400C01_442_C_01','20210415','TESTCORP','72','002','MBT_PM_442_C','I4400C01_44X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4400D02_44X_D_01','20210319','TESTCORP','72','002','账户信息记录中如果“账户关闭日期”数据项不为空，账户关闭日期应不早于“余额变化日期”、“五级分类认定日期”。','账户信息记录中如果“账户关闭日期”数据项不为空，账户关闭日期应不早于“余额变化日期”、“五级分类认定日期”。','表内逻辑校验','人民银行','D_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(D_REPAY_PRD) && !isEmpty(D_CLOSE_DATE) && !isEmpty(D_REPAY_PRD) && !isEmpty(D_REPAY_PRD)) {
    if (D_CLOSE_DATE>=D_REPAY_PRD) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400D02_44X_D_01','20210415','TESTCORP','72','002','MBT_PM_440_D','I4400D02_44X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400D02_442_D_01','20210415','TESTCORP','72','002','MBT_PM_442_D','I4400D02_44X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4400D02_44X_D_02','20210319','TESTCORP','72','002','账户信息记录中如果“账户关闭日期”数据项不为空，账户关闭日期应不早于“余额变化日期”、“五级分类认定日期”。','账户信息记录中如果“账户关闭日期”数据项不为空，账户关闭日期应不早于“余额变化日期”、“五级分类认定日期”。','表内逻辑校验','人民银行','D_CLOSE_DATE','账户关闭日期','R','Y','','if (!isEmpty(D_FIVE_CATE_ADJ_DATE) && !isEmpty(D_CLOSE_DATE) && !isEmpty(D_FIVE_CATE_ADJ_DATE) && !isEmpty(D_FIVE_CATE_ADJ_DATE)) {
    if (D_CLOSE_DATE>=D_FIVE_CATE_ADJ_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400D02_44X_D_02','20210415','TESTCORP','72','002','MBT_PM_440_D','I4400D02_44X_D_02','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400D02_442_D_02','20210415','TESTCORP','72','002','MBT_PM_442_D','I4400D02_44X_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('P4400D01_44X_D_01','20210319','TESTCORP','72','002','[机构核查]担保账户末关闭时，"代偿标志"不应为"是"','[机构核查]担保账户末关闭时，"代偿标志"不应为"是"','表内逻辑校验','人民银行','D_COMP_ADV_FLAG','代偿（垫款）标志','R','Y','','if (!isEmpty(D_COMP_ADV_FLAG) && !isEmpty(D_ACCT_STATUS) && D_ACCT_STATUS==''1'') {
    if (D_COMP_ADV_FLAG==''0'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4400D01_44X_D_01','20210415','TESTCORP','72','002','MBT_PM_440_D','P4400D01_44X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4400D01_442_D_01','20210415','TESTCORP','72','002','MBT_PM_442_D','P4400D01_44X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6100C01_610_C_01','20210319','TESTCORP','72','002','在借款人2002版资产负债表信息中数据项“负债合计+少数股东权益+所有者权益合计=负债和所有者权益总计”。','在借款人2002版资产负债表信息中数据项“负债合计+少数股东权益+所有者权益合计=负债和所有者权益总计”。','表内逻辑校验','人民银行','C_TOTAL_EQUITY_LIABILITIES','负债和所有者权益总计','R','Y','','if (!isEmpty(C_TOTAL_EQUITY_LIABILITIES) && !isEmpty(C_TOTAL_EQUITY) && !isEmpty(C_MINORITY_INTEREST) && !isEmpty(C_TOTAL_LIABILITIES)) {
    if ((C_TOTAL_EQUITY_LIABILITIES as BigDecimal)==(C_TOTAL_LIABILITIES as BigDecimal)+(C_MINORITY_INTEREST as BigDecimal)+(C_TOTAL_EQUITY as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6100C01_610_C_01','20210415','TESTCORP','72','002','MBT_PM_610_C','I6100C01_610_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6100C02_610_C_01','20210319','TESTCORP','72','002','在借款人2002版资产负债表信息中数据项“负债和所有者权益总计=资产总计”。','在借款人2002版资产负债表信息中数据项“负债和所有者权益总计=资产总计”。','表内逻辑校验','人民银行','C_TOTAL_EQUITY_LIABILITIES','负债和所有者权益总计','R','Y','','if (!isEmpty(C_TOTAL_EQUITY_LIABILITIES) && !isEmpty(C_TOTAL_ASSETS)) {
    if ((C_TOTAL_EQUITY_LIABILITIES as BigDecimal)==(C_TOTAL_ASSETS as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6100C02_610_C_01','20210415','TESTCORP','72','002','MBT_PM_610_C','I6100C02_610_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6100D01_610_D_01','20210319','TESTCORP','72','002','在2007资产负债表信息中数据项“负债和所有者权益合计=负债合计+所有者权益合计”。','在2007资产负债表信息中数据项“负债和所有者权益合计=负债合计+所有者权益合计”。','表内逻辑校验','人民银行','D_TOTAL_EQUITY_LIABILITIES','负债和所有者权益合计','R','Y','','if (!isEmpty(D_TOTAL_EQUITY_LIABILITIES) && !isEmpty(D_TOTAL_EQUITY) && !isEmpty(D_TOTAL_LIABILITIES)) {
    if ((D_TOTAL_EQUITY_LIABILITIES as BigDecimal)==(D_TOTAL_LIABILITIES as BigDecimal)+(D_TOTAL_EQUITY as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6100D01_610_D_01','20210415','TESTCORP','72','002','MBT_PM_610_D','I6100D01_610_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6100D02_610_D_02','20210319','TESTCORP','72','002','在2007版资产负债表信息中数据项“资产总计=负债和所有者权益合计”。','在2007版资产负债表信息中数据项“资产总计=负债和所有者权益合计”。','表内逻辑校验','人民银行','D_TOTAL_ASSETS','资产总计','R','Y','','if (!isEmpty(D_TOTAL_EQUITY_LIABILITIES) && !isEmpty(D_TOTAL_ASSETS)) {
    if ((D_TOTAL_ASSETS as BigDecimal)==(D_TOTAL_EQUITY_LIABILITIES as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6100D02_610_D_02','20210415','TESTCORP','72','002','MBT_PM_610_D','I6100D02_610_D_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6300C01_630_C_01','20210319','TESTCORP','72','002','在借款人2002版现金流量表信息中数据项“经营活动产生的现金流量净额=经营活动现金流入小计-经营活动现金流出小计”。','在借款人2002版现金流量表信息中数据项“经营活动产生的现金流量净额=经营活动现金流入小计-经营活动现金流出小计”。','表内逻辑校验','人民银行','C_NET_CASH_FLOWS_OPERAT_ACT','经营活动产生的现金流量净额','R','Y','','if (!isEmpty(C_NET_CASH_FLOWS_OPERAT_ACT) && !isEmpty(C_TOTAL_CASH_INFLOWS_OPERA_ACT) && !isEmpty(C_TOTAL_CASH_OUTFLOWS_OPERA_AC)) {
    if ((C_NET_CASH_FLOWS_OPERAT_ACT as BigDecimal)==(C_TOTAL_CASH_INFLOWS_OPERA_ACT as BigDecimal)-(C_TOTAL_CASH_OUTFLOWS_OPERA_AC as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6300C01_630_C_01','20210415','TESTCORP','72','002','MBT_PM_630_C','I6300C01_630_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6300C02_630_C_01','20210319','TESTCORP','72','002','在借款人2002版现金流量表信息中数据项“投资活动产生的现金流量净额=投资活动现金流入小计-投资活动现金流出小计”。','在借款人2002版现金流量表信息中数据项“投资活动产生的现金流量净额=投资活动现金流入小计-投资活动现金流出小计”。','表内逻辑校验','人民银行','C_NET_CASH_FLOWS_INVESTING_ACT','投资活动产生的现金流量净额','R','Y','','if (!isEmpty(C_NET_CASH_FLOWS_INVESTING_ACT) && !isEmpty(C_TOTAL_CASH_INF_INVESTING_ACT) && !isEmpty(C_TOTAL_CASH_OUTFLOWS_INV_ACT)) {
    if ((C_NET_CASH_FLOWS_INVESTING_ACT as BigDecimal)==(C_TOTAL_CASH_INF_INVESTING_ACT as BigDecimal)-(C_TOTAL_CASH_OUTFLOWS_INV_ACT as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6300C02_630_C_01','20210415','TESTCORP','72','002','MBT_PM_630_C','I6300C02_630_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6300C03_630_C_01','20210319','TESTCORP','72','002','在借款人2002版现金流量表信息中数据项“筹集活动产生的现金流量净额=筹资活动现金流入小计-筹资活动现金流出小计”。','在借款人2002版现金流量表信息中数据项“筹集活动产生的现金流量净额=筹资活动现金流入小计-筹资活动现金流出小计”。','表内逻辑校验','人民银行','C_NET_CASH_FLOWS_FINANCING_AC','筹集活动产生的现金流量净额','R','Y','','if (!isEmpty(C_NET_CASH_FLOWS_FINANCING_AC) && !isEmpty(C_TOTAL_CASH_OUTFLOWS_FIN_AC) && !isEmpty(C_TOTAL_CASH_INF_FINANCING_ACT)) {
    if ((C_NET_CASH_FLOWS_FINANCING_AC as BigDecimal)==(C_TOTAL_CASH_INF_FINANCING_ACT as BigDecimal)-(C_TOTAL_CASH_OUTFLOWS_FIN_AC as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6300C03_630_C_01','20210415','TESTCORP','72','002','MBT_PM_630_C','I6300C03_630_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6300C04_630_C_01','20210319','TESTCORP','72','002','在借款人2002版现金流量表信息中数据项“现金及现金等价物净增加额=筹集活动产生的现金流量净额+汇率变动对现金的影响+经营活动产生的现金流量净额+投资活动产生的现金流量净额”。','在借款人2002版现金流量表信息中数据项“现金及现金等价物净增加额=筹集活动产生的现金流量净额+汇率变动对现金的影响+经营活动产生的现金流量净额+投资活动产生的现金流量净额”。','表内逻辑校验','人民银行','C_NET_INC_CASH_CASH_EQUIVALENT','现金及现金等价物净增加额','R','Y','','if (!isEmpty(C_NET_CASH_FLOWS_INVESTING_ACT) && !isEmpty(C_NET_CASH_FLOWS_FINANCING_AC) && !isEmpty(C_NET_CASH_FLOWS_OPERAT_ACT) && !isEmpty(C_NET_INC_CASH_CASH_EQUIVALENT) && !isEmpty(C_EFFECT_EX_RATE_CHANGES_CASH)) {
    if ((C_NET_INC_CASH_CASH_EQUIVALENT as BigDecimal)==(C_NET_CASH_FLOWS_FINANCING_AC as BigDecimal)+(C_EFFECT_EX_RATE_CHANGES_CASH as BigDecimal)+(C_NET_CASH_FLOWS_OPERAT_ACT as BigDecimal)+(C_NET_CASH_FLOWS_INVESTING_ACT as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6300C04_630_C_01','20210415','TESTCORP','72','002','MBT_PM_630_C','I6300C04_630_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6300D01_630_D_01','20210319','TESTCORP','72','002','在2007版现金流量表信息中数据项“经营活动产生的现金流量净额=经营活动现金流入小计-经营活动现金流出小计”。','在2007版现金流量表信息中数据项“经营活动产生的现金流量净额=经营活动现金流入小计-经营活动现金流出小计”。','表内逻辑校验','人民银行','D_NET_CASH_FLOWS_OPERATING_ACT','经营活动产生的现金流量净额','R','Y','','if (!isEmpty(D_NET_CASH_FLOWS_OPERATING_ACT) && !isEmpty(D_TOTAL_CASH_INFLOWS_OPERAT_AC) && !isEmpty(D_TOTAL_CASH_OUTFLOWS_OPERA_AC)) {
    if ((D_NET_CASH_FLOWS_OPERATING_ACT as BigDecimal)==(D_TOTAL_CASH_INFLOWS_OPERAT_AC as BigDecimal)-(D_TOTAL_CASH_OUTFLOWS_OPERA_AC as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6300D01_630_D_01','20210415','TESTCORP','72','002','MBT_PM_630_D','I6300D01_630_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6300D02_630_D_01','20210319','TESTCORP','72','002','在2007版现金流量表信息中数据项“投资活动产生的现金流量净额=投资活动现金流入小计-投资活动现金流出小计”。','在2007版现金流量表信息中数据项“投资活动产生的现金流量净额=投资活动现金流入小计-投资活动现金流出小计”。','表内逻辑校验','人民银行','D_NET_CASH_FLOWS_INVEST_ACT','投资活动产生的现金流量净额','R','Y','','if (!isEmpty(D_NET_CASH_FLOWS_INVEST_ACT) && !isEmpty(D_TOTAL_CASH_INFLOWS_INVEST_AC) && !isEmpty(D_SUB_TOTAL_CASH_OUTFLOWS)) {
    if ((D_NET_CASH_FLOWS_INVEST_ACT as BigDecimal)==(D_TOTAL_CASH_INFLOWS_INVEST_AC as BigDecimal)-(D_SUB_TOTAL_CASH_OUTFLOWS as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6300D02_630_D_01','20210415','TESTCORP','72','002','MBT_PM_630_D','I6300D02_630_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6300D03_630_D_01','20210319','TESTCORP','72','002','在2007版现金流量表信息中数据项“筹集活动产生的现金流量净额=筹资活动现金流入小计-筹资活动现金流出小计”。','在2007版现金流量表信息中数据项“筹集活动产生的现金流量净额=筹资活动现金流入小计-筹资活动现金流出小计”。','表内逻辑校验','人民银行','D_NET_CASH_FLOWS_FINANCING_ACT','筹集活动产生的现金流量净额','R','Y','','if (!isEmpty(D_NET_CASH_FLOWS_FINANCING_ACT) && !isEmpty(D_TOTAL_CASH_OUTFLOWS_FINA_ACT) && !isEmpty(D_TOTAL_CASH_INFLOWS_FINA_ACT)) {
    if ((D_NET_CASH_FLOWS_FINANCING_ACT as BigDecimal)==(D_TOTAL_CASH_INFLOWS_FINA_ACT as BigDecimal)-(D_TOTAL_CASH_OUTFLOWS_FINA_ACT as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6300D03_630_D_01','20210415','TESTCORP','72','002','MBT_PM_630_D','I6300D03_630_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6300D04_630_D_01','20210319','TESTCORP','72','002','在2007版现金流量表信息中数据项“现金及现金等价物净增加额=经营活动产生的现金流量净额+投资活动产生的现金流量净额+筹集活动产生的现金流量净额+汇率变动对现金及现金等价物的影响”。','在2007版现金流量表信息中数据项“现金及现金等价物净增加额=经营活动产生的现金流量净额+投资活动产生的现金流量净额+筹集活动产生的现金流量净额+汇率变动对现金及现金等价物的影响”。','表内逻辑校验','人民银行','D_NET_INC_CASH_CASH_EQUIVALENT','现金及现金等价物净增加额','R','Y','','if (!isEmpty(D_EFFECT_EXC_RATE_CHANGES_CASH) && !isEmpty(D_NET_CASH_FLOWS_INVEST_ACT) && !isEmpty(D_NET_CASH_FLOWS_FINANCING_ACT) && !isEmpty(D_NET_CASH_FLOWS_OPERATING_ACT) && !isEmpty(D_NET_INC_CASH_CASH_EQUIVALENT)) {
    if ((D_NET_INC_CASH_CASH_EQUIVALENT as BigDecimal)==(D_NET_CASH_FLOWS_OPERATING_ACT as BigDecimal)+(D_NET_CASH_FLOWS_INVEST_ACT as BigDecimal)+(D_NET_CASH_FLOWS_FINANCING_ACT as BigDecimal)+(D_EFFECT_EXC_RATE_CHANGES_CASH as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6300D04_630_D_01','20210415','TESTCORP','72','002','MBT_PM_630_D','I6300D04_630_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6300D05_630_D_01','20210319','TESTCORP','72','002','在2007版现金流量表信息中数据项“期末现金及现金等价物余额=现金及现金等价物净增加额+期初现金及现金等价物余额”。','在2007版现金流量表信息中数据项“期末现金及现金等价物余额=现金及现金等价物净增加额+期初现金及现金等价物余额”。','表内逻辑校验','人民银行','D_THE_FINAL_CASH_EQU_BALANCE','期末现金及现金等价物余额','R','Y','','if (!isEmpty(D_THE_FINAL_CASH_EQU_BALANCE) && !isEmpty(D_INITIAL_CASH_CASH_EQU_BALANC) && !isEmpty(D_NET_INC_CASH_CASH_EQUIVALENT)) {
    if ((D_THE_FINAL_CASH_EQU_BALANCE as BigDecimal)==(D_NET_INC_CASH_CASH_EQUIVALENT as BigDecimal)+(D_INITIAL_CASH_CASH_EQU_BALANC as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6300D05_630_D_01','20210415','TESTCORP','72','002','MBT_PM_630_D','I6300D05_630_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6400B01_640_B_01','20210319','TESTCORP','72','002','“报表类型”必须填写“10”。','“报表类型”必须填写“10”。','表内逻辑校验','人民银行','B_SHEET_TYPE','报表类型','R','Y','','if (!isEmpty(B_SHEET_TYPE)) {
    if (B_SHEET_TYPE==''10'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6400B01_640_B_01','20210415','TESTCORP','72','002','MBT_PM_640_B','I6400B01_640_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6400C01_640_C_01','20210319','TESTCORP','72','002','在事业单位资产负债表信息中数据项“资产总计=流动资产+非流动资产”。','在事业单位资产负债表信息中数据项“资产总计=流动资产+非流动资产”。','表内逻辑校验','人民银行','C_TOTAL_ASSETS','资产总计','R','Y','','if (!isEmpty(C_TOTAL_NON_CURRENT_ASSETS) && !isEmpty(C_TOTAL_CURRENT_ASSETS) && !isEmpty(C_TOTAL_ASSETS)) {
    if ((C_TOTAL_ASSETS as BigDecimal)==(C_TOTAL_CURRENT_ASSETS as BigDecimal)+(C_TOTAL_NON_CURRENT_ASSETS as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6400C01_640_C_01','20210415','TESTCORP','72','002','MBT_PM_640_C','I6400C01_640_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6400C02_640_C_01','20210319','TESTCORP','72','002','在事业单位资产负债表信息中数据项“负债合计=流动负债+非流动负债”。','在事业单位资产负债表信息中数据项“负债合计=流动负债+非流动负债”。','表内逻辑校验','人民银行','C_TOTAL_LIABILITIES','负债合计','R','Y','','if (!isEmpty(C_TOTAL_NON_CURRENT_LIABILITIE) && !isEmpty(C_TOTAL_CURRENT_LIABILITIES) && !isEmpty(C_TOTAL_LIABILITIES)) {
    if ((C_TOTAL_LIABILITIES as BigDecimal)==(C_TOTAL_CURRENT_LIABILITIES as BigDecimal)+(C_TOTAL_NON_CURRENT_LIABILITIE as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6400C02_640_C_01','20210415','TESTCORP','72','002','MBT_PM_640_C','I6400C02_640_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6400C03_640_C_01','20210319','TESTCORP','72','002','在事业单位资产负债表信息中数据项“负债和净资产总计=负债合计+净资产合计”。','在事业单位资产负债表信息中数据项“负债和净资产总计=负债合计+净资产合计”。','表内逻辑校验','人民银行','C_TOTAL_LIABILITIES_NET_ASSETS','负债和净资产总计','R','Y','','if (!isEmpty(C_TOTAL_LIABILITIES_NET_ASSETS) && !isEmpty(C_TOTAL_NET_ASSETS) && !isEmpty(C_TOTAL_LIABILITIES)) {
    if ((C_TOTAL_LIABILITIES_NET_ASSETS as BigDecimal)==(C_TOTAL_LIABILITIES as BigDecimal)+(C_TOTAL_NET_ASSETS as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6400C03_640_C_01','20210415','TESTCORP','72','002','MBT_PM_640_C','I6400C03_640_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6400C04_640_C_01','20210319','TESTCORP','72','002','在事业单位资产负债表信息中数据项“资产总计=负债和净资产总计”。','在事业单位资产负债表信息中数据项“资产总计=负债和净资产总计”。','表内逻辑校验','人民银行','C_TOTAL_ASSETS','资产总计','R','Y','','if (!isEmpty(C_TOTAL_LIABILITIES_NET_ASSETS) && !isEmpty(C_TOTAL_ASSETS)) {
    if ((C_TOTAL_ASSETS as BigDecimal)==(C_TOTAL_LIABILITIES_NET_ASSETS as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6400C04_640_C_01','20210415','TESTCORP','72','002','MBT_PM_640_C','I6400C04_640_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6500B01_650_B_01','20210319','TESTCORP','72','002','“报表类型”必须填写“10”。','“报表类型”必须填写“10”。','表内逻辑校验','人民银行','B_SHEET_TYPE','报表类型','R','Y','','if (!isEmpty(B_SHEET_TYPE)) {
    if (B_SHEET_TYPE==''10'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6500B01_650_B_01','20210415','TESTCORP','72','002','MBT_PM_650_B','I6500B01_650_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6500C01_650_C_01','20210319','TESTCORP','72','002','在事业单位收入支出表信息中数据项“本期财政补助结转结余=财政补助收入-事业支出（财政补助支出）”','在事业单位收入支出表信息中数据项“本期财政补助结转结余=财政补助收入-事业支出（财政补助支出）”','表内逻辑校验','人民银行','C_CURRENT_FINAN_SUB_CAR_OVER_B','本期财政补助结转结余','R','Y','','if (!isEmpty(C_UNDERTAKINGS_EXP_FIN_SUB_EXP) && !isEmpty(C_CURRENT_FINAN_SUB_CAR_OVER_B) && !isEmpty(C_FINANCIAL_SUBSIDY_REVENUE)) {
    if ((C_CURRENT_FINAN_SUB_CAR_OVER_B as BigDecimal)==(C_FINANCIAL_SUBSIDY_REVENUE as BigDecimal)-(C_UNDERTAKINGS_EXP_FIN_SUB_EXP as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6500C01_650_C_01','20210415','TESTCORP','72','002','MBT_PM_650_C','I6500C01_650_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6500C02_650_C_01','20210319','TESTCORP','72','002','在事业单位收入支出表信息中数据项“本期事业结转结余=事业类收入-事业类支出”。','在事业单位收入支出表信息中数据项“本期事业结转结余=事业类收入-事业类支出”。','表内逻辑校验','人民银行','C_CURRENT_UNDERTAK_CAR_OVER_B','本期事业结转结余','R','Y','','if (!isEmpty(C_CURRENT_UNDERTAK_CAR_OVER_B) && !isEmpty(C_UNDERTAKINGS_CLASS_EXPENDIT) && !isEmpty(C_UNDERTAKINGS_CLASS_REVENUE)) {
    if ((C_CURRENT_UNDERTAK_CAR_OVER_B as BigDecimal)==(C_UNDERTAKINGS_CLASS_REVENUE as BigDecimal)-(C_UNDERTAKINGS_CLASS_EXPENDIT as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6500C02_650_C_01','20210415','TESTCORP','72','002','MBT_PM_650_C','I6500C02_650_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I6500C03_650_C_01','20210319','TESTCORP','72','002','在事业单位收入支出表信息中数据项“本期经营结余=经营收入-经营支出”。','在事业单位收入支出表信息中数据项“本期经营结余=经营收入-经营支出”。','表内逻辑校验','人民银行','C_CURRENT_OPERATING_BALANCE','本期经营结余','R','Y','','if (!isEmpty(C_CURRENT_OPERATING_BALANCE) && !isEmpty(C_OPERATING_REVENUE) && !isEmpty(C_OPERATING_EXPENDITURE)) {
    if ((C_CURRENT_OPERATING_BALANCE as BigDecimal)==(C_OPERATING_REVENUE as BigDecimal)-(C_OPERATING_EXPENDITURE as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I6500C03_650_C_01','20210415','TESTCORP','72','002','MBT_PM_650_C','I6500C03_650_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('C3100B01_310_B_01','20210319','TESTCORP','72','002','报送数据表内存在多个客户号对应相同中征码信息','报送数据表内存在多个客户号对应相同中征码信息','表内逻辑校验','人民银行','CUST_NO','客户号','R','Y','select 1 from (select count(*) as tcnt from mbt_pm_310_b where B_ENT_CERT = ''10'' and CUST_NO <> :CUST_NO and B_ENT_CERT_NUM = :B_ENT_CERT_NUM and CUST_NO is not null and is_valid = ''Y'') where tcnt < 1','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('C3100B01_310_B_01','20210415','TESTCORP','72','002','MBT_PM_310_B','C3100B01_310_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('C4100B01_410_B_01','20210319','TESTCORP','72','002','报送数据表内存在多个客户号对应相同中征码信息','报送数据表内存在多个客户号对应相同中征码信息','表内逻辑校验','人民银行','CUST_NO','客户号','R','Y','select 1 from (select count(*) as tcnt from mbt_pm_410_b where B_ID_TYPE = ''10'' and CUST_NO <> :CUST_NO and B_ID_NUM = :B_ID_NUM and CUST_NO is not null and is_valid = ''Y'') where tcnt < 1','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('C4100B01_410_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','C4100B01_410_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('C4200B01_420_B_01','20210319','TESTCORP','72','002','报送数据表内存在多个客户号对应相同中征码信息','报送数据表内存在多个客户号对应相同中征码信息','表内逻辑校验','人民银行','CUST_NO','客户号','R','Y','select 1 from (select count(*) as tcnt from mbt_pm_420_b where B_ID_TYPE = ''10'' and CUST_NO <> :CUST_NO and B_ID_NUM = :B_ID_NUM and CUST_NO is not null and is_valid = ''Y'') where tcnt < 1','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('C4200B01_420_B_01','20210415','TESTCORP','72','002','MBT_PM_420_B','C4200B01_420_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('C5100B01_510_B_01','20210319','TESTCORP','72','002','报送数据表内存在多个客户号对应相同中征码信息','报送数据表内存在多个客户号对应相同中征码信息','表内逻辑校验','人民银行','CUST_NO','客户号','R','Y','select 1 from (select count(*) as tcnt from mbt_pm_510_b where B_CERT_TYPE = ''10'' and CUST_NO <> :CUST_NO and B_CERT_NUM = :B_CERT_NUM and CUST_NO is not null and is_valid = ''Y'') where tcnt <= 1','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('C5100B01_510_B_01','20210415','TESTCORP','72','002','MBT_PM_510_B','C5100B01_510_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I1200B01_120_B_01','20210319','TESTCORP','72','002','家族关系信息记录中两人的“证件类型”和“证件号码”不能完全相同','家族关系信息记录中两人的“证件类型”和“证件号码”不能完全相同','表内逻辑校验','人民银行','ID_NUM','A证件号码','R','Y','','if (!isEmpty(ID_NUM) && !isEmpty(FAM_MEM_CERT_NUM)) {
    if (ID_NUM != FAM_MEM_CERT_NUM) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I1200B01_120_B_01','20210415','TESTCORP','72','002','MBT_PM_120_B','I1200B01_120_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_610_B_01','20210319','TESTCORP','72','002','信息记录中的“信息报告日期”应不早于同一条记录中审计时间。','信息记录中的“信息报告日期”应不早于同一条记录中审计时间。','表内逻辑校验','人民银行','B_AUDIT_TIME','审计时间','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(B_AUDIT_TIME) && !isEmpty(B_AUDIT_TIME) && !isEmpty(B_AUDIT_TIME)) {
    if (B_AUDIT_TIME<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_610_B_01','20210415','TESTCORP','72','002','MBT_PM_610_B','I0000501_610_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_620_B_01','20210319','TESTCORP','72','002','信息记录中的“信息报告日期”应不早于同一条记录中审计时间。','信息记录中的“信息报告日期”应不早于同一条记录中审计时间。','表内逻辑校验','人民银行','B_AUDIT_TIME','审计时间','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(B_AUDIT_TIME) && !isEmpty(B_AUDIT_TIME) && !isEmpty(B_AUDIT_TIME)) {
    if (B_AUDIT_TIME<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_620_B_01','20210415','TESTCORP','72','002','MBT_PM_620_B','I0000501_620_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_630_B_01','20210319','TESTCORP','72','002','信息记录中的“信息报告日期”应不早于同一条记录中审计时间。','信息记录中的“信息报告日期”应不早于同一条记录中审计时间。','表内逻辑校验','人民银行','B_AUDIT_TIME','审计时间','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(B_AUDIT_TIME) && !isEmpty(B_AUDIT_TIME) && !isEmpty(B_AUDIT_TIME)) {
    if (B_AUDIT_TIME<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_630_B_01','20210415','TESTCORP','72','002','MBT_PM_630_B','I0000501_630_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_640_B_01','20210319','TESTCORP','72','002','信息记录中的“信息报告日期”应不早于同一条记录中审计时间。','信息记录中的“信息报告日期”应不早于同一条记录中审计时间。','表内逻辑校验','人民银行','B_AUDIT_TIME','审计时间','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(B_AUDIT_TIME) && !isEmpty(B_AUDIT_TIME) && !isEmpty(B_AUDIT_TIME)) {
    if (B_AUDIT_TIME<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_640_B_01','20210415','TESTCORP','72','002','MBT_PM_640_B','I0000501_640_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I0000501_650_B_01','20210319','TESTCORP','72','002','信息记录中的“信息报告日期”应不早于同一条记录中审计时间。','信息记录中的“信息报告日期”应不早于同一条记录中审计时间。','表内逻辑校验','人民银行','B_AUDIT_TIME','审计时间','R','Y','','if (!isEmpty(B_RPT_DATE) && !isEmpty(B_AUDIT_TIME) && !isEmpty(B_AUDIT_TIME) && !isEmpty(B_AUDIT_TIME)) {
    if (B_AUDIT_TIME<=B_RPT_DATE) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000501_650_B_01','20210415','TESTCORP','72','002','MBT_PM_650_B','I0000501_650_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('P4100H02_41X_H_01','20210319','TESTCORP','72','002','[机构核查]企业借贷账户关闭时，"最近一次实际还款金额"应大于零','[机构核查]企业借贷账户关闭时，"最近一次实际还款金额"应大于零','表内逻辑校验','人民银行','H_LAT_RPY_AMT','最近一次实际还款金额','R','Y','','if (!isEmpty(H_LAT_RPY_AMT) && !isEmpty(H_ACCT_STATUS) && H_ACCT_STATUS==''21'') {
    if ((H_LAT_RPY_AMT as BigDecimal) >0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100H02_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','P4100H02_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100H02_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','P4100H02_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('P4100H04_41X_H_01','20210319','TESTCORP','72','002','[机构核查]未关闭账户时，"余额"应大于"零"','[机构核查]未关闭账户时，"余额"应大于"零"','表内逻辑校验','人民银行','H_ACCT_BAL','余额','R','Y','','if (!isEmpty(H_ACCT_BAL) && !isEmpty(H_ACCT_STATUS) && !isEmpty(B_ACCT_TYPE) && H_ACCT_STATUS!=''21''  &&  B_ACCT_TYPE==''D2'') {
    if ((H_ACCT_BAL as BigDecimal) >0) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100H04_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','P4100H04_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100H04_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','P4100H04_41X_H_01','auto_generator');

insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('P2100H01_21X_H_01','20210319','TESTCORP','72','002','[机构核查]本月应还款金额大于本月实际还款金额，账户状态不应该为“正常”','[机构核查]本月应还款金额大于本月实际还款金额，账户状态不应该为“正常”','表内逻辑校验','人民银行','H_ACCT_STATUS','账户状态','R','Y','','if (!isEmpty(H_ACCT_STATUS) && !isEmpty(B_ACCT_TYPE) && !isEmpty(H_CUR_RPY_AMT) && !isEmpty(H_ACT_RPY_AMT) && (H_CUR_RPY_AMT as BigDecimal)>(H_ACT_RPY_AMT as BigDecimal)  &&  B_ACCT_TYPE in [''D1'',''R1'',''R4'']) {
    if (H_ACCT_STATUS!=''1'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2100H01_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','P2100H01_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2100H01_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','P2100H01_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('P2100H02_21X_H_01','20210319','TESTCORP','72','002','[机构核查]逾期31-60天未归还本金、逾期61-90天未归还本金、逾期91-180天未归还本金、逾期180天未归还本金之和应小或等于“当前逾期本金”','[机构核查]逾期31-60天未归还本金、逾期61-90天未归还本金、逾期91-180天未归还本金、逾期180天未归还本金之和应小或等于“当前逾期本金”','表内逻辑校验','人民银行','H_OVAER_PRINC','当前逾期本金','R','Y','','if (!isEmpty(H_OVERD91_180PRINC) && !isEmpty(H_OVERD_PRINC180) && !isEmpty(H_OVERD31_60PRINC) && !isEmpty(H_OVERD61_90PRINC) && !isEmpty(H_OVAER_PRINC) && !isEmpty(B_ACCT_TYPE) && B_ACCT_TYPE in [''D1'',''R1'',''R4'']) {
    if ((H_OVAER_PRINC as BigDecimal)>=(H_OVERD31_60PRINC as BigDecimal)+(H_OVERD61_90PRINC as BigDecimal)+(H_OVERD91_180PRINC as BigDecimal)+(H_OVERD_PRINC180 as BigDecimal)) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2100H02_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','P2100H02_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2100H02_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','P2100H02_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P1100A01_110_B_01','20210319','TESTCORP','72','002','当报告时点说明代码为“10-新增客户/首次上报”时，不能存在已经报送成功的记录','当报告时点说明代码为“10-新增客户/首次上报”时，不能存在已经报送成功的记录','表内关联校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_110_B a where a.B_RPT_DATE_CODE=''10'') or  not exists (select 1 from MBT_PM_110_B a,MBT_PM_110_B b where a.B_RPT_DATE_CODE = b.B_RPT_DATE_CODE and b.IS_RPT_SUCC = ''Y'' and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P1100A01_110_B_01','20210415','TESTCORP','72','002','MBT_PM_110_B','P1100A01_110_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R1101202_110_B_01','20210319','TESTCORP','72','002','对于待入库的个人基本信息记录，若“两标/三标”+“信息来源编码”在库中已存在，若其信息报告日期早于库中信息记录最新的信息报告日期，则此记录不能入库。','对于待入库的个人基本信息记录，若“两标/三标”+“信息来源编码”在库中已存在，若其信息报告日期早于库中信息记录最新的信息报告日期，则此记录不能入库。','表内关联校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_110_B a,MBT_PM_110_B b where a.B_RPT_DATE = b.B_RPT_DATE and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y'' and b.B_RPT_DATE > a.B_RPT_DATE and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R1101202_110_B_01','20210415','TESTCORP','72','002','MBT_PM_110_B','R1101202_110_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R1201201_120_B_01','20210319','TESTCORP','72','002','对于待入库的家族关系信息记录，若两人的“两标/三标”+“数据提供机构区段码”在库中已存在，此信息记录的信息报告日期早于库中信息记录最新的信息报告日期，该记录不能入库。','对于待入库的家族关系信息记录，若两人的“两标/三标”+“数据提供机构区段码”在库中已存在，此信息记录的信息报告日期早于库中信息记录最新的信息报告日期，该记录不能入库。','表内关联校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_120_B a,MBT_PM_120_B b where a.B_RPT_DATE = b.B_RPT_DATE and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y'' and b.B_RPT_DATE > a.B_RPT_DATE and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R1201201_120_B_01','20210415','TESTCORP','72','002','MBT_PM_120_B','R1201201_120_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R1301201_130_B_01','20210319','TESTCORP','72','002','对于待入库的个人证件有效期信息记录，若“两标/三标”+“信息来源编码”在库中已存在，此信息记录的信息报告日期早于库中信息记录最新的信息报告日期，该记录不能入库。','对于待入库的个人证件有效期信息记录，若“两标/三标”+“信息来源编码”在库中已存在，此信息记录的信息报告日期早于库中信息记录最新的信息报告日期，该记录不能入库。','表内关联校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_130_B a,MBT_PM_130_B b where a.B_RPT_DATE = b.B_RPT_DATE and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y'' and b.B_RPT_DATE > a.B_RPT_DATE and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R1301201_130_B_01','20210415','TESTCORP','72','002','MBT_PM_130_B','R1301201_130_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R5101201_510_B_01','20210319','TESTCORP','72','002','若待入库记录信息报告日期早于库中最新一条记录的信息报告日期，则不能入库（为了限制插入历史信息记录）。','若待入库记录信息报告日期早于库中最新一条记录的信息报告日期，则不能入库（为了限制插入历史信息记录）。','表内关联校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_510_B a,MBT_PM_510_B b where a.B_RPT_DATE = b.B_RPT_DATE and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y''  and b.B_RPT_DATE > a.B_RPT_DATE and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R5101201_510_B_01','20210415','TESTCORP','72','002','MBT_PM_510_B','R5101201_510_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R5101202_510_C_01','20210319','TESTCORP','72','002','当库中最新一条抵（质）押合同信息记录中的“抵（质）押合同状态”为“到期/失效”时，后续信息记录不能入库。','当库中最新一条抵（质）押合同信息记录中的“抵（质）押合同状态”为“到期/失效”时，后续信息记录不能入库。','表内关联校验','人民银行','C_CC_STATUS','抵（质）押合同状态','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_510_C a,MBT_PM_510_C b where a.C_CC_STATUS = b.C_CC_STATUS and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y'' and b.C_CC_STATUS=''2'' and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R5101202_510_C_01','20210415','TESTCORP','72','002','MBT_PM_510_C','R5101202_510_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2101204_210_B_01','20210319','TESTCORP','72','002','待入库个人借贷账户信息记录中的“账户类型”必须与已入库记录的“账户类型”一致。','待入库个人借贷账户信息记录中的“账户类型”必须与已入库记录的“账户类型”一致。','表内关联校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_210_B a,MBT_PM_210_B b where a.B_ACCT_TYPE = b.B_ACCT_TYPE and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y'' and b.B_ACCT_TYPE<>a.B_ACCT_TYPE and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2101204_210_B_01','20210415','TESTCORP','72','002','MBT_PM_210_B','R2101204_210_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2101208_210_K_01','20210319','TESTCORP','72','002','待入库账户信息记录中“交易日期”+“交易类型”在库中不能存在，否则，该记录不能入库（保证特殊交易说明信息不重复报送）。','待入库账户信息记录中“交易日期”+“交易类型”在库中不能存在，否则，该记录不能入库（保证特殊交易说明信息不重复报送）。','表内关联校验','人民银行','K_CHAN_TRAN_TYPE','交易类型','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_210_K a,MBT_PM_210_K b where a.K_CHAN_TRAN_TYPE = b.K_CHAN_TRAN_TYPE and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y'' and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2101208_210_K_01','20210415','TESTCORP','72','002','MBT_PM_210_K','R2101208_210_K_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2101205_210_H_01','20210319','TESTCORP','72','002','若库中最新一条个人借贷账户信息记录中的“账户状态”为“3-关闭”/“4-销户”、“2-结束”时，后续信息记录不能入库。','若库中最新一条个人借贷账户信息记录中的“账户状态”为“3-关闭”/“4-销户”、“2-结束”时，后续信息记录不能入库。','表内关联校验','人民银行','H_ACCT_STATUS','账户状态','R','Y','select 1 from dual where not exists (select 1 from mbt_pm_210_H where b_acct_code = :B_ACCT_CODE and IS_RPT_SUCC = ''Y'' and IS_VALID = ''Y'' ) or  exists ( 
  select * from (SELECT case H_ACCT_STATUS when ''3'' then 0  when ''4'' then 0 when ''2'' then 0 else 1 end as tcnt from
(
select * from mbt_pm_210_H where b_acct_code = :B_ACCT_CODE and IS_RPT_SUCC = ''Y'' and IS_VALID = ''Y'' order by B_RPT_DATE desc
) t WHERE rownum = 1) where tcnt = 1
  )','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2101205_210_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','R2101205_210_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2201201_220_D_01','20210319','TESTCORP','72','002','当库中最新一条个人授信协议信息记录中的“额度状态”为“2-到期/失效”时，后续信息记录不能入库。','当库中最新一条个人授信协议信息记录中的“额度状态”为“2-到期/失效”时，后续信息记录不能入库。','表内关联校验','人民银行','D_CON_STATUS','额度状态','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_220_D a,MBT_PM_220_D b where a.D_CON_STATUS = b.D_CON_STATUS and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y'' and b.D_CON_STATUS=''2'' and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2201201_220_D_01','20210415','TESTCORP','72','002','MBT_PM_220_D','R2201201_220_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P3100A01_310_B_01','20210319','TESTCORP','72','002','当报告时点说明代码为“10-新增客户/首次上报”时，不能存在已经报送成功的记录','当报告时点说明代码为“10-新增客户/首次上报”时，不能存在已经报送成功的记录','表内关联校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_310_B a where a.B_RPT_DATE_CODE=''10'') or  not exists (select 1 from MBT_PM_310_B a,MBT_PM_310_B b where a.B_RPT_DATE_CODE = b.B_RPT_DATE_CODE and b.IS_RPT_SUCC = ''Y'' and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P3100A01_310_B_01','20210415','TESTCORP','72','002','MBT_PM_310_B','P3100A01_310_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R3101202_310_B_01','20210319','TESTCORP','72','002','对于待入库的企业基本信息记录，若“两标/三标”+“信息来源编码”在库中已存在，若其信息报告日期早于库中信息记录最新的信息报告日期，则此记录不能入库。','对于待入库的企业基本信息记录，若“两标/三标”+“信息来源编码”在库中已存在，若其信息报告日期早于库中信息记录最新的信息报告日期，则此记录不能入库。','表内关联校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_310_B a,MBT_PM_310_B b where a.B_RPT_DATE = b.B_RPT_DATE and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y'' and b.B_RPT_DATE > a.B_RPT_DATE and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R3101202_310_B_01','20210415','TESTCORP','72','002','MBT_PM_310_B','R3101202_310_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R3101203_310_B_01','20210319','TESTCORP','72','002','待入库的企业基本信息记录中“组织机构类型”应与库中相同标识项下的该数据项的取值一致。','待入库的企业基本信息记录中“组织机构类型”应与库中相同标识项下的该数据项的取值一致。','表内关联校验','人民银行','B_ORG_TYPE','组织机构类型','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_310_B a,MBT_PM_310_B b where a.B_ORG_TYPE = b.B_ORG_TYPE and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y'' and b.B_ORG_TYPE<>a.B_ORG_TYPE and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R3101203_310_B_01','20210415','TESTCORP','72','002','MBT_PM_310_B','R3101203_310_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R3501201_350_B_01','20210319','TESTCORP','72','002','对于待入库的企业间关联关系信息记录，若两组的“两标/三标”在库中已存在，若其信息报告日期早于库中信息记录最新的信息报告日期，则此记录不能入库。','对于待入库的企业间关联关系信息记录，若两组的“两标/三标”在库中已存在，若其信息报告日期早于库中信息记录最新的信息报告日期，则此记录不能入库。','表内关联校验','人民银行','B_RPT_DATE','信息报告日期','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_350_B a,MBT_PM_350_B b where a.B_RPT_DATE = b.B_RPT_DATE and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y'' and b.B_RPT_DATE > a.B_RPT_DATE and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R3501201_350_B_01','20210415','TESTCORP','72','002','MBT_PM_350_B','R3501201_350_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4201201_420_D_01','20210319','TESTCORP','72','002','当库中最新一条企业授信协议信息记录中的“额度状态”为“2-到期/失效”时，后续信息记录不能入库。','当库中最新一条企业授信协议信息记录中的“额度状态”为“2-到期/失效”时，后续信息记录不能入库。','表内关联校验','人民银行','D_CON_STATUS','额度状态','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_420_D a,MBT_PM_420_D b where a.D_CON_STATUS = b.D_CON_STATUS and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y'' and b.D_CON_STATUS=''2'' and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4201201_420_D_01','20210415','TESTCORP','72','002','MBT_PM_420_D','R4201201_420_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4401202_440_D_01','20210319','TESTCORP','72','002','如果账户信息记录最新一条的“账户状态”为“2-关闭”，则后续信息记录不能入库。','如果账户信息记录最新一条的“账户状态”为“2-关闭”，则后续信息记录不能入库。','表内关联校验','人民银行','D_ACCT_STATUS','账户状态','R','Y','select 1 from dual where not exists (select 1 from mbt_pm_210_H where b_acct_code = :B_ACCT_CODE and IS_RPT_SUCC = ''Y'' and IS_VALID = ''Y'' ) or  exists ( 
  select * from (SELECT case H_ACCT_STATUS when ''2'' then 0 else 1 end as tcnt from
(
select * from mbt_pm_210_H where b_acct_code = :B_ACCT_CODE and IS_RPT_SUCC = ''Y'' and IS_VALID = ''Y'' order by B_RPT_DATE desc
) t WHERE rownum = 1) where tcnt = 1
  )','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4401202_440_D_01','20210415','TESTCORP','72','002','MBT_PM_440_D','R4401202_440_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4401204_440_B_01','20210319','TESTCORP','72','002','待入库企业担保账户信息记录中的“账户类型”必须与已入库记录的“账户类型”一致。','待入库企业担保账户信息记录中的“账户类型”必须与已入库记录的“账户类型”一致。','表内关联校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_440_B a,MBT_PM_440_B b where a.B_ACCT_TYPE = b.B_ACCT_TYPE and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y'' and b.B_ACCT_TYPE<>a.B_ACCT_TYPE and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4401204_440_B_01','20210415','TESTCORP','72','002','MBT_PM_440_B','R4401204_440_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4101201_410_B_01','20210319','TESTCORP','72','002','待入库的企业借贷账户信息记录中的“账户类型”必须与已入库的“账户类型”一致','待入库的企业借贷账户信息记录中的“账户类型”必须与已入库的“账户类型”一致','表内关联校验','人民银行','B_ACCT_TYPE','账户类型','R','Y','select 1 from dual where  not exists (select 1 from MBT_PM_410_B a,MBT_PM_410_B b where a.B_ACCT_TYPE = b.B_ACCT_TYPE and b.IS_RPT_SUCC = ''Y'' and b.IS_VALID=''Y'' and b.B_ACCT_TYPE<>a.B_ACCT_TYPE and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4101201_410_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','R4101201_410_B_01','auto_generator');
--R4101210_410_I_01 企业借贷账户信息-特殊交易说明段
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4101202_410_H_01','20210319','TESTCORP','72','002','若库中最新一条企业借贷账户信息记录中的“账户状态”为“关闭”，不能再增加该业务标识项下的信息报告日期更新的信息记录。','若库中最新一条企业借贷账户信息记录中的“账户状态”为“关闭”，不能再增加该业务标识项下的信息报告日期更新的信息记录。','表内关联校验','人民银行','H_ACCT_STATUS','账户状态','R','Y','select 1 from dual where not exists (select 1 from mbt_pm_210_H where b_acct_code = :B_ACCT_CODE and IS_RPT_SUCC = ''Y'' and IS_VALID = ''Y'' ) or  exists ( 
  select * from (SELECT case H_ACCT_STATUS when ''21'' then 0 else 1 end as tcnt from
(
select * from mbt_pm_210_H where b_acct_code = :B_ACCT_CODE and IS_RPT_SUCC = ''Y'' and IS_VALID = ''Y'' order by B_RPT_DATE desc
) t WHERE rownum = 1) where tcnt = 1
  )','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4101202_410_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','R4101202_410_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_120_B_01','20210319','TESTCORP','72','002','“信息来源编码”与“数据提供机构区段码”应对应同一数据提供机构。','“信息来源编码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','INF_SURC_CODE','信息来源编码','R','Y','select 1 from dual where (substr(:INF_SURC_CODE,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_120_B_01','20210415','TESTCORP','72','002','MBT_PM_120_B','I0001301_120_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_130_B_01','20210319','TESTCORP','72','002','“信息来源编码”与“数据提供机构区段码”应对应同一数据提供机构。','“信息来源编码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','INF_SURC_CODE','信息来源编码','R','Y','select 1 from dual where (substr(:INF_SURC_CODE,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_130_B_01','20210415','TESTCORP','72','002','MBT_PM_130_B','I0001301_130_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_510_B_01','20210319','TESTCORP','72','002','“抵（质）押合同标识码”与“数据提供机构区段码”应对应同一数据提供机构。','“抵（质）押合同标识码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','B_CC_CODE','抵（质）押合同标识码','R','Y','select 1 from dual where (substr(:B_CC_CODE,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_510_B_01','20210415','TESTCORP','72','002','MBT_PM_510_B','I0001301_510_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_210_B_01','20210319','TESTCORP','72','002','“账户标识码”与“数据提供机构区段码”应对应同一数据提供机构。','“账户标识码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','B_ACCT_CODE','账户标识码','R','Y','select 1 from dual where (substr(:B_ACCT_CODE,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_210_B_01','20210415','TESTCORP','72','002','MBT_PM_210_B','I0001301_210_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_215_B_01','20210319','TESTCORP','72','002','“账户标识码”与“数据提供机构区段码”应对应同一数据提供机构。','“账户标识码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','ACCT_CODE','账户标识码','R','Y','select 1 from dual where (substr(:ACCT_CODE,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_215_B_01','20210415','TESTCORP','72','002','MBT_PM_215_B','I0001301_215_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_21X_F_01','20210319','TESTCORP','72','002','“授信协议标识码”与“数据提供机构区段码”应对应同一数据提供机构。','“授信协议标识码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','F_MCC','授信协议标识码','R','Y','select 1 from dual where (substr(:F_MCC,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_21X_F_01','20210415','TESTCORP','72','002','MBT_PM_210_F','I0001301_21X_F_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_212_F_01','20210415','TESTCORP','72','002','MBT_PM_212_F','I0001301_21X_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_220_B_01','20210319','TESTCORP','72','002','“授信协议标识码”与“数据提供机构区段码”应对应同一数据提供机构。','“授信协议标识码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','B_CONTRACT_CODE','授信协议标识码','R','Y','select 1 from dual where (substr(:B_CONTRACT_CODE,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_220_B_01','20210415','TESTCORP','72','002','MBT_PM_220_B','I0001301_220_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_21X_E_01','20210319','TESTCORP','72','002','抵（质）押合同标识码”与“数据提供机构区段码”应对应同一数据提供机构。','抵（质）押合同标识码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','E_CCC','抵（质）押合同标识码','R','Y','select 1 from dual where (substr(:E_CCC,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_21X_E_01','20210415','TESTCORP','72','002','MBT_PM_210_E','I0001301_21X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_212_E_01','20210415','TESTCORP','72','002','MBT_PM_212_E','I0001301_21X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_21X_D_01','20210319','TESTCORP','72','002','“保证合同编号”与“数据提供机构区段码”应对应同一数据提供机构。','“保证合同编号”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','D_MAX_GUAR_MCC','保证合同编号','R','Y','select 1 from dual where (substr(:D_MAX_GUAR_MCC,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_21X_D_01','20210415','TESTCORP','72','002','MBT_PM_210_D','I0001301_21X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_212_D_01','20210415','TESTCORP','72','002','MBT_PM_212_D','I0001301_21X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_220_D_01','20210319','TESTCORP','72','002','“授信限额编号”与“数据提供机构区段码”应对应同一数据提供机构。','“授信限额编号”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','D_CREDIT_REST_CODE','授信限额编号','R','Y','select 1 from dual where (substr(:D_CREDIT_REST_CODE,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_220_D_01','20210415','TESTCORP','72','002','MBT_PM_220_D','I0001301_220_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_310_B_01','20210319','TESTCORP','72','002','“信息来源编码”与“数据提供机构区段码”应对应同一数据提供机构。','“信息来源编码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','B_INF_SURC_CODE','信息来源编码','R','Y','select 1 from dual where (substr(:B_INF_SURC_CODE,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_310_B_01','20210415','TESTCORP','72','002','MBT_PM_310_B','I0001301_310_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_410_B_01','20210319','TESTCORP','72','002','“账户标识码”与“数据提供机构区段码”应对应同一数据提供机构。','“账户标识码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','B_ACCT_CODE','账户标识码','R','Y','select 1 from dual where (substr(:B_ACCT_CODE,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_410_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','I0001301_410_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_41X_D_01','20210319','TESTCORP','72','002','“保证合同编号”与“数据提供机构区段码”应对应同一数据提供机构。','“保证合同编号”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','D_MAX_GUAR_MCC','保证合同编号','R','Y','select 1 from dual where (substr(:D_MAX_GUAR_MCC,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_41X_D_01','20210415','TESTCORP','72','002','MBT_PM_410_D','I0001301_41X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_412_D_01','20210415','TESTCORP','72','002','MBT_PM_412_D','I0001301_41X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_41X_E_01','20210319','TESTCORP','72','002','抵（质）押合同标识码”与“数据提供机构区段码”应对应同一数据提供机构。','抵（质）押合同标识码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','E_CCC','抵（质）押合同标识码','R','Y','select 1 from dual where (substr(:E_CCC,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_41X_E_01','20210415','TESTCORP','72','002','MBT_PM_410_E','I0001301_41X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_412_E_01','20210415','TESTCORP','72','002','MBT_PM_412_E','I0001301_41X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_41X_F_01','20210319','TESTCORP','72','002','“授信协议标识码”与“数据提供机构区段码”应对应同一数据提供机构。','“授信协议标识码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','F_MCC','授信协议标识码','R','Y','select 1 from dual where (substr(:F_MCC,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_41X_F_01','20210415','TESTCORP','72','002','MBT_PM_410_F','I0001301_41X_F_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_412_F_01','20210415','TESTCORP','72','002','MBT_PM_412_F','I0001301_41X_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_440_B_01','20210319','TESTCORP','72','002','“账户标识码”与“数据提供机构区段码”应对应同一数据提供机构。','“账户标识码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','B_ACCT_CODE','账户标识码','R','Y','select 1 from dual where (substr(:B_ACCT_CODE,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_440_B_01','20210415','TESTCORP','72','002','MBT_PM_440_B','I0001301_440_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_44X_E_01','20210319','TESTCORP','72','002','“保证合同编号”与“数据提供机构区段码”应对应同一数据提供机构。','“保证合同编号”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','MAX_GUAR_MCC','保证合同编号','R','Y','select 1 from dual where (substr(:MAX_GUAR_MCC,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_44X_E_01','20210415','TESTCORP','72','002','MBT_PM_440_E','I0001301_44X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_442_E_01','20210415','TESTCORP','72','002','MBT_PM_442_E','I0001301_44X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_44X_F_01','20210319','TESTCORP','72','002','抵（质）押合同标识码”与“数据提供机构区段码”应对应同一数据提供机构。','抵（质）押合同标识码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','CCC','抵（质）押合同标识码','R','Y','select 1 from dual where (substr(:CCC,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_44X_F_01','20210415','TESTCORP','72','002','MBT_PM_440_F','I0001301_44X_F_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_442_F_01','20210415','TESTCORP','72','002','MBT_PM_442_F','I0001301_44X_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_44X_G_01','20210319','TESTCORP','72','002','“授信协议标识码”与“数据提供机构区段码”应对应同一数据提供机构。','“授信协议标识码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','G_MCC','授信协议标识码','R','Y','select 1 from dual where (substr(:G_MCC,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_44X_G_01','20210415','TESTCORP','72','002','MBT_PM_440_G','I0001301_44X_G_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_442_G_01','20210415','TESTCORP','72','002','MBT_PM_442_G','I0001301_44X_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_420_B_01','20210319','TESTCORP','72','002','“授信协议标识码”与“数据提供机构区段码”应对应同一数据提供机构。','“授信协议标识码”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','B_CONTRACT_CODE','授信协议标识码','R','Y','select 1 from dual where (substr(:B_CONTRACT_CODE,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_420_B_01','20210415','TESTCORP','72','002','MBT_PM_420_B','I0001301_420_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0001301_420_D_01','20210319','TESTCORP','72','002','“授信限额编号”与“数据提供机构区段码”应对应同一数据提供机构。','“授信限额编号”与“数据提供机构区段码”应对应同一数据提供机构。','区段码检验','人民银行','D_CREDIT_REST_CODE','授信限额编号','R','Y','select 1 from dual where (substr(:D_CREDIT_REST_CODE,1,14)=(select GEN_ORG_CODE FROM MBT_BM_ORG_CONFIG))','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0001301_420_D_01','20210415','TESTCORP','72','002','MBT_PM_420_D','I0001301_420_D_01','auto_generator');
--  select 1 from dual where (:)
--  select 1 from dual where (:)
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_21X_D_01','20210319','TESTCORP','72','002','对于相关还款责任人段中一组可出现多次的数据项，当出现多次时，内容不能重复。','对于相关还款责任人段中一组可出现多次的数据项，当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_210_D where B_RPT_DATE = :B_RPT_DATE and B_ACCT_CODE = :B_ACCT_CODE and D_ARLP_CERT_TYPE = :D_ARLP_CERT_TYPE and D_ARLP_CERT_NUM = :D_ARLP_CERT_NUM and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_21X_D_01','20210415','TESTCORP','72','002','MBT_PM_210_D','I0000702_21X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_212_D_01','20210415','TESTCORP','72','002','MBT_PM_212_D','I0000702_21X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_21X_E_01','20210319','TESTCORP','72','002','对于抵质押物信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','对于抵质押物信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_210_E where B_RPT_DATE = :B_RPT_DATE and B_ACCT_CODE = :B_ACCT_CODE and E_CCC = :E_CCC and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_21X_E_01','20210415','TESTCORP','72','002','MBT_PM_210_E','I0000702_21X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_212_E_01','20210415','TESTCORP','72','002','MBT_PM_212_E','I0000702_21X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_21X_K_01','20210319','TESTCORP','72','002','对于特殊交易说明段中一组可出现多次的数据项，当出现多次时，内容不能重复。','对于特殊交易说明段中一组可出现多次的数据项，当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_210_K where B_RPT_DATE = :B_RPT_DATE and B_ACCT_CODE = :B_ACCT_CODE and K_CHAN_TRAN_TYPE = :K_CHAN_TRAN_TYPE and K_TRAN_DATE = :K_TRAN_DATE and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_21X_K_01','20210415','TESTCORP','72','002','MBT_PM_210_K','I0000702_21X_K_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_212_K_01','20210415','TESTCORP','72','002','MBT_PM_212_K','I0000702_21X_K_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_22X_C_01','20210319','TESTCORP','72','002','对于共同受信人信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','对于共同受信人信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_220_C where B_RPT_DATE = :B_RPT_DATE and B_CONTRACT_CODE = :B_CONTRACT_CODE and C_CERT_REL_ID_TYPE = :C_CERT_REL_ID_TYPE and C_CERT_REL_ID_NUM = :C_CERT_REL_ID_NUM and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_22X_C_01','20210415','TESTCORP','72','002','MBT_PM_220_C','I0000702_22X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_222_C_01','20210415','TESTCORP','72','002','MBT_PM_222_C','I0000702_22X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_310_C_01','20210319','TESTCORP','72','002','对于其他标识信息段中一组可出现多次的数据项,当出现多次时，内容不能重复。','对于其他标识信息段中一组可出现多次的数据项,当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_310_C where B_ENT_CERT = :B_ENT_CERT and B_ENT_CERT_NUM = :B_ENT_CERT_NUM and B_INF_SURC_CODE = :B_INF_SURC_CODE and B_RPT_DATE = :B_RPT_DATE and OTH_ENT_CERT_TYPE = :OTH_ENT_CERT_TYPE and OTH_ENT_CERT_NUM = :OTH_ENT_CERT_NUM and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_310_C_01','20210415','TESTCORP','72','002','MBT_PM_310_C','I0000702_310_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_310_E_01','20210319','TESTCORP','72','002','对于主要组成人员段中一组可出现多次的数据项,当出现多次时，内容不能重复。','对于主要组成人员段中一组可出现多次的数据项,当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_310_E where B_ENT_CERT = :B_ENT_CERT and B_ENT_CERT_NUM = :B_ENT_CERT_NUM and B_INF_SURC_CODE = :B_INF_SURC_CODE and B_RPT_DATE = :B_RPT_DATE and MMB_ID_TYPE = :MMB_ID_TYPE and MMB_ID_NUM = :MMB_ID_NUM and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_310_E_01','20210415','TESTCORP','72','002','MBT_PM_310_E','I0000702_310_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_310_F_01','20210319','TESTCORP','72','002','对于注册资本及主要出资人段中一组可出现多次的数据项,当出现多次时，内容不能重复。','对于注册资本及主要出资人段中一组可出现多次的数据项,当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_310_FF where B_ENT_CERT = :B_ENT_CERT and B_ENT_CERT_NUM = :B_ENT_CERT_NUM and B_INF_SURC_CODE = :B_INF_SURC_CODE and B_RPT_DATE = :B_RPT_DATE and SHAR_HOD_ID_TYPE = :SHAR_HOD_ID_TYPE and SHAR_HOD_ID_NUM = :SHAR_HOD_ID_NUM and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_310_F_01','20210415','TESTCORP','72','002','MBT_PM_310_FF','I0000702_310_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_310_G_01','20210319','TESTCORP','72','002','对于实际控制人段中一组可出现多次的数据项,当出现多次时，内容不能重复。','对于实际控制人段中一组可出现多次的数据项,当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_310_G where B_ENT_CERT = :B_ENT_CERT and B_ENT_CERT_NUM = :B_ENT_CERT_NUM and B_INF_SURC_CODE = :B_INF_SURC_CODE and B_RPT_DATE = :B_RPT_DATE and ACTU_COTRL_ID_TYPE = :ACTU_COTRL_ID_TYPE and ACTU_COTRL_ID_NUM = :ACTU_COTRL_ID_NUM and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_310_G_01','20210415','TESTCORP','72','002','MBT_PM_310_G','I0000702_310_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_41X_D_01','20210319','TESTCORP','72','002','对于相关还款责任人段中一组可出现多次的数据项，当出现多次时，内容不能重复。','对于相关还款责任人段中一组可出现多次的数据项，当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_410_D where B_RPT_DATE = :B_RPT_DATE and B_ACCT_CODE = :B_ACCT_CODE and D_ARLP_CERT_TYPE = :D_ARLP_CERT_TYPE and D_ARLP_CERT_NUM = :D_ARLP_CERT_NUM and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_41X_D_01','20210415','TESTCORP','72','002','MBT_PM_410_D','I0000702_41X_D_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_412_D_01','20210415','TESTCORP','72','002','MBT_PM_412_D','I0000702_41X_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_41X_E_01','20210319','TESTCORP','72','002','对于抵质押物信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','对于抵质押物信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_410_E where B_RPT_DATE = :B_RPT_DATE and B_ACCT_CODE = :B_ACCT_CODE and E_CCC = :E_CCC and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_41X_E_01','20210415','TESTCORP','72','002','MBT_PM_410_E','I0000702_41X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_412_E_01','20210415','TESTCORP','72','002','MBT_PM_412_E','I0000702_41X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_41X_I_01','20210319','TESTCORP','72','002','对于特殊交易说明段中一组可出现多次的数据项，当出现多次时，内容不能重复。','对于特殊交易说明段中一组可出现多次的数据项，当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_410_I where B_RPT_DATE = :B_RPT_DATE and B_ACCT_CODE = :B_ACCT_CODE and I_CHAN_TRAN_TYPE = :I_CHAN_TRAN_TYPE and I_TRAN_DATE = :I_TRAN_DATE and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_41X_I_01','20210415','TESTCORP','72','002','MBT_PM_410_I','I0000702_41X_I_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_412_I_01','20210415','TESTCORP','72','002','MBT_PM_412_I','I0000702_41X_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_42X_C_01','20210319','TESTCORP','72','002','对于共同受信人信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','对于共同受信人信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_420_C where B_RPT_DATE = :B_RPT_DATE and B_CONTRACT_CODE = :B_CONTRACT_CODE and C_CERT_REL_ID_TYPE = :C_CERT_REL_ID_TYPE and C_CERT_REL_ID_NUM = :C_CERT_REL_ID_NUM and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_42X_C_01','20210415','TESTCORP','72','002','MBT_PM_420_C','I0000702_42X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_422_C_01','20210415','TESTCORP','72','002','MBT_PM_422_C','I0000702_42X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_44X_E_01','20210319','TESTCORP','72','002','对于相关还款责任人段中一组可出现多次的数据项，当出现多次时，内容不能重复。','对于相关还款责任人段中一组可出现多次的数据项，当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_440_E where B_RPT_DATE = :B_RPT_DATE and B_ACCT_CODE = :B_ACCT_CODE and ARLP_CERT_TYPE = :ARLP_CERT_TYPE and ARLP_CERT_NUM = :ARLP_CERT_NUM and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_44X_E_01','20210415','TESTCORP','72','002','MBT_PM_440_E','I0000702_44X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_442_E_01','20210415','TESTCORP','72','002','MBT_PM_442_E','I0000702_44X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_44X_F_01','20210319','TESTCORP','72','002','对于抵质押物信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','对于抵质押物信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_440_F where B_RPT_DATE = :B_RPT_DATE and B_ACCT_CODE = :B_ACCT_CODE and CCC = :CCC and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_44X_F_01','20210415','TESTCORP','72','002','MBT_PM_440_F','I0000702_44X_F_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_442_F_01','20210415','TESTCORP','72','002','MBT_PM_442_F','I0000702_44X_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_510_D_01','20210319','TESTCORP','72','002','对于其他债务人信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','对于其他债务人信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_510_D where B_RPT_DATE = :B_RPT_DATE and B_CC_CODE = :B_CC_CODE and D_GUAR_CERT_TYPE = :D_GUAR_CERT_TYPE and D_GUAR_CERT_NUM = :D_GUAR_CERT_NUM and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_510_D_01','20210415','TESTCORP','72','002','MBT_PM_510_D','I0000702_510_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_510_E_01','20210319','TESTCORP','72','002','对于抵押物信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','对于抵押物信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_510_E where B_RPT_DATE = :B_RPT_DATE and B_CC_CODE = :B_CC_CODE and E_PLE_CERT_ID = :E_PLE_CERT_ID and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_510_E_01','20210415','TESTCORP','72','002','MBT_PM_510_E','I0000702_510_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,rsv2,DATA_CRT_USER)values('I0000702_510_F_01','20210319','TESTCORP','72','002','对于质物信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','对于质物信息段中一组可出现多次的数据项，当出现多次时，内容不能重复。','唯一性校验','人民银行','DATA_ID','联合查询字段','R','Y','select 1 from ( select count(*) as tcnt from MBT_PM_510_F where B_RPT_DATE = :B_RPT_DATE and B_CC_CODE = :B_CC_CODE and F_IMP_TYPE = :F_IMP_TYPE and data_flag<>''D'') where tcnt <=1','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I0000702_510_F_01','20210415','TESTCORP','72','002','MBT_PM_510_F','I0000702_510_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('I2100A15_21X_B_01','20210319','TESTCORP','72','002','借款人“证件类型”、“证件号码”和“责任人身份标识类型”、“责任人身份标识号码”不能完全相同。','借款人“证件类型”、“证件号码”和“责任人身份标识类型”、“责任人身份标识号码”不能完全相同。','关联存在校验','人民银行','DATA_ID','','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_D b  where  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_ID_TYPE=b.D_ARLP_CERT_TYPE and a.B_ID_NUM=b.D_ARLP_CERT_NUM  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A15_21X_B_01','20210415','TESTCORP','72','002','MBT_PM_210_B','I2100A15_21X_B_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A15_212_B_01','20210415','TESTCORP','72','002','MBT_PM_212_B','I2100A15_21X_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100101_210_B_21','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时，个人借贷账户信息记录至少包含基本信息段。','当“报告时点说明代码”为“10-新开户”时，个人借贷账户信息记录至少包含基本信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100101_210_B_21','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100101_210_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100101_210_B_22','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时，若“账户类型”<>“C1”，则应包含月度表现信息段','当“报告时点说明代码”为“10-新开户”时，若“账户类型”<>“C1”，则应包含月度表现信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_H b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE <>''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a where ( a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE <>''C1'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100101_210_B_22','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100101_210_B_22','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100101_210_B_23','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“R1/R3/R4”应包含授信额度信息段','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“R1/R3/R4”应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_F b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE in (''R1'',''R3'',''R4'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a where ( a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE in (''R1'',''R3'',''R4'') ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100101_210_B_23','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100101_210_B_23','auto_generator');

insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100101_210_B_24','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“是”，则应包含授信额度信息段','当“报告时点说明代码”为“10-新开户”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“是”，则应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG in (''1'',''2'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b where ( a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG in (''1'',''2'') ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100101_210_B_24','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100101_210_B_24','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100101_210_B_25','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”不是“大额专项分期卡”，则应包含授信额度信息段；','当“报告时点说明代码”为“10-新开户”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”不是“大额专项分期卡”，则应包含授信额度信息段；','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''R2''and b.C_BUSI_DTL_LINES <>''82''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b where ( a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''R2''and b.C_BUSI_DTL_LINES <>''82'' ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100101_210_B_25','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100101_210_B_25','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100101_210_B_26','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时， 若“账户类型”为“C1”，应包括非月度表现信息段','当“报告时点说明代码”为“10-新开户”时， 若“账户类型”为“C1”，应包括非月度表现信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_J b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a where ( a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''C1'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100101_210_B_26','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100101_210_B_26','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100101_210_B_27','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“C1”，应包括初始债权说明段','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“C1”，应包括初始债权说明段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_G b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a where ( a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''C1'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100101_210_B_27','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100101_210_B_27','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100102_210_B_11','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“否”，则不应包含授信额度信息段','当“报告时点说明代码”为“10-新开户”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“否”，则不应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''0''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100102_210_B_11','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100102_210_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100102_210_B_12','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”是“大额专项分期卡”，则不应包含授信额度信息段；','当“报告时点说明代码”为“10-新开户”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”是“大额专项分期卡”，则不应包含授信额度信息段；','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''R2''and b.C_BUSI_DTL_LINES =''82''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100102_210_B_12','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100102_210_B_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100102_210_B_13','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“D1/R1/R2/R3/R4”，不应包含初始债权说明段','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“D1/R1/R2/R3/R4”，不应包含初始债权说明段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_G b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE <>''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100102_210_B_13','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100102_210_B_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100102_210_B_14','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“D1/R1/R2/R3/R4”，不应包含非月度表现信息段','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“D1/R1/R2/R3/R4”，不应包含非月度表现信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_J b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE <>''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100102_210_B_14','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100102_210_B_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100102_210_B_15','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“D1/R1/R2/R3/R4”，不应包含特殊交易说明段','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“D1/R1/R2/R3/R4”，不应包含特殊交易说明段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_K b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE <>''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100102_210_B_15','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100102_210_B_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100102_210_B_16','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“D1/R1/R3/R4/C1”，不应包括大额专项分期信息段','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“D1/R1/R3/R4/C1”，不应包括大额专项分期信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_I b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE <>''R2''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100102_210_B_16','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100102_210_B_16','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100102_210_B_17','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时， 若“账户类型”为“C1”，不应包括授信额度信息段。','当“报告时点说明代码”为“10-新开户”时， 若“账户类型”为“C1”，不应包括授信额度信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_F b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100102_210_B_17','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100102_210_B_17','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100102_210_B_18','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“C1”，不应包括月度表现段','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“C1”，不应包括月度表现段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_H b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100102_210_B_18','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100102_210_B_18','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100102_210_B_19','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“C1”，不应包括抵质押物信息段','当“报告时点说明代码”为“10-新开户”时，若“账户类型”为“C1”，不应包括抵质押物信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_E b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100102_210_B_19','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100102_210_B_19','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100103_210_B_21','20210319','TESTCORP','72','002','当“报告时点说明代码”为“31-月结日首次上报存量账户”时，个人借贷账户信息记录至少包含基本信息段','当“报告时点说明代码”为“31-月结日首次上报存量账户”时，个人借贷账户信息记录至少包含基本信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b  where  a.B_RPT_DATE_CODE=''31''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a where ( a.B_RPT_DATE_CODE=''31'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100103_210_B_21','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100103_210_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100103_210_B_22','20210319','TESTCORP','72','002','当“报告时点说明代码”为“31-月结日首次上报存量账户”时，若“账户类型”<>“C1”，则应包含月度表现信息段','当“报告时点说明代码”为“31-月结日首次上报存量账户”时，若“账户类型”<>“C1”，则应包含月度表现信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_H b  where  a.B_RPT_DATE_CODE=''31'' and a.B_ACCT_TYPE <>''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a where ( a.B_RPT_DATE_CODE=''31'' and a.B_ACCT_TYPE <>''C1'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100103_210_B_22','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100103_210_B_22','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100103_210_B_23','20210319','TESTCORP','72','002','当“报告时点说明代码”为“31-月结日首次上报存量账户”时，若“账户类型”为“R1/R3/R4”应包含授信额度信息段','当“报告时点说明代码”为“31-月结日首次上报存量账户”时，若“账户类型”为“R1/R3/R4”应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_F b  where  a.B_RPT_DATE_CODE=''31'' and a.B_ACCT_TYPE in (''R1'',''R3'',''R4'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a where ( a.B_RPT_DATE_CODE=''31'' and a.B_ACCT_TYPE in (''R1'',''R3'',''R4'') ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100103_210_B_23','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100103_210_B_23','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100103_210_B_24','20210319','TESTCORP','72','002','当“报告时点说明代码”为“31-月结日首次上报存量账户”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“是”，则应包含授信额度信息段','当“报告时点说明代码”为“31-月结日首次上报存量账户”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“是”，则应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''31'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG in (''1'',''2'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b where ( a.B_RPT_DATE_CODE=''31'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG in (''1'',''2'') ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100103_210_B_24','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100103_210_B_24','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100103_210_B_25','20210319','TESTCORP','72','002','当“报告时点说明代码”为“31-月结日首次上报存量账户”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”不是“大额专项分期卡”，则应包含授信额度信息段；','当“报告时点说明代码”为“31-月结日首次上报存量账户”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”不是“大额专项分期卡”，则应包含授信额度信息段；','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''31'' and a.B_ACCT_TYPE =''R2''and b.C_BUSI_DTL_LINES <>''82''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b where ( a.B_RPT_DATE_CODE=''31'' and a.B_ACCT_TYPE =''R2''and b.C_BUSI_DTL_LINES <>''82'' ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100103_210_B_25','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100103_210_B_25','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100104_210_B_20','20210319','TESTCORP','72','002','当“报告时点说明代码”为“31-月结日首次上报存量账户”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“否”，则不应包含授信额度信息段','当“报告时点说明代码”为“31-月结日首次上报存量账户”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“否”，则不应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''31'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''0''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100104_210_B_20','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100104_210_B_20','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100104_210_B_12','20210319','TESTCORP','72','002','当“报告时点说明代码”为“31-月结日首次上报存量账户”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”是“大额专项分期卡”，则不应包含授信额度信息段；','当“报告时点说明代码”为“31-月结日首次上报存量账户”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”是“大额专项分期卡”，则不应包含授信额度信息段；','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''31'' and a.B_ACCT_TYPE =''R2''and b.C_BUSI_DTL_LINES =''82''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100104_210_B_12','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100104_210_B_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100104_210_B_13','20210319','TESTCORP','72','002','当“报告时点说明代码”为“31-月结日首次上报存量账户”时，不应包含初始债权说明段','当“报告时点说明代码”为“31-月结日首次上报存量账户”时，不应包含初始债权说明段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_G b  where  a.B_RPT_DATE_CODE=''31''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100104_210_B_13','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100104_210_B_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100104_210_B_14','20210319','TESTCORP','72','002','当“报告时点说明代码”为“31-月结日首次上报存量账户”时，不应包含非月度表现信息段','当“报告时点说明代码”为“31-月结日首次上报存量账户”时，不应包含非月度表现信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_J b  where  a.B_RPT_DATE_CODE=''31''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100104_210_B_14','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100104_210_B_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100104_210_B_15','20210319','TESTCORP','72','002','当“报告时点说明代码”为“31-月结日首次上报存量账户”时，若“账户类型”为“D1/R1/R3/R4”，不应包含大额专项分期信息段；','当“报告时点说明代码”为“31-月结日首次上报存量账户”时，若“账户类型”为“D1/R1/R3/R4”，不应包含大额专项分期信息段；','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_I b  where  a.B_RPT_DATE_CODE=''31'' and a.B_ACCT_TYPE <>''R2''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100104_210_B_15','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100104_210_B_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100107_210_B_21','20210319','TESTCORP','72','002','当“报告时点说明代码”为“30-月度结算”时，至少应包含月度表现信息段。','当“报告时点说明代码”为“30-月度结算”时，至少应包含月度表现信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_H b  where  a.B_RPT_DATE_CODE=''30'' and a.B_ACCT_TYPE <>''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a where ( a.B_RPT_DATE_CODE=''30'' and a.B_ACCT_TYPE <>''C1'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100107_210_B_21','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100107_210_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100108_210_B_11','20210319','TESTCORP','72','002','当“报告时点说明代码”为“30-月度结算”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“否”，则不应包含授信额度信息段','当“报告时点说明代码”为“30-月度结算”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“否”，则不应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''30'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''0''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100108_210_B_11','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100108_210_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100108_210_B_12','20210319','TESTCORP','72','002','当“报告时点说明代码”为“30-月度结算”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”是“大额专项分期卡”，则不应包含授信额度信息段；','当“报告时点说明代码”为“30-月度结算”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”是“大额专项分期卡”，则不应包含授信额度信息段；','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''30'' and a.B_ACCT_TYPE =''R2''and b.C_BUSI_DTL_LINES =''82''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100108_210_B_12','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100108_210_B_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100108_210_B_13','20210319','TESTCORP','72','002','当“报告时点说明代码”为“30-月度结算”时，不应包含初始债权说明段','当“报告时点说明代码”为“30-月度结算”时，不应包含初始债权说明段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_G b  where  a.B_RPT_DATE_CODE=''30''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100108_210_B_13','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100108_210_B_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100108_210_B_14','20210319','TESTCORP','72','002','当“报告时点说明代码”为“30-月度结算”时，不应包含非月度表现信息段','当“报告时点说明代码”为“30-月度结算”时，不应包含非月度表现信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_J b  where  a.B_RPT_DATE_CODE=''30''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100108_210_B_14','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100108_210_B_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100108_210_B_15','20210319','TESTCORP','72','002','当“报告时点说明代码”为“30-月度结算”时：若“账户类型”为“D1/R1/R3/R4”，不应包含大额专项分期信息段；','当“报告时点说明代码”为“30-月度结算”时：若“账户类型”为“D1/R1/R3/R4”，不应包含大额专项分期信息段；','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_I b  where  a.B_RPT_DATE_CODE=''30'' and a.B_ACCT_TYPE <>''R2''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100108_210_B_15','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100108_210_B_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100109_210_B_21','20210319','TESTCORP','72','002','当“报告时点说明代码”为“40-收回逾期款项”时，至少应包含非月度表现信息段。','当“报告时点说明代码”为“40-收回逾期款项”时，至少应包含非月度表现信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_J b  where  a.B_RPT_DATE_CODE=''40''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a where ( a.B_RPT_DATE_CODE=''40'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100109_210_B_21','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100109_210_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100110_210_B_11','20210319','TESTCORP','72','002','当“报告时点说明代码”为“40-收回逾期款项”时，不应包含月度表现信息段','当“报告时点说明代码”为“40-收回逾期款项”时，不应包含月度表现信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_H b  where  a.B_RPT_DATE_CODE=''40''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100110_210_B_11','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100110_210_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100110_210_B_12','20210319','TESTCORP','72','002','当“报告时点说明代码”为“40-收回逾期款项”时，不应包大额专项分期信息段','当“报告时点说明代码”为“40-收回逾期款项”时，不应包大额专项分期信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_I b  where  a.B_RPT_DATE_CODE=''40''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100110_210_B_12','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100110_210_B_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100110_210_B_13','20210319','TESTCORP','72','002','当“报告时点说明代码”为“40-收回逾期款项”时，不应包含抵质押物信息段','当“报告时点说明代码”为“40-收回逾期款项”时，不应包含抵质押物信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_E b  where  a.B_RPT_DATE_CODE=''40''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100110_210_B_13','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100110_210_B_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100110_210_B_14','20210319','TESTCORP','72','002','当“报告时点说明代码”为“40-收回逾期款项”时，不应包含授信额度信息段','当“报告时点说明代码”为“40-收回逾期款项”时，不应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_F b  where  a.B_RPT_DATE_CODE=''40''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100110_210_B_14','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100110_210_B_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100110_210_B_15','20210319','TESTCORP','72','002','当“报告时点说明代码”为“40-收回逾期款项”时，不应包括初债权说明段','当“报告时点说明代码”为“40-收回逾期款项”时，不应包括初债权说明段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_G b  where  a.B_RPT_DATE_CODE=''40''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100110_210_B_15','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100110_210_B_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100110_210_B_16','20210319','TESTCORP','72','002','当“报告时点说明代码”为“40-收回逾期款项”时，若“账户类型”为“D1/R1/R2/R4”，不应包括特殊交易说明段','当“报告时点说明代码”为“40-收回逾期款项”时，若“账户类型”为“D1/R1/R2/R4”，不应包括特殊交易说明段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_K b  where  a.B_RPT_DATE_CODE=''40'' and a.B_ACCT_TYPE <>''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100110_210_B_16','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100110_210_B_16','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100110_210_B_17','20210319','TESTCORP','72','002','当“报告时点说明代码”为“40-收回逾期款项”时，不应包括基本信息段','当“报告时点说明代码”为“40-收回逾期款项”时，不应包括基本信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b  where  a.B_RPT_DATE_CODE=''40''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100110_210_B_17','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100110_210_B_17','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100110_210_B_18','20210319','TESTCORP','72','002','当“报告时点说明代码”为“40-收回逾期款项”时，不应包括相关还款责任人段。','当“报告时点说明代码”为“40-收回逾期款项”时，不应包括相关还款责任人段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_D b  where  a.B_RPT_DATE_CODE=''40''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100110_210_B_18','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100110_210_B_18','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100111_210_B_21','20210319','TESTCORP','72','002','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“D1/R1/R2/R3/R4”还应包含月度表现信息段；','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“D1/R1/R2/R3/R4”还应包含月度表现信息段；','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_H b  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE <>''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a where ( a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE <>''C1'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100111_210_B_21','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100111_210_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100111_210_B_22','20210319','TESTCORP','72','002','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“C1”还应包含非月度表现信息段。','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“C1”还应包含非月度表现信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_J b  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE =''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a where ( a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE =''C1'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100111_210_B_22','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100111_210_B_22','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100112_210_B_11','20210319','TESTCORP','72','002','当“报告时点说明代码”为“20-账户关闭”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“否”，则不应包含授信额度信息段','当“报告时点说明代码”为“20-账户关闭”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“否”，则不应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''0''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100112_210_B_11','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100112_210_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100112_210_B_12','20210319','TESTCORP','72','002','当“报告时点说明代码”为“20-账户关闭”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”是“大额专项分期卡”，则不应包含授信额度信息段；','当“报告时点说明代码”为“20-账户关闭”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”是“大额专项分期卡”，则不应包含授信额度信息段；','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE =''R2''and b.C_BUSI_DTL_LINES =''82''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100112_210_B_12','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100112_210_B_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100112_210_B_13','20210319','TESTCORP','72','002','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“D1/R1/R2/R3/R4”，不应包含初始债权说明段','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“D1/R1/R2/R3/R4”，不应包含初始债权说明段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_G b  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE <>''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100112_210_B_13','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100112_210_B_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100112_210_B_14','20210319','TESTCORP','72','002','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“D1/R1/R2/R3/R4”，不应包含非月度表现信息段','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“D1/R1/R2/R3/R4”，不应包含非月度表现信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_J b  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE <>''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100112_210_B_14','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100112_210_B_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100112_210_B_15','20210319','TESTCORP','72','002','当“报告时点说明代码”为“20-账户关闭”时：若“账户类型”为“D1/R1/R3/R4/C1”，不应包含大额专项分期信息段；','当“报告时点说明代码”为“20-账户关闭”时：若“账户类型”为“D1/R1/R3/R4/C1”，不应包含大额专项分期信息段；','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_I b  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE <>''R2''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100112_210_B_15','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100112_210_B_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100112_210_B_16','20210319','TESTCORP','72','002','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“C1”，不应包括授信额度信息段。','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“C1”，不应包括授信额度信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_F b  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE =''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100112_210_B_16','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100112_210_B_16','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100112_210_B_17','20210319','TESTCORP','72','002','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“C1”，不应包括月度表现段','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“C1”，不应包括月度表现段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_H b  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE =''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100112_210_B_17','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100112_210_B_17','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100112_210_B_18','20210319','TESTCORP','72','002','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“C1”，不应包括抵质押物信息段','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“C1”，不应包括抵质押物信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_E b  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE =''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100112_210_B_18','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100112_210_B_18','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100112_210_B_19','20210319','TESTCORP','72','002','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“C1”，不应包括相关还款责任人段','当“报告时点说明代码”为“20-账户关闭”时： 若“账户类型”为“C1”，不应包括相关还款责任人段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_D b  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE =''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100112_210_B_19','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100112_210_B_19','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100113_210_B_21','20210319','TESTCORP','72','002','当“报告时点说明代码”为“32-月结日账户关闭”时，至少应包括月度表现信息段。','当“报告时点说明代码”为“32-月结日账户关闭”时，至少应包括月度表现信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_H b  where  a.B_RPT_DATE_CODE=''32'' and a.B_ACCT_TYPE <>''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a where ( a.B_RPT_DATE_CODE=''32'' and a.B_ACCT_TYPE <>''C1'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100113_210_B_21','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100113_210_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100114_210_B_11','20210319','TESTCORP','72','002','当“报告时点说明代码”为“32-月结日账户关闭”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“否”，则不应包含授信额度信息段','当“报告时点说明代码”为“32-月结日账户关闭”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“否”，则不应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''32'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''0''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100114_210_B_11','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100114_210_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100114_210_B_12','20210319','TESTCORP','72','002','当“报告时点说明代码”为“32-月结日账户关闭”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”是“大额专项分期卡”，则不应包含授信额度信息段；','当“报告时点说明代码”为“32-月结日账户关闭”时， 若“账户类型”为“R2”，则如果基本信息段中的“借贷业务种类细分”是“大额专项分期卡”，则不应包含授信额度信息段；','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_F c  where  a.B_RPT_DATE_CODE=''32'' and a.B_ACCT_TYPE =''R2''and b.C_BUSI_DTL_LINES =''82''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100114_210_B_12','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100114_210_B_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100114_210_B_13','20210319','TESTCORP','72','002','当“报告时点说明代码”为“32-月结日账户关闭”时，不应包含初始债权说明段','当“报告时点说明代码”为“32-月结日账户关闭”时，不应包含初始债权说明段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_G b  where  a.B_RPT_DATE_CODE=''32''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100114_210_B_13','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100114_210_B_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100114_210_B_14','20210319','TESTCORP','72','002','当“报告时点说明代码”为“32-月结日账户关闭”时，不应包含非月度表现信息段','当“报告时点说明代码”为“32-月结日账户关闭”时，不应包含非月度表现信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_J b  where  a.B_RPT_DATE_CODE=''32''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100114_210_B_14','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100114_210_B_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100114_210_B_15','20210319','TESTCORP','72','002','当“报告时点说明代码”为“32-月结日账户关闭”时：若“账户类型”为“D1/R1/R3/R4”，不应包含大额专项分期信息段；','当“报告时点说明代码”为“32-月结日账户关闭”时：若“账户类型”为“D1/R1/R3/R4”，不应包含大额专项分期信息段；','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_I b  where  a.B_RPT_DATE_CODE=''32'' and a.B_ACCT_TYPE <>''R2''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100114_210_B_15','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100114_210_B_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2100115_210_B_23','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”或“31-月结日首次上报存量账户”时，若D1/R1/R2/R3/R4类账户的“基本信息段”中“担保方式”为“3-保证”、“5-组合（含保证）”时，则应包含相关还款责任人段。','当“报告时点说明代码”为“10-新开户”或“31-月结日首次上报存量账户”时，若D1/R1/R2/R3/R4类账户的“基本信息段”中“担保方式”为“3-保证”、“5-组合（含保证）”时，则应包含相关还款责任人段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_D c  where  a.B_RPT_DATE_CODE in (''10'',''31'') and a.B_ACCT_TYPE <>''C1'' and b.C_GUAR_MODE in (''3'',''5'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b where ( a.B_RPT_DATE_CODE in (''10'',''31'') and a.B_ACCT_TYPE <>''C1'' and b.C_GUAR_MODE in (''3'',''5'') ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2100115_210_B_23','20210415','TESTCORP','72','002','MBT_PM_210_B','R2100115_210_B_23','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P2100B01_210_B_11','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户”或“31-月结日首次上报存量账户”时，若D1/R1/R2/R3/R4类账户的“基本信息段”中“担保方式”为“1-质押”、“2-抵押”时，必须报送抵质押物信息段。','当“报告时点说明代码”为“10-新开户”或“31-月结日首次上报存量账户”时，若D1/R1/R2/R3/R4类账户的“基本信息段”中“担保方式”为“1-质押”、“2-抵押”时，必须报送抵质押物信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b , MBT_PM_210_E c  where  a.B_RPT_DATE_CODE in (''10'',''31'') and a.B_ACCT_TYPE <>''C1'' and b.C_GUAR_MODE in (''1'',''2'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_210_B a , MBT_PM_210_C b where ( a.B_RPT_DATE_CODE in (''10'',''31'') and a.B_ACCT_TYPE <>''C1'' and b.C_GUAR_MODE in (''1'',''2'') ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2100B01_210_B_11','20210415','TESTCORP','72','002','MBT_PM_210_B','P2100B01_210_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P2100B01_21X_B_01','20210319','TESTCORP','72','002','借款人证件类型+借款人证件号码要存在于个人客户基本信息记录中','借款人证件类型+借款人证件号码要存在于个人客户基本信息记录中','关联存在校验','人民银行','DATA_ID','','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_B a , MBT_PM_110_B b  where  a.B_ID_TYPE=b.B_ID_TYPE and a.B_ID_NUM=b.B_ID_NUM  and a.data_id = :DATA_ID) ','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2100B01_21X_B_01','20210415','TESTCORP','72','002','MBT_PM_210_B','P2100B01_21X_B_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2100B01_212_B_01','20210415','TESTCORP','72','002','MBT_PM_212_B','P2100B01_21X_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P2100E01_21X_E_01','20210319','TESTCORP','72','002','抵（质）押合同标识码要存在于抵（质）押合同信息记录中','抵（质）押合同标识码要存在于抵（质）押合同信息记录中','关联存在校验','人民银行','E_CCC','抵（质）押合同标识码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_E a , MBT_PM_510_B b  where  a.E_CCC=b.B_CC_CODE  and a.data_id = :DATA_ID) ','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2100E01_21X_E_01','20210415','TESTCORP','72','002','MBT_PM_210_E','P2100E01_21X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2100E01_212_E_01','20210415','TESTCORP','72','002','MBT_PM_212_E','P2100E01_21X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P2100F01_21X_F_01','20210319','TESTCORP','72','002','授信协议标识码要存在于个人授信协议信息记录中','授信协议标识码要存在于个人授信协议信息记录中','关联存在校验','人民银行','F_MCC','授信协议标识码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_210_F a , MBT_PM_220_B b  where  a.F_MCC=b.B_CONTRACT_CODE  and a.data_id = :DATA_ID) ','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2100F01_21X_F_01','20210415','TESTCORP','72','002','MBT_PM_210_F','P2100F01_21X_F_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2100F01_212_F_01','20210415','TESTCORP','72','002','MBT_PM_212_F','P2100F01_21X_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('I5100A01_510_B_01','20210319','TESTCORP','72','002','债务人两标与其他债务人两标不能相同。','债务人两标与其他债务人两标不能相同。','关联存在校验','人民银行','DATA_ID','','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_510_B a , MBT_PM_510_D b  where  a.B_RPT_DATE=b.B_RPT_DATE and a.B_CC_CODE=b.B_CC_CODE and a.B_CERT_TYPE=b.D_GUAR_CERT_TYPE and a.B_CERT_NUM=b.D_GUAR_CERT_NUM  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I5100A01_510_B_01','20210415','TESTCORP','72','002','MBT_PM_510_B','I5100A01_510_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R5100101_510_B_21','20210319','TESTCORP','72','002','当抵（质）押合同信息记录上报时，基本信息段必须出现。','当抵（质）押合同信息记录上报时，基本信息段必须出现。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_510_B a , MBT_PM_510_C b  where  a.B_RPT_DATE=b.B_RPT_DATE and a.B_CC_CODE=b.B_CC_CODE  and a.data_id = :DATA_ID) ','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R5100101_510_B_21','20210415','TESTCORP','72','002','MBT_PM_510_B','R5100101_510_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R5100102_510_C_21','20210319','TESTCORP','72','002','当抵（质）押合同信息记录中“合同类型”为“1-抵押合同”、时，记录中必须有抵押物信息段。','当抵（质）押合同信息记录中“合同类型”为“1-抵押合同”、时，记录中必须有抵押物信息段。','关联存在校验','人民银行','C_GUAR_TYPE','合同类型','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_510_C a , MBT_PM_510_E b  where  a.C_GUAR_TYPE=''1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_CC_CODE=b.B_CC_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_510_C a where ( a.C_GUAR_TYPE=''1'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R5100102_510_C_21','20210415','TESTCORP','72','002','MBT_PM_510_C','R5100102_510_C_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R5100102_510_C_22','20210319','TESTCORP','72','002','当抵（质）押合同信息记录中 “合同类型”为“2-质押合同”时，记录中必须有质押信息段。','当抵（质）押合同信息记录中 “合同类型”为“2-质押合同”时，记录中必须有质押信息段。','关联存在校验','人民银行','C_GUAR_TYPE','合同类型','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_510_C a , MBT_PM_510_F b  where  a.C_GUAR_TYPE=''2''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_CC_CODE=b.B_CC_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_510_C a where ( a.C_GUAR_TYPE=''2'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R5100102_510_C_22','20210415','TESTCORP','72','002','MBT_PM_510_C','R5100102_510_C_22','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R5100102_510_C_23','20210319','TESTCORP','72','002','当抵（质）押合同信息记录中“合同类型”为“1-抵押合同”、时，记录中不能包含质押物信息段。','当抵（质）押合同信息记录中“合同类型”为“1-抵押合同”、时，记录中不能包含质押物信息段。','关联存在校验','人民银行','C_GUAR_TYPE','合同类型','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_510_C a , MBT_PM_510_F b  where  a.C_GUAR_TYPE=''1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_CC_CODE=b.B_CC_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R5100102_510_C_23','20210415','TESTCORP','72','002','MBT_PM_510_C','R5100102_510_C_23','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R5100102_510_C_24','20210319','TESTCORP','72','002','当抵（质）押合同信息记录中 “合同类型”为“2-质押合同”时，记录中不能包含抵押信息段。','当抵（质）押合同信息记录中 “合同类型”为“2-质押合同”时，记录中不能包含抵押信息段。','关联存在校验','人民银行','C_GUAR_TYPE','合同类型','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_510_C a , MBT_PM_510_E b  where  a.C_GUAR_TYPE=''2''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_CC_CODE=b.B_CC_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R5100102_510_C_24','20210415','TESTCORP','72','002','MBT_PM_510_C','R5100102_510_C_24','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R2200101_220_B_21','20210319','TESTCORP','72','002','个人授信协议记录报送时，“额度信息段”必须出现。','个人授信协议记录报送时，“额度信息段”必须出现。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_220_B a , MBT_PM_220_D b  where  a.B_RPT_DATE=b.B_RPT_DATE and a.B_CONTRACT_CODE=b.B_CONTRACT_CODE  and a.data_id = :DATA_ID) ','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R2200101_220_B_21','20210415','TESTCORP','72','002','MBT_PM_220_B','R2200101_220_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('I2200A01_220_B_01','20210319','TESTCORP','72','002','“受信人证件类型”、“受信人证件号码”与“共同受信人身份标识类型”、“共同受信人身份标识号码”不能相同。','“受信人证件类型”、“受信人证件号码”与“共同受信人身份标识类型”、“共同受信人身份标识号码”不能相同。','关联存在校验','人民银行','DATA_ID','','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_220_B a , MBT_PM_220_C b  where  a.B_RPT_DATE=b.B_RPT_DATE and a.B_CONTRACT_CODE=b.B_CONTRACT_CODE and a.B_ID_TYPE=b.C_CERT_REL_ID_TYPE and a.B_ID_NUM=b.C_CERT_REL_ID_NUM  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2200A01_220_B_01','20210415','TESTCORP','72','002','MBT_PM_220_B','I2200A01_220_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P2200B01_22X_B_01','20210319','TESTCORP','72','002','受信人证件类型+受信人证件号码要存在于个人客户基本信息记录中','受信人证件类型+受信人证件号码要存在于个人客户基本信息记录中','关联存在校验','人民银行','DATA_ID','','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_220_B a , MBT_PM_110_B b  where  a.B_ID_TYPE=b.B_ID_TYPE and a.B_ID_NUM=b.B_ID_NUM  and a.data_id = :DATA_ID) ','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2200B01_22X_B_01','20210415','TESTCORP','72','002','MBT_PM_220_B','P2200B01_22X_B_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2200B01_222_B_01','20210415','TESTCORP','72','002','MBT_PM_222_B','P2200B01_22X_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R1100101_110_B_21','20210319','TESTCORP','72','002','当报告时点说明代码为“10-新增客户/首次上报”时，记录必须至少包含基本概况信息段。','当报告时点说明代码为“10-新增客户/首次上报”时，记录必须至少包含基本概况信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_110_B a , MBT_PM_110_D b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ID_TYPE=b.B_ID_TYPE and a.B_ID_NUM=b.B_ID_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_110_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R1100101_110_B_21','20210415','TESTCORP','72','002','MBT_PM_110_B','R1100101_110_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R1100101_110_B_22','20210319','TESTCORP','72','002','当报告时点说明代码为“10-新增客户/首次上报”时，记录必须至少包含婚姻信息段。','当报告时点说明代码为“10-新增客户/首次上报”时，记录必须至少包含婚姻信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_110_B a , MBT_PM_110_E b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ID_TYPE=b.B_ID_TYPE and a.B_ID_NUM=b.B_ID_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_110_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R1100101_110_B_22','20210415','TESTCORP','72','002','MBT_PM_110_B','R1100101_110_B_22','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R1100101_110_B_23','20210319','TESTCORP','72','002','当报告时点说明代码为“10-新增客户/首次上报”时，记录必须至少包含教育信息段。','当报告时点说明代码为“10-新增客户/首次上报”时，记录必须至少包含教育信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_110_B a , MBT_PM_110_F b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ID_TYPE=b.B_ID_TYPE and a.B_ID_NUM=b.B_ID_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_110_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R1100101_110_B_23','20210415','TESTCORP','72','002','MBT_PM_110_B','R1100101_110_B_23','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R1100101_110_B_24','20210319','TESTCORP','72','002','当报告时点说明代码为“10-新增客户/首次上报”时，记录必须至少包含职业信息段。','当报告时点说明代码为“10-新增客户/首次上报”时，记录必须至少包含职业信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_110_B a , MBT_PM_110_G b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ID_TYPE=b.B_ID_TYPE and a.B_ID_NUM=b.B_ID_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_110_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R1100101_110_B_24','20210415','TESTCORP','72','002','MBT_PM_110_B','R1100101_110_B_24','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R1100101_110_B_25','20210319','TESTCORP','72','002','当报告时点说明代码为“10-新增客户/首次上报”时，记录必须至少包含居住地址段。','当报告时点说明代码为“10-新增客户/首次上报”时，记录必须至少包含居住地址段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_110_B a , MBT_PM_110_H b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ID_TYPE=b.B_ID_TYPE and a.B_ID_NUM=b.B_ID_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_110_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R1100101_110_B_25','20210415','TESTCORP','72','002','MBT_PM_110_B','R1100101_110_B_25','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R1100101_110_B_26','20210319','TESTCORP','72','002','当报告时点说明代码为“10-新增客户/首次上报”时，记录必须至少包含通讯地址段。','当报告时点说明代码为“10-新增客户/首次上报”时，记录必须至少包含通讯地址段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_110_B a , MBT_PM_110_I b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ID_TYPE=b.B_ID_TYPE and a.B_ID_NUM=b.B_ID_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_110_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R1100101_110_B_26','20210415','TESTCORP','72','002','MBT_PM_110_B','R1100101_110_B_26','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P2200B02_220_B_01','20210319','TESTCORP','72','002','授信协议标识码要存在于个人借贷账户信息记录中','授信协议标识码要存在于个人借贷账户信息记录中','关联存在校验','人民银行','B_CONTRACT_CODE','授信协议标识码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_220_B a , MBT_PM_210_F b  where  a.B_CONTRACT_CODE=b.F_MCC  and a.data_id = :DATA_ID) ','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P2200B02_220_B_01','20210415','TESTCORP','72','002','MBT_PM_220_B','P2200B02_220_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P5100B01_510_B_01','20210319','TESTCORP','72','002','抵（质）押合同标识码应存在于个人借贷账户信息记录中','抵（质）押合同标识码应存在于个人借贷账户信息记录中','关联存在校验','人民银行','B_CC_CODE','抵（质）押合同标识码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_510_B a , MBT_PM_210_E b  where  a.B_INFO_ID_TYPE=''1''  and  a.B_CC_CODE=b.E_CCC  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_510_B a where ( a.B_INFO_ID_TYPE=''1'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P5100B01_510_B_01','20210415','TESTCORP','72','002','MBT_PM_510_B','P5100B01_510_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R3100101_310_B_21','20210319','TESTCORP','72','002','当报告时点说明代码为“报告时新增客户/首次上报”时，记录必须至少包含“基本概况段”。','当报告时点说明代码为“报告时新增客户/首次上报”时，记录必须至少包含“基本概况段”。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_310_B a , MBT_PM_310_D b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ENT_CERT=b.B_ENT_CERT and a.B_ENT_CERT_NUM=b.B_ENT_CERT_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_310_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R3100101_310_B_21','20210415','TESTCORP','72','002','MBT_PM_310_B','R3100101_310_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R3100101_310_B_22','20210319','TESTCORP','72','002','当报告时点说明代码为“报告时新增客户/首次上报”时，记录必须至少包含“主要组成人员段”。','当报告时点说明代码为“报告时新增客户/首次上报”时，记录必须至少包含“主要组成人员段”。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_310_B a , MBT_PM_310_E b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ENT_CERT=b.B_ENT_CERT and a.B_ENT_CERT_NUM=b.B_ENT_CERT_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_310_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R3100101_310_B_22','20210415','TESTCORP','72','002','MBT_PM_310_B','R3100101_310_B_22','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R3100101_310_B_23','20210319','TESTCORP','72','002','当报告时点说明代码为“报告时新增客户/首次上报”时，记录必须至少包含“联系方式段”。','当报告时点说明代码为“报告时新增客户/首次上报”时，记录必须至少包含“联系方式段”。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_310_B a , MBT_PM_310_I b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ENT_CERT=b.B_ENT_CERT and a.B_ENT_CERT_NUM=b.B_ENT_CERT_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_310_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R3100101_310_B_23','20210415','TESTCORP','72','002','MBT_PM_310_B','R3100101_310_B_23','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R3100102_310_B_11','20210319','TESTCORP','72','002','当基础段中“组织机构类型”为机关类型（以“3、31、32、33、34、35、36、37、39”为代码时），注册资本及主要出资人段不能出现。','当基础段中“组织机构类型”为机关类型（以“3、31、32、33、34、35、36、37、39”为代码时），注册资本及主要出资人段不能出现。','关联存在校验','人民银行','B_ORG_TYPE','组织机构类型','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_310_B a , MBT_PM_310_F b  where  a.B_ORG_TYPE in (''3'',''31'',''32'',''33'',''34'',''35'',''36'',''37'',''39'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ENT_CERT=b.B_ENT_CERT and a.B_ENT_CERT_NUM=b.B_ENT_CERT_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R3100102_310_B_11','20210415','TESTCORP','72','002','MBT_PM_310_B','R3100102_310_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('I4100A07_41X_B_01','20210319','TESTCORP','72','002','借款人“身份标识类型”、“身份标识号码”和“责任人身份标识类型”、“责任人身份标识号码”不能完全相同。','借款人“身份标识类型”、“身份标识号码”和“责任人身份标识类型”、“责任人身份标识号码”不能完全相同。','关联存在校验','人民银行','DATA_ID','','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_D b  where  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_ID_TYPE=b.D_ARLP_CERT_TYPE and a.B_ID_NUM=b.D_ARLP_CERT_NUM  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100A07_41X_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','I4100A07_41X_B_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100A07_412_B_01','20210415','TESTCORP','72','002','MBT_PM_412_B','I4100A07_41X_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P5100B01_510_B_02','20210319','TESTCORP','72','002','抵（质）押合同标识码应存在于企业借贷账户信息记录中','抵（质）押合同标识码应存在于企业借贷账户信息记录中','关联存在校验','人民银行','B_CC_CODE','抵（质）押合同标识码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_510_B a , MBT_PM_410_E b  where  a.B_INFO_ID_TYPE=''2''  and  a.B_CC_CODE=b.E_CCC  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_510_B a where ( a.B_INFO_ID_TYPE=''2'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P5100B01_510_B_02','20210415','TESTCORP','72','002','MBT_PM_510_B','P5100B01_510_B_02','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P4100B01_41X_B_01','20210319','TESTCORP','72','002','借款人身份标识类型+借款人身份标识号码要存在于企业客户基本信息记录中','借款人身份标识类型+借款人身份标识号码要存在于企业客户基本信息记录中','关联存在校验','人民银行','DATA_ID','','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_310_B b  where  a.B_ID_TYPE=b.B_ENT_CERT and a.B_ID_NUM=b.B_ENT_CERT_NUM  and a.data_id = :DATA_ID) ','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100B01_41X_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','P4100B01_41X_B_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100B01_412_B_01','20210415','TESTCORP','72','002','MBT_PM_412_B','P4100B01_41X_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P4100E01_41X_E_01','20210319','TESTCORP','72','002','抵（质）押合同标识码要存在于抵（质）押合同信息记录中','抵（质）押合同标识码要存在于抵（质）押合同信息记录中','关联存在校验','人民银行','E_CCC','抵（质）押合同标识码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_E a , MBT_PM_510_B b  where  a.E_CCC=b.B_CC_CODE  and a.data_id = :DATA_ID) ','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100E01_41X_E_01','20210415','TESTCORP','72','002','MBT_PM_410_E','P4100E01_41X_E_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100E01_412_E_01','20210415','TESTCORP','72','002','MBT_PM_412_E','P4100E01_41X_E_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P4100F01_41X_F_01','20210319','TESTCORP','72','002','授信协议标识码要存在于企业授信协议信息记录中','授信协议标识码要存在于企业授信协议信息记录中','关联存在校验','人民银行','F_MCC','授信协议标识码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_F a , MBT_PM_420_B b  where  a.F_MCC=b.B_CONTRACT_CODE  and a.data_id = :DATA_ID) ','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100F01_41X_F_01','20210415','TESTCORP','72','002','MBT_PM_410_F','P4100F01_41X_F_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100F01_412_F_01','20210415','TESTCORP','72','002','MBT_PM_412_F','P4100F01_41X_F_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100101_410_B_21','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户/首次报送”时，企业借贷账户信息记录至少包含基本信息段。','当“报告时点说明代码”为“10-新开户/首次报送”时，企业借贷账户信息记录至少包含基本信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100101_410_B_21','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100101_410_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100101_410_B_22','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户/首次报送”时，企业借贷账户信息记录至少包含还款表现信息段。','当“报告时点说明代码”为“10-新开户/首次报送”时，企业借贷账户信息记录至少包含还款表现信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_H b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100101_410_B_22','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100101_410_B_22','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100101_410_B_23','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户/首次报送”时，若“账户类型”为“R1/R4”应包含授信额度信息段','当“报告时点说明代码”为“10-新开户/首次报送”时，若“账户类型”为“R1/R4”应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_F b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE in (''R1'',''R4'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a where ( a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE in (''R1'',''R4'') ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100101_410_B_23','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100101_410_B_23','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100101_410_B_24','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户/首次报送”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“是”，则应包含授信额度信息段','当“报告时点说明代码”为“10-新开户/首次报送”时， 若“账户类型”为“D1”，则如果基本信息段中“分次放款标志”为“是”，则应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b , MBT_PM_410_F c  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG in (''1'',''2'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b where ( a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG in (''1'',''2'') ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100101_410_B_24','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100101_410_B_24','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100102_410_B_11','20210319','TESTCORP','72','002','当“报送时点说明代码”为“10-新开户/首次报送”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','当“报送时点说明代码”为“10-新开户/首次报送”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b , MBT_PM_410_F c  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''0''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100102_410_B_11','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100102_410_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100102_410_B_12','20210319','TESTCORP','72','002','当“报送时点说明代码”为“10-新开户/首次报送”时，若“账户类型”为“D1/D2/R1/R4”，不应包含初始债权说明段','当“报送时点说明代码”为“10-新开户/首次报送”时，若“账户类型”为“D1/D2/R1/R4”，不应包含初始债权说明段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_G b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE in (''D1'',''D2'',''R1'',''R4'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100102_410_B_12','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100102_410_B_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100102_410_B_13','20210319','TESTCORP','72','002','当“报送时点说明代码”为“10-新开户/首次报送”时，若“账户类型”为“D2/C1”，不应包含授信额度信息段','当“报送时点说明代码”为“10-新开户/首次报送”时，若“账户类型”为“D2/C1”，不应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_F b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE in (''D2'',''C1'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100102_410_B_13','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100102_410_B_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100102_410_B_14','20210319','TESTCORP','72','002','当“报送时点说明代码”为“10-新开户/首次报送”时，若“账户类型”为“D2/C1”，不应包含抵质押物信息段','当“报送时点说明代码”为“10-新开户/首次报送”时，若“账户类型”为“D2/C1”，不应包含抵质押物信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_E b  where  a.B_RPT_DATE_CODE=''10'' and a.B_ACCT_TYPE in (''D2'',''C1'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100102_410_B_14','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100102_410_B_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100103_410_B_21','20210319','TESTCORP','72','002','当“报告时点说明代码”为“20-账户关闭”时，企业借贷账户信息记录至少包含还款表现信息段。','当“报告时点说明代码”为“20-账户关闭”时，企业借贷账户信息记录至少包含还款表现信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_H b  where  a.B_RPT_DATE_CODE=''20''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a where ( a.B_RPT_DATE_CODE=''20'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100103_410_B_21','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100103_410_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100104_410_B_11','20210319','TESTCORP','72','002','当“报送时点说明代码”为“20-账户关闭”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','当“报送时点说明代码”为“20-账户关闭”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b , MBT_PM_410_F c  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''0''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100104_410_B_11','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100104_410_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100104_410_B_12','20210319','TESTCORP','72','002','当“报送时点说明代码”为“20-账户关闭”时，不应包含初始债权说明段','当“报送时点说明代码”为“20-账户关闭”时，不应包含初始债权说明段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_G b  where  a.B_RPT_DATE_CODE=''20''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100104_410_B_12','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100104_410_B_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100104_410_B_13','20210319','TESTCORP','72','002','当“报送时点说明代码”为“20-账户关闭”时，若“账户类型”为“D2/C1”，不应包含抵质押物信息段','当“报送时点说明代码”为“20-账户关闭”时，若“账户类型”为“D2/C1”，不应包含抵质押物信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_E b  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE in (''D2'',''C1'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100104_410_B_13','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100104_410_B_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100104_410_B_14','20210319','TESTCORP','72','002','当“报送时点说明代码”为“20-账户关闭”时，若“账户类型”为“D2/C1”，不应包含授信额度信息段','当“报送时点说明代码”为“20-账户关闭”时，若“账户类型”为“D2/C1”，不应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_F b  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE in (''D2'',''C1'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100104_410_B_14','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100104_410_B_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100104_410_B_15','20210319','TESTCORP','72','002','当“报送时点说明代码”为“20-账户关闭”时，“账户类型”为“C1”，不应包含相关还款责任信息段。','当“报送时点说明代码”为“20-账户关闭”时，“账户类型”为“C1”，不应包含相关还款责任信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_D b  where  a.B_RPT_DATE_CODE=''20'' and a.B_ACCT_TYPE = ''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100104_410_B_15','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100104_410_B_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100105_410_B_21','20210319','TESTCORP','72','002','当“报送时点说明代码”为“31-开户后放款”时，若“账户类型”为“D1”，且“分次放款标识”为“2”，还应包含基本信息段。','当“报送时点说明代码”为“31-开户后放款”时，若“账户类型”为“D1”，且“分次放款标识”为“2”，还应包含基本信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b  where  a.B_RPT_DATE_CODE=''31''and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''2''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b  where ( a.B_RPT_DATE_CODE=''31''and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''2'' ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100105_410_B_21','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100105_410_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100105_410_B_22','20210319','TESTCORP','72','002','当“报送时点说明代码”为“31-开户后放款”时，若“账户类型”为“D1”，且“分次放款标识”为“2”，还应包含还款表现信息段。','当“报送时点说明代码”为“31-开户后放款”时，若“账户类型”为“D1”，且“分次放款标识”为“2”，还应包含还款表现信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b , MBT_PM_410_H c  where  a.B_RPT_DATE_CODE=''31''and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''2''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b where ( a.B_RPT_DATE_CODE=''31''and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''2'' ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100105_410_B_22','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100105_410_B_22','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100106_410_B_11','20210319','TESTCORP','72','002','当“报送时点说明代码”为“31-开户后放款”时，不应包含初始债权说明段','当“报送时点说明代码”为“31-开户后放款”时，不应包含初始债权说明段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_G b  where  a.B_RPT_DATE_CODE=''31''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100106_410_B_11','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100106_410_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100107_410_B_21','20210319','TESTCORP','72','002','当“报送时点说明代码”为“32-约定还款日结算”时，若“账户类型”为“D1/D2/R4”，应包含还款表现信息段。','当“报送时点说明代码”为“32-约定还款日结算”时，若“账户类型”为“D1/D2/R4”，应包含还款表现信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_H b  where  a.B_RPT_DATE_CODE=''32''and a.B_ACCT_TYPE in (''D1'',''D2'',''R4'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a where ( a.B_RPT_DATE_CODE=''32''and a.B_ACCT_TYPE in (''D1'',''D2'',''R4'') ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100107_410_B_21','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100107_410_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100108_410_B_11','20210319','TESTCORP','72','002','当“报送时点说明代码”为“32-约定还款日结算”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','当“报送时点说明代码”为“32-约定还款日结算”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b , MBT_PM_410_F c  where  a.B_RPT_DATE_CODE=''32'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''0''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100108_410_B_11','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100108_410_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100108_410_B_12','20210319','TESTCORP','72','002','当“报送时点说明代码”为“32-约定还款日结算”时，不应包含初始债权说明段。','当“报送时点说明代码”为“32-约定还款日结算”时，不应包含初始债权说明段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_G b  where  a.B_RPT_DATE_CODE=''32''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100108_410_B_12','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100108_410_B_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100108_410_B_13','20210319','TESTCORP','72','002','当“报送时点说明代码”为“32-约定还款日结算”时，若“账户类型”为“D2”，不应包含授信额度信息段','当“报送时点说明代码”为“32-约定还款日结算”时，若“账户类型”为“D2”，不应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_F b  where  a.B_RPT_DATE_CODE=''32'' and a.B_ACCT_TYPE=''D2''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100108_410_B_13','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100108_410_B_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100108_410_B_14','20210319','TESTCORP','72','002','当“报送时点说明代码”为“32-约定还款日结算”时，若“账户类型”为“D2”，不应包含抵质押物信息段','当“报送时点说明代码”为“32-约定还款日结算”时，若“账户类型”为“D2”，不应包含抵质押物信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_E b  where  a.B_RPT_DATE_CODE=''32'' and a.B_ACCT_TYPE =''D2''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100108_410_B_14','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100108_410_B_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100109_410_B_21','20210319','TESTCORP','72','002','当“报送时点说明代码”为“33-实际还款”时，若“账户类型”为“D1/D2/R4/C1”，应包含还款表现信息段。','当“报送时点说明代码”为“33-实际还款”时，若“账户类型”为“D1/D2/R4/C1”，应包含还款表现信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_H b  where  a.B_RPT_DATE_CODE=''33''and a.B_ACCT_TYPE in (''D1'',''D2'',''R4'',''C1'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a where ( a.B_RPT_DATE_CODE=''33''and a.B_ACCT_TYPE in (''D1'',''D2'',''R4'',''C1'') ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100109_410_B_21','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100109_410_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100110_410_B_11','20210319','TESTCORP','72','002','当“报送时点说明代码”为“33-实际还款”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','当“报送时点说明代码”为“33-实际还款”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b , MBT_PM_410_F c  where  a.B_RPT_DATE_CODE=''33'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''0''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100110_410_B_11','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100110_410_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100110_410_B_12','20210319','TESTCORP','72','002','当“报送时点说明代码”为“33-实际还款”时，不应包含初始债权说明段。','当“报送时点说明代码”为“33-实际还款”时，不应包含初始债权说明段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_G b  where  a.B_RPT_DATE_CODE=''33''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100110_410_B_12','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100110_410_B_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100110_410_B_13','20210319','TESTCORP','72','002','当“报送时点说明代码”为“33-实际还款”时，若“账户类型”为“D2/C1”，不应包含授信额度信息段','当“报送时点说明代码”为“33-实际还款”时，若“账户类型”为“D2/C1”，不应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_F b  where  a.B_RPT_DATE_CODE=''33'' and a.B_ACCT_TYPE in (''D2'',''C1'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100110_410_B_13','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100110_410_B_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100110_410_B_14','20210319','TESTCORP','72','002','当“报送时点说明代码”为“33-实际还款”时，若“账户类型”为“D2/C1”，不应包含抵质押物信息段','当“报送时点说明代码”为“33-实际还款”时，若“账户类型”为“D2/C1”，不应包含抵质押物信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_E b  where  a.B_RPT_DATE_CODE=''33'' and a.B_ACCT_TYPE in (''D2'',''C1'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100110_410_B_14','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100110_410_B_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100110_410_B_15','20210319','TESTCORP','72','002','当“报送时点说明代码”为“33-实际还款”时，若“账户类型”为“C1”，不应包含相关还款责任人段','当“报送时点说明代码”为“33-实际还款”时，若“账户类型”为“C1”，不应包含相关还款责任人段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_D b  where  a.B_RPT_DATE_CODE=''33'' and a.B_ACCT_TYPE = ''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100110_410_B_15','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100110_410_B_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100111_410_B_21','20210319','TESTCORP','72','002','当“报送时点说明代码”为“41-五级分类调整”时，若“账户类型”为“D1/D2/R4/C1”，应包含还款表现信息段。','当“报送时点说明代码”为“41-五级分类调整”时，若“账户类型”为“D1/D2/R4/C1”，应包含还款表现信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_H b  where  a.B_RPT_DATE_CODE=''41''and a.B_ACCT_TYPE in (''D1'',''D2'',''R4'',''C1'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a where ( a.B_RPT_DATE_CODE=''41''and a.B_ACCT_TYPE in (''D1'',''D2'',''R4'',''C1'') ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100111_410_B_21','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100111_410_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100112_410_B_11','20210319','TESTCORP','72','002','当“报送时点说明代码”为“41-五级分类调整”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','当“报送时点说明代码”为“41-五级分类调整”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b , MBT_PM_410_F c  where  a.B_RPT_DATE_CODE=''41'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''0''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100112_410_B_11','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100112_410_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100112_410_B_12','20210319','TESTCORP','72','002','当“报送时点说明代码”为“41-五级分类调整”时，不应包含初始债权说明段。','当“报送时点说明代码”为“41-五级分类调整”时，不应包含初始债权说明段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_G b  where  a.B_RPT_DATE_CODE=''41''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100112_410_B_12','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100112_410_B_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100112_410_B_13','20210319','TESTCORP','72','002','当“报送时点说明代码”为“41-五级分类调整”时，若“账户类型”为“D2/C1”，不应包含授信额度信息段','当“报送时点说明代码”为“41-五级分类调整”时，若“账户类型”为“D2/C1”，不应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_F b  where  a.B_RPT_DATE_CODE=''41'' and a.B_ACCT_TYPE in (''D2'',''C1'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100112_410_B_13','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100112_410_B_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100112_410_B_14','20210319','TESTCORP','72','002','当“报送时点说明代码”为“41-五级分类调整”时，若“账户类型”为“D2/C1”，不应包含抵质押物信息段','当“报送时点说明代码”为“41-五级分类调整”时，若“账户类型”为“D2/C1”，不应包含抵质押物信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_E b  where  a.B_RPT_DATE_CODE=''41'' and a.B_ACCT_TYPE in (''D2'',''C1'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100112_410_B_14','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100112_410_B_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100112_410_B_15','20210319','TESTCORP','72','002','当“报送时点说明代码”为“41-五级分类调整”时，若“账户类型”为“C1”，不应包含相关还款责任人段','当“报送时点说明代码”为“41-五级分类调整”时，若“账户类型”为“C1”，不应包含相关还款责任人段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_D b  where  a.B_RPT_DATE_CODE=''41'' and a.B_ACCT_TYPE = ''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100112_410_B_15','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100112_410_B_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100113_410_B_21','20210319','TESTCORP','72','002','当“报送时点说明代码”为“42-展期发生”时，若“账户类型”为“D1/R4”，应包含还款表现信息段。','当“报送时点说明代码”为“42-展期发生”时，若“账户类型”为“D1/R4”，应包含还款表现信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_H b  where  a.B_RPT_DATE_CODE=''42''and a.B_ACCT_TYPE in (''D1'',''R4'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a where ( a.B_RPT_DATE_CODE=''42''and a.B_ACCT_TYPE in (''D1'',''R4'') ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100113_410_B_21','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100113_410_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100113_410_B_22','20210319','TESTCORP','72','002','当“报送时点说明代码”为“42-展期发生”时，若“账户类型”为“D1/R4”，应包含特定交易说明段。','当“报送时点说明代码”为“42-展期发生”时，若“账户类型”为“D1/R4”，应包含特定交易说明段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_I b  where  a.B_RPT_DATE_CODE=''42''and a.B_ACCT_TYPE in (''D1'',''R4'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a where ( a.B_RPT_DATE_CODE=''42''and a.B_ACCT_TYPE in (''D1'',''R4'') ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100113_410_B_22','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100113_410_B_22','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100114_410_B_11','20210319','TESTCORP','72','002','当“报送时点说明代码”为“42-展期发生”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','当“报送时点说明代码”为“42-展期发生”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b , MBT_PM_410_F c  where  a.B_RPT_DATE_CODE=''42'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''0''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100114_410_B_11','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100114_410_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100114_410_B_12','20210319','TESTCORP','72','002','当“报送时点说明代码”为“42-展期发生”时，不应包含初始债权说明段。','当“报送时点说明代码”为“42-展期发生”时，不应包含初始债权说明段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_G b  where  a.B_RPT_DATE_CODE=''42''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100114_410_B_12','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100114_410_B_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100115_410_B_21','20210319','TESTCORP','72','002','当“报告时点说明代码”为“49-其他报送日”时，企业借贷账户信息记录至少包含还款表现信息段。','当“报告时点说明代码”为“49-其他报送日”时，企业借贷账户信息记录至少包含还款表现信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_H b  where  a.B_RPT_DATE_CODE=''49''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a where ( a.B_RPT_DATE_CODE=''49'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100115_410_B_21','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100115_410_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100116_410_B_11','20210319','TESTCORP','72','002','当“报送时点说明代码”为“49-其他报送日”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','当“报送时点说明代码”为“49-其他报送日”时，若“账户类型”为“D1”，如果“分次放款标识”为“0”，则不应包含授信额度信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b , MBT_PM_410_F c  where  a.B_RPT_DATE_CODE=''49'' and a.B_ACCT_TYPE =''D1''and b.C_FLAG =''0''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100116_410_B_11','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100116_410_B_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100116_410_B_12','20210319','TESTCORP','72','002','当“报送时点说明代码”为“49-其他报送日”时，不应包含初始债权说明段。','当“报送时点说明代码”为“49-其他报送日”时，不应包含初始债权说明段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_G b  where  a.B_RPT_DATE_CODE=''49''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100116_410_B_12','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100116_410_B_12','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100116_410_B_13','20210319','TESTCORP','72','002','当“报送时点说明代码”为“49-其他报送日”时，若“账户类型”为“D2/C1”，不应包含授信额度信息段','当“报送时点说明代码”为“49-其他报送日”时，若“账户类型”为“D2/C1”，不应包含授信额度信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_F b  where  a.B_RPT_DATE_CODE=''49'' and a.B_ACCT_TYPE in (''D2'',''C1'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100116_410_B_13','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100116_410_B_13','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100116_410_B_14','20210319','TESTCORP','72','002','当“报送时点说明代码”为“49-其他报送日”时，若“账户类型”为“D2/C1”，不应包含抵质押物信息段','当“报送时点说明代码”为“49-其他报送日”时，若“账户类型”为“D2/C1”，不应包含抵质押物信息段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_E b  where  a.B_RPT_DATE_CODE=''49'' and a.B_ACCT_TYPE in (''D2'',''C1'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100116_410_B_14','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100116_410_B_14','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100116_410_B_15','20210319','TESTCORP','72','002','当“报送时点说明代码”为“49-其他报送日”时，若“账户类型”为“C1”，不应包含相关还款责任人段','当“报送时点说明代码”为“49-其他报送日”时，若“账户类型”为“C1”，不应包含相关还款责任人段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_D b  where  a.B_RPT_DATE_CODE=''49'' and a.B_ACCT_TYPE = ''C1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100116_410_B_15','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100116_410_B_15','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100117_410_B_21','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户/首次上报”，若“基本信息段”的“担保方式”为“1-保证”时，必须报送相关还款责任人段。','当“报告时点说明代码”为“10-新开户/首次上报”，若“基本信息段”的“担保方式”为“1-保证”时，必须报送相关还款责任人段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b , MBT_PM_410_D c  where  a.B_RPT_DATE_CODE=''10'' and b.C_GUAR_MODE=''1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b where ( a.B_RPT_DATE_CODE=''10'' and b.C_GUAR_MODE=''1'' ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100117_410_B_21','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100117_410_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4100118_410_B_21','20210319','TESTCORP','72','002','当“报告时点说明代码”为“10-新开户/首次上报”，若“基本信息段”的“担保方式”为“2-质押”、“3-抵押”时，必须报送抵质押物信息段。','当“报告时点说明代码”为“10-新开户/首次上报”，若“基本信息段”的“担保方式”为“2-质押”、“3-抵押”时，必须报送抵质押物信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b , MBT_PM_410_E c  where  a.B_RPT_DATE_CODE=''10'' and b.C_GUAR_MODE in (''2'',''3'')  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b where ( a.B_RPT_DATE_CODE=''10'' and b.C_GUAR_MODE in (''2'',''3'') ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100118_410_B_21','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100118_410_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4200101_420_B_21','20210319','TESTCORP','72','002','企业授信协议记录报送时，“额度信息段”必须出现。','企业授信协议记录报送时，“额度信息段”必须出现。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_420_B a , MBT_PM_420_D b  where  a.B_RPT_DATE=b.B_RPT_DATE and a.B_CONTRACT_CODE=b.B_CONTRACT_CODE  and a.data_id = :DATA_ID) ','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4200101_420_B_21','20210415','TESTCORP','72','002','MBT_PM_420_B','R4200101_420_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4400101_440_B_21','20210319','TESTCORP','72','002','“报告时点说明代码”为“10-开户/首次上报”时，至少应出现“基本信息段”。','“报告时点说明代码”为“10-开户/首次上报”时，至少应出现“基本信息段”。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_440_B a , MBT_PM_440_C b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_440_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4400101_440_B_21','20210415','TESTCORP','72','002','MBT_PM_440_B','R4400101_440_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4400101_440_B_22','20210319','TESTCORP','72','002','“报告时点说明代码”为“10-开户/首次上报”时，至少应出现“在保责任信息段”。','“报告时点说明代码”为“10-开户/首次上报”时，至少应出现“在保责任信息段”。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_440_B a , MBT_PM_440_D b  where  a.B_RPT_DATE_CODE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_440_B a where ( a.B_RPT_DATE_CODE=''10'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4400101_440_B_22','20210415','TESTCORP','72','002','MBT_PM_440_B','R4400101_440_B_22','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4400102_440_B_21','20210319','TESTCORP','72','002','“报告时点说明代码”为“20-账户关闭”时，至少包含在保责任信息段。','“报告时点说明代码”为“20-账户关闭”时，至少包含在保责任信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_440_B a , MBT_PM_440_D b  where  a.B_RPT_DATE_CODE=''20''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_440_B a where ( a.B_RPT_DATE_CODE=''20'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4400102_440_B_21','20210415','TESTCORP','72','002','MBT_PM_440_B','R4400102_440_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4400103_440_B_21','20210319','TESTCORP','72','002','“报告时点说明代码”为“30-在保责任变化”时，至少包含在保责任信息段。','“报告时点说明代码”为“30-在保责任变化”时，至少包含在保责任信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_440_B a , MBT_PM_440_D b  where  a.B_RPT_DATE_CODE=''30''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_440_B a where ( a.B_RPT_DATE_CODE=''30'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4400103_440_B_21','20210415','TESTCORP','72','002','MBT_PM_440_B','R4400103_440_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4400104_440_B_21','20210319','TESTCORP','72','002','“报告时点说明代码”为“10-新开户/首次上报”且“反担保方式”为“1-保证”时，至少包含相关还款责任人段。','“报告时点说明代码”为“10-新开户/首次上报”且“反担保方式”为“1-保证”时，至少包含相关还款责任人段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_440_B a , MBT_PM_440_C b , MBT_PM_440_E c  where  a.B_RPT_DATE_CODE=''10'' and b.C_GUAR_MODE=''1''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_RPT_DATE=c.B_RPT_DATE and a.B_ACCT_CODE=c.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_440_B a , MBT_PM_440_C b where ( a.B_RPT_DATE_CODE=''10'' and b.C_GUAR_MODE=''1'' ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4400104_440_B_21','20210415','TESTCORP','72','002','MBT_PM_440_B','R4400104_440_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4400106_440_B_21','20210319','TESTCORP','72','002','“报告时点说明代码”为“50-其他信息变化”时，不包括在保责任信息段。','“报告时点说明代码”为“50-其他信息变化”时，不包括在保责任信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_440_B a , MBT_PM_440_D b  where  a.B_RPT_DATE_CODE=''50''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4400106_440_B_21','20210415','TESTCORP','72','002','MBT_PM_440_B','R4400106_440_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('R4400107_440_B_21','20210319','TESTCORP','72','002','“报告时点说明代码”为“40-五级分类调整”时，至少包含在保责任信息段。','“报告时点说明代码”为“40-五级分类调整”时，至少包含在保责任信息段。','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_440_B a , MBT_PM_440_D b  where  a.B_RPT_DATE_CODE=''40''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_440_B a where ( a.B_RPT_DATE_CODE=''40'' ) and  a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4400107_440_B_21','20210415','TESTCORP','72','002','MBT_PM_440_B','R4400107_440_B_21','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P4200B01_42X_B_01','20210319','TESTCORP','72','002','受信人证件类型+受信人证件号码要存在于企业基本信息记录中','受信人证件类型+受信人证件号码要存在于企业基本信息记录中','关联存在校验','人民银行','DATA_ID','','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_420_B a , MBT_PM_310_B b  where  a.B_ID_TYPE=b.B_ENT_CERT and a.B_ID_NUM=b.B_ENT_CERT_NUM  and a.data_id = :DATA_ID) ','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4200B01_42X_B_01','20210415','TESTCORP','72','002','MBT_PM_420_B','P4200B01_42X_B_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4200B01_422_B_01','20210415','TESTCORP','72','002','MBT_PM_422_B','P4200B01_42X_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P4200B02_420_B_01','20210319','TESTCORP','72','002','授信协议标识码要存在于企业借贷账户信息记录中','授信协议标识码要存在于企业借贷账户信息记录中','关联存在校验','人民银行','B_CONTRACT_CODE','授信协议标识码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_420_B a , MBT_PM_410_F b  where  a.B_CONTRACT_CODE=b.F_MCC  and a.data_id = :DATA_ID) ','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4200B02_420_B_01','20210415','TESTCORP','72','002','MBT_PM_420_B','P4200B02_420_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P4400B01_44X_B_01','20210319','TESTCORP','72','002','债务人身份标识类型+债务人身份标识号码要存在于企业客户基本信息记录中','债务人身份标识类型+债务人身份标识号码要存在于企业客户基本信息记录中','关联存在校验','人民银行','DATA_ID','','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_440_B a , MBT_PM_310_B b  where  a.B_ID_TYPE=b.B_ENT_CERT and a.B_ID_NUM=b.B_ENT_CERT_NUM  and a.data_id = :DATA_ID) ','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4400B01_44X_B_01','20210415','TESTCORP','72','002','MBT_PM_440_B','P4400B01_44X_B_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4400B01_442_B_01','20210415','TESTCORP','72','002','MBT_PM_442_B','P4400B01_44X_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P4400F01_440_G_01','20210319','TESTCORP','72','002','授信协议标识码要存在于企业授信协议信息记录中','授信协议标识码要存在于企业授信协议信息记录中','关联存在校验','人民银行','G_MCC','授信协议标识码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_440_G a , MBT_PM_420_B b  where  a.G_MCC=b.B_CONTRACT_CODE  and a.data_id = :DATA_ID) ','auto_generator','biaojian','N');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4400F01_440_G_01','20210415','TESTCORP','72','002','MBT_PM_440_G','P4400F01_440_G_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('I4200A01_420_B_01','20210319','TESTCORP','72','002','“受信人身份标识类型”、“受信人身份标识号码”与“共同受信人身份标识类型”、“共同受信人身份标识号码”不能相同。','“受信人身份标识类型”、“受信人身份标识号码”与“共同受信人身份标识类型”、“共同受信人身份标识号码”不能相同。','关联存在校验','人民银行','DATA_ID','','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_420_B a , MBT_PM_420_C b  where  a.B_RPT_DATE=b.B_RPT_DATE and a.B_CONTRACT_CODE=b.B_CONTRACT_CODE and a.B_ID_TYPE=b.C_CERT_REL_ID_TYPE and a.B_ID_NUM=b.C_CERT_REL_ID_NUM  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4200A01_420_B_01','20210415','TESTCORP','72','002','MBT_PM_420_B','I4200A01_420_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('I4400A02_440_B_01','20210319','TESTCORP','72','002','“债务人身份标识类型”、“债务人身份标识号码”与“责任人身份标识类型”、“责任人身份标识号码”不能相同。','“债务人身份标识类型”、“债务人身份标识号码”与“责任人身份标识类型”、“责任人身份标识号码”不能相同。','关联存在校验','人民银行','DATA_ID','','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_440_B a , MBT_PM_440_E b  where  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE and a.B_ID_TYPE=b.ARLP_CERT_TYPE and a.B_ID_NUM=b.ARLP_CERT_NUM  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4400A02_440_B_01','20210415','TESTCORP','72','002','MBT_PM_440_B','I4400A02_440_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,DATA_CRT_USER,rsv5,rsv1)values('P4100A10_410_B_01','20210319','TESTCORP','72','002','当账户类型为D2时，目前暂不报送特定交易说明段','当账户类型为D2时，目前暂不报送特定交易说明段','关联存在校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where not exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_I b  where  a.B_ACCT_TYPE=''D2''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and a.data_id = :DATA_ID)','auto_generator','biaojian','Y');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100A10_410_B_01','20210415','TESTCORP','72','002','MBT_PM_410_B','P4100A10_410_B_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100A08_21X_H_01','20210319','TESTCORP','72','002','若“报告时点说明代码”为“32-月结日账户关闭”和“20-账户关闭”时，“账户状态”为“3-关闭”/“4-销户”。','若“报告时点说明代码”为“32-月结日账户关闭”和“20-账户关闭”时，“账户状态”为“3-关闭”/“4-销户”。','关联逻辑校验','人民银行','H_ACCT_STATUS','账户状态','R','Y','','if (B_RPT_DATE_CODE in [''32'',''20'']) {
    if (H_ACCT_STATUS in [''3'',''4'']) {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A08_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100A08_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A08_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100A08_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100A11_21X_C_01','20210319','TESTCORP','72','002','若账户信息记录中的“报告时点说明代码”为“10-新开户”时，账户信息记录的信息报告日期T与开户日期t必须满足T-t<30。','若账户信息记录中的“报告时点说明代码”为“10-新开户”时，账户信息记录的信息报告日期T与开户日期t必须满足T-t<30。','关联逻辑校验','人民银行','C_OPEN_DATE','开户日期','R','Y','','import java.text.SimpleDateFormat
if (!isEmpty(B_RPT_DATE)&& !isEmpty(C_OPEN_DATE)&&B_RPT_DATE_CODE=="10") {
   SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd")
    String rptDate = B_RPT_DATE;
    def newdate = format.parse(rptDate)
    String openDate = C_OPEN_DATE;
    def newdate1 = format.parse(openDate)
    long diffMilliseconds = newdate.getTime() - newdate1.getTime()
    BigDecimal diffDays = diffMilliseconds / (24 * 60 * 60 * 1000)
    if (diffDays>=30)
      return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A11_21X_C_01','20210415','TESTCORP','72','002','MBT_PM_210_C','I2100A11_21X_C_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A11_212_C_01','20210415','TESTCORP','72','002','MBT_PM_212_C','I2100A11_21X_C_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100A12_21X_H_01','20210319','TESTCORP','72','002','若账户信息记录中的“报告时点说明代码”为“20-账户关闭”时，信息记录的信息报告日期T与账户关闭日期t必须满足T-t<30。','若账户信息记录中的“报告时点说明代码”为“20-账户关闭”时，信息记录的信息报告日期T与账户关闭日期t必须满足T-t<30。','关联逻辑校验','人民银行','H_CLOSE_DATE','账户关闭日期','R','Y','','import java.text.SimpleDateFormat
if (!isEmpty(B_RPT_DATE)&& !isEmpty(H_CLOSE_DATE)&&B_RPT_DATE_CODE=="20") {
   SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd")
    String rptDate = B_RPT_DATE;
    def newdate = format.parse(rptDate)
    String openDate = H_CLOSE_DATE;
    def newdate1 = format.parse(openDate)
    long diffMilliseconds = newdate.getTime() - newdate1.getTime()
    BigDecimal diffDays = diffMilliseconds / (24 * 60 * 60 * 1000)
    if (diffDays>=30)
      return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A12_21X_H_01','20210415','TESTCORP','72','002','MBT_PM_210_H','I2100A12_21X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A12_212_H_01','20210415','TESTCORP','72','002','MBT_PM_212_H','I2100A12_21X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I2100A12_21X_J_01','20210319','TESTCORP','72','002','若账户信息记录中的“报告时点说明代码”为“20-账户关闭”时，信息记录的信息报告日期T与账户关闭日期t必须满足T-t<30。','若账户信息记录中的“报告时点说明代码”为“20-账户关闭”时，信息记录的信息报告日期T与账户关闭日期t必须满足T-t<30。','关联逻辑校验','人民银行','J_CLOSE_DATE','账户关闭日期','R','Y','','import java.text.SimpleDateFormat
if (!isEmpty(B_RPT_DATE)&& !isEmpty(J_CLOSE_DATE)&&B_RPT_DATE_CODE=="20") {
   SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd")
    String rptDate = B_RPT_DATE;
    def newdate = format.parse(rptDate)
    String openDate = J_CLOSE_DATE;
    def newdate1 = format.parse(openDate)
    long diffMilliseconds = newdate.getTime() - newdate1.getTime()
    BigDecimal diffDays = diffMilliseconds / (24 * 60 * 60 * 1000)
    if (diffDays>=30)
      return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A12_21X_J_01','20210415','TESTCORP','72','002','MBT_PM_210_J','I2100A12_21X_J_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I2100A12_212_J_01','20210415','TESTCORP','72','002','MBT_PM_212_J','I2100A12_21X_J_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('P1100D01_110_D_01','20210319','TESTCORP','72','002','证件类型为“10-身份证”时，出生日期必须与身份证第7-14位相同','证件类型为“10-身份证”时，出生日期必须与身份证第7-14位相同','关联逻辑校验','人民银行','D_DOB','出生日期','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_110_D a , MBT_PM_110_B b  where  b.B_ID_TYPE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ID_TYPE=b.B_ID_TYPE and a.B_ID_NUM=b.B_ID_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and  a.D_DOB=substr(b.B_ID_NUM,7,8)  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_110_D a , MBT_PM_110_B b  where ( b.B_ID_TYPE=''10'' ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ID_TYPE=b.B_ID_TYPE and a.B_ID_NUM=b.B_ID_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and  a.data_id = :DATA_ID)','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P1100D01_110_D_01','20210415','TESTCORP','72','002','MBT_PM_110_D','P1100D01_110_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('P1100D02_110_D_01','20210319','TESTCORP','72','002','证件类型为“10-身份证”时，性别必须与身份证第17位相匹配','证件类型为“10-身份证”时，性别必须与身份证第17位相匹配','关联逻辑校验','人民银行','D_SEX','性别','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_110_D a , MBT_PM_110_B b  where  b.B_ID_TYPE=''10''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ID_TYPE=b.B_ID_TYPE and a.B_ID_NUM=b.B_ID_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and ((D_SEX = ''1'' and substr(a.B_ID_NUM,17,1) in (''1'',''3'',''5'',''7'',''9'')) or (D_SEX = ''2'' and substr(a.B_ID_NUM,17,1) in (''2'',''4'',''6'',''8'',''0'')) or (D_SEX = ''0'' and substr(a.B_ID_NUM,17,1) in (''0''))) and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_110_D a , MBT_PM_110_B b  where ( b.B_ID_TYPE=''10'' ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ID_TYPE=b.B_ID_TYPE and a.B_ID_NUM=b.B_ID_NUM and a.B_INF_SURC_CODE=b.B_INF_SURC_CODE  and  a.data_id = :DATA_ID)','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P1100D02_110_D_01','20210415','TESTCORP','72','002','MBT_PM_110_D','P1100D02_110_D_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('I4100A03_41X_H_01','20210319','TESTCORP','72','002','当且仅当“报告时点说明代码”为“20-账户关闭” 时，“账户状态”为“21-关闭”。','当且仅当“报告时点说明代码”为“20-账户关闭” 时，“账户状态”为“21-关闭”。','关联逻辑校验','人民银行','H_ACCT_STATUS','账户状态','R','Y','','if (B_RPT_DATE_CODE == ''20'') {
    if (H_ACCT_STATUS ==''21'') {
        return true
    }
    return false
}
return true','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100A03_41X_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','I4100A03_41X_H_01','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('I4100A03_412_H_01','20210415','TESTCORP','72','002','MBT_PM_412_H','I4100A03_41X_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('R4100105_410_C_11','20210319','TESTCORP','72','002','当“报送时点说明代码”为“31-开户后放款”时，若“账户类型”为“D1”，且“分次放款标识”为“0”、“1”，则不适用放款日报送时点。','当“报送时点说明代码”为“31-开户后放款”时，若“账户类型”为“D1”，且“分次放款标识”为“0”、“1”，则不适用放款日报送时点。','关联逻辑校验','人民银行','B_RPT_DATE_CODE','报告时点说明代码','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_B a , MBT_PM_410_C b  where  a.B_RPT_DATE_CODE = ''31''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and  b.C_FLAG not in (''0'',''1'')  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_B a where ( a.B_RPT_DATE_CODE = ''31'' ) and  a.data_id = :DATA_ID)','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('R4100105_410_C_11','20210415','TESTCORP','72','002','MBT_PM_410_B','R4100105_410_C_11','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('P4100H01_410_H_01','20210319','TESTCORP','72','002','[机构核查]还款方式为"到期一次还本付息"，未到期且未关闭时，"下一次约定还款日期"与"到期日期"应相同','[机构核查]还款方式为"到期一次还本付息"，未到期且未关闭时，"下一次约定还款日期"与"到期日期"应相同','关联逻辑校验','人民银行','H_NXT_AGRR_RPY_DATE','下一次约定还款日期','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_H a , MBT_PM_410_C b  where  b.C_REPAY_MODE=''21'' and b.B_RPT_DATE<= b.C_DUE_DATE and b.B_ACCT_TYPE in (''D1'',''R4'') and a.H_ACCT_STATUS<>''21''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and  a.H_NXT_AGRR_RPY_DATE=b.C_DUE_DATE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_H a , MBT_PM_410_C b  where ( b.C_REPAY_MODE=''21'' and b.B_RPT_DATE<= b.C_DUE_DATE and b.B_ACCT_TYPE in (''D1'',''R4'') and a.H_ACCT_STATUS<>''21'' ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and  a.data_id = :DATA_ID)','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100H01_410_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','P4100H01_410_H_01','auto_generator');

insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('P4100H03_410_H_01','20210319','TESTCORP','72','002','[机构核查]企业借贷账户还款方式为分期还款，未到期且未关闭时，"下一次约定还款日期"不应为空','[机构核查]企业借贷账户还款方式为分期还款，未到期且未关闭时，"下一次约定还款日期"不应为空','关联逻辑校验','人民银行','H_ACCT_STATUS','账户状态','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_H a , MBT_PM_410_C b  where  b.C_REPAY_MODE like ''1%'' and b.B_RPT_DATE<= b.C_DUE_DATE and b.B_ACCT_TYPE in (''D1'',''R4'') and a.H_ACCT_STATUS<>''21''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and  a.H_NXT_AGRR_RPY_DATE is not null  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_H a , MBT_PM_410_C b  where ( b.C_REPAY_MODE like ''1%'' and b.B_RPT_DATE<= b.C_DUE_DATE and b.B_ACCT_TYPE in (''D1'',''R4'') and a.H_ACCT_STATUS<>''21'' ) and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and  a.data_id = :DATA_ID)','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100H03_410_H_01','20210415','TESTCORP','72','002','MBT_PM_410_H','P4100H03_410_H_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('P4100I01_410_I_01','20210319','TESTCORP','72','002','[机构核查]企业借贷账户提前还款，还款表现段中最近一次实际还款金额应该大于0','[机构核查]企业借贷账户提前还款，还款表现段中最近一次实际还款金额应该大于0','关联逻辑校验','人民银行','I_CHAN_TRAN_TYPE','交易类型','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_I a , MBT_PM_410_H b  where  a.I_CHAN_TRAN_TYPE=''12''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and  b.H_LAT_RPY_AMT>0  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_I a where ( a.I_CHAN_TRAN_TYPE=''12'' ) and  a.data_id = :DATA_ID)','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100I01_410_I_01','20210415','TESTCORP','72','002','MBT_PM_410_I','P4100I01_410_I_01','auto_generator');
insert into gp_qc_rule(data_id,data_date,corp_id,org_id,group_id,rule_desc,rule_message,rule_type,rule_source,field,field_name,trimmable,nullable,exists_sql,script,rsv2,DATA_CRT_USER)values('P4100I02_410_I_01','20210319','TESTCORP','72','002','[机构核查]企业借贷账户提前还款，最近一次实际还款日期应该与特定交易说明段中交易日期相同','[机构核查]企业借贷账户提前还款，最近一次实际还款日期应该与特定交易说明段中交易日期相同','关联逻辑校验','人民银行','I_CHAN_TRAN_TYPE','交易类型','R','Y','select 1 from dual where exists (select 1 from  MBT_PM_410_I a , MBT_PM_410_H b  where  a.I_CHAN_TRAN_TYPE=''12''  and  a.B_RPT_DATE=b.B_RPT_DATE and a.B_ACCT_CODE=b.B_ACCT_CODE  and  b.H_LAT_RPY_DATE=a.I_TRAN_DATE  and a.data_id = :DATA_ID) or not exists (select 1 from  MBT_PM_410_I a where ( a.I_CHAN_TRAN_TYPE=''12'' ) and  a.data_id = :DATA_ID)','','Y','auto_generator');
insert into gp_qc_rule_map(data_id,data_date,corp_id,org_id,group_id,rule_set_id,rule_id,DATA_CRT_USER)values('P4100I02_410_I_01','20210415','TESTCORP','72','002','MBT_PM_410_I','P4100I02_410_I_01','auto_generator');
update gp_qc_rule set script='if (!isEmpty(H_SETT_DATE) && !isEmpty(H_MONTH)) {
    return H_SETT_DATE.startsWith(H_MONTH)
}
return true' where data_id = 'I2100H02_21X_H_01';
update gp_qc_rule set rsv2 = 'Q' where rsv2 = 'Y';
update gp_qc_rule set rsv2 = 'R' where rsv2 = 'N';
update gp_qc_rule set rsv2 = 'Q' where rsv1 = 'Y';
update gp_qc_rule set rsv2 = 'R' where rsv1 = 'N';
update gp_qc_rule set enumeration = '' where in_field is not null;
update GP_QC_RULE T set t.inq_org_id = (case length(t.data_id) when 17 then replace(substr(t.data_id,10,3),'X','0') else replace(substr(t.data_id,11,3),'X','0') end);
update GP_QC_RULE T set t.inq_group_id = (case length(t.data_id) when 17 then substr(t.data_id,14,1) else substr(t.data_id,15,1) end);
update gp_qc_rule set trimmable='Y';
update gp_qc_rule set inq_group_id = 'FF' where data_id in (select rule_id from gp_qc_rule_map where rule_set_id = 'MBT_PM_310_FF');
INSERT INTO GP_QC_RULE_MAP (DATA_ID, DATA_DATE, CORP_ID, ORG_ID, GROUP_ID, INQ_ORG_ID, INQ_GROUP_ID, RULE_SET_ID, RULE_ID, CHECK_FLAG, CHECK_DESC, CHECK_ERR_TYPE, NEXT_ACTION, DATA_STATUS, DATA_FLAG, DATA_OP, DATA_SOURCE, DATA_VERSION, DATA_REJ_DESC, DATA_DEL_DESC, DATA_CRT_USER, DATA_CRT_DATE, DATA_CRT_TIME, DATA_CHG_USER, DATA_CHG_DATE, DATA_CHG_TIME, DATA_APV_USER, DATA_APV_DATE, DATA_APV_TIME, RSV1, RSV2, RSV3, RSV4, RSV5)
select DATA_ID||'_b', DATA_DATE, CORP_ID, ORG_ID, GROUP_ID, INQ_ORG_ID, INQ_GROUP_ID,  rule_set_id||'_b', RULE_ID, CHECK_FLAG, CHECK_DESC, CHECK_ERR_TYPE, NEXT_ACTION, DATA_STATUS, DATA_FLAG, DATA_OP, DATA_SOURCE, DATA_VERSION, DATA_REJ_DESC, DATA_DEL_DESC, DATA_CRT_USER, DATA_CRT_DATE, DATA_CRT_TIME, DATA_CHG_USER, DATA_CHG_DATE, DATA_CHG_TIME, DATA_APV_USER, DATA_APV_DATE, DATA_APV_TIME, RSV1, RSV2, RSV3, RSV4, RSV5
from gp_qc_rule_map where rule_set_id like '%510%' and length(rule_set_id)=12;

Process finished with exit code 0
